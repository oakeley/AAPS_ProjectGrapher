{
  "database_overview": {
    "repositories": [
      {
        "repository": "EN_new",
        "files": 3214,
        "loc": 313337,
        "functions": 15108,
        "avg_eating_now": 349.88,
        "is_eating_now_repo": true,
        "files_with_source": 3214
      },
      {
        "repository": "EN_old",
        "files": 3024,
        "loc": 289730,
        "functions": 14335,
        "avg_eating_now": 301.65,
        "is_eating_now_repo": true,
        "files_with_source": 3023
      },
      {
        "repository": "AAPS_source",
        "files": 3208,
        "loc": 310836,
        "functions": 15030,
        "avg_eating_now": 99.14,
        "is_eating_now_repo": false,
        "files_with_source": 3208
      }
    ],
    "global": {
      "total_files": 9446,
      "total_loc": 913903,
      "total_functions": 44473,
      "avg_importance": 466.47066800762354,
      "avg_eating_now": 249.28583527418996,
      "max_eating_now": 1944.0,
      "critical_eating_now_files": 7117,
      "files_with_source": 9445
    },
    "file_types": [
      {
        "type": "kt",
        "count": 8472,
        "avg_eating_now_score": 251.28942398489056
      },
      {
        "type": "java",
        "count": 974,
        "avg_eating_now_score": 231.8583162217658
      }
    ]
  },
  "top_eating_now_files": {
    "global": [
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "package": "app.aaps.ui.activities.fragments",
        "repository": "EN_new",
        "eating_now_score": 1944.0,
        "importance": 3983.48,
        "complexity": 15,
        "functions": 22,
        "loc": 449,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "package": "app.aaps.ui.activities.fragments",
        "repository": "EN_old",
        "eating_now_score": 1894.0,
        "importance": 3876.46,
        "complexity": 22,
        "functions": 22,
        "loc": 473,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "package": "app.aaps.ui.activities.fragments",
        "repository": "AAPS_source",
        "eating_now_score": 1694.0,
        "importance": 3466.48,
        "complexity": 15,
        "functions": 22,
        "loc": 449,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "PersistenceLayer.kt",
        "package": "app.aaps.core.interfaces.db",
        "repository": "EN_new",
        "eating_now_score": 1572.0,
        "importance": 3272.0,
        "complexity": 156,
        "functions": 173,
        "loc": 1386,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "package": "app.aaps.database.impl.daos",
        "repository": "EN_old",
        "eating_now_score": 1450.0,
        "importance": 2961.52,
        "complexity": 2,
        "functions": 20,
        "loc": 76,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "package": "app.aaps.database.daos",
        "repository": "EN_new",
        "eating_now_score": 1420.0,
        "importance": 2911.32,
        "complexity": 2,
        "functions": 17,
        "loc": 66,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "PersistenceLayerImpl.kt",
        "package": "app.aaps.database.persistence",
        "repository": "EN_new",
        "eating_now_score": 1385.0,
        "importance": 2869.0,
        "complexity": 66,
        "functions": 174,
        "loc": 1803,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "BolusWizard.kt",
        "package": "app.aaps.core.objects.wizard",
        "repository": "EN_new",
        "eating_now_score": 1384.0,
        "importance": 2874.4,
        "complexity": 63,
        "functions": 15,
        "loc": 620,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorXdripImpl.kt",
        "package": "app.aaps.plugins.sync.xdrip",
        "repository": "EN_new",
        "eating_now_score": 1375.0,
        "importance": 2837.82,
        "complexity": 76,
        "functions": 37,
        "loc": 571,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorV1.kt",
        "package": "app.aaps.plugins.sync.nsclient",
        "repository": "EN_new",
        "eating_now_score": 1360.0,
        "importance": 2812.52,
        "complexity": 93,
        "functions": 33,
        "loc": 806,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorV3.kt",
        "package": "app.aaps.plugins.sync.nsclientV3",
        "repository": "EN_new",
        "eating_now_score": 1360.0,
        "importance": 2810.3,
        "complexity": 91,
        "functions": 33,
        "loc": 695,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorXdripImpl.kt",
        "package": "app.aaps.plugins.sync.xdrip",
        "repository": "EN_old",
        "eating_now_score": 1325.0,
        "importance": 2727.82,
        "complexity": 76,
        "functions": 37,
        "loc": 571,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "PersistenceLayer.kt",
        "package": "app.aaps.core.interfaces.db",
        "repository": "AAPS_source",
        "eating_now_score": 1322.0,
        "importance": 2755.0,
        "complexity": 156,
        "functions": 173,
        "loc": 1386,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "IobCobCalculatorPlugin.kt",
        "package": "app.aaps.plugins.main.iob.iobCobCalculator",
        "repository": "EN_new",
        "eating_now_score": 1316.0,
        "importance": 2758.82,
        "complexity": 73,
        "functions": 25,
        "loc": 671,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorV3.kt",
        "package": "app.aaps.plugins.sync.nsclientV3",
        "repository": "EN_old",
        "eating_now_score": 1310.0,
        "importance": 2700.24,
        "complexity": 91,
        "functions": 33,
        "loc": 692,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DataSyncSelectorV1.kt",
        "package": "app.aaps.plugins.sync.nsclient",
        "repository": "EN_old",
        "eating_now_score": 1310.0,
        "importance": 2702.44,
        "complexity": 93,
        "functions": 33,
        "loc": 802,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "BolusWizard.kt",
        "package": "app.aaps.core.main.wizard",
        "repository": "EN_old",
        "eating_now_score": 1258.0,
        "importance": 2622.68,
        "complexity": 53,
        "functions": 13,
        "loc": 534,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "StoreDataForDbImpl.kt",
        "package": "app.aaps.plugins.sync.nsShared",
        "repository": "EN_new",
        "eating_now_score": 1252.0,
        "importance": 2593.26,
        "complexity": 23,
        "functions": 36,
        "loc": 643,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "DetailedBolusInfo.kt",
        "package": "app.aaps.core.interfaces.pump",
        "repository": "EN_old",
        "eating_now_score": 1230.0,
        "importance": 2560.5,
        "complexity": 11,
        "functions": 7,
        "loc": 150,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      },
      {
        "filename": "IobCobCalculatorPlugin.kt",
        "package": "app.aaps.plugins.main.iob.iobCobCalculator",
        "repository": "EN_old",
        "eating_now_score": 1206.0,
        "importance": 2529.06,
        "complexity": 79,
        "functions": 31,
        "loc": 683,
        "file_type": "kt",
        "is_critical": true,
        "has_source": true,
        "outgoing": 0,
        "incoming": 0,
        "total_connections": 0
      }
    ],
    "by_repository": {
      "AAPS_source": [
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "repository": "AAPS_source",
          "eating_now_score": 1694.0,
          "importance": 3466.48,
          "complexity": 15,
          "functions": 22,
          "loc": 449,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayer.kt",
          "package": "app.aaps.core.interfaces.db",
          "repository": "AAPS_source",
          "eating_now_score": 1322.0,
          "importance": 2755.0,
          "complexity": 156,
          "functions": 173,
          "loc": 1386,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayerImpl.kt",
          "package": "app.aaps.database.persistence",
          "repository": "AAPS_source",
          "eating_now_score": 1135.0,
          "importance": 2352.0,
          "complexity": 66,
          "functions": 174,
          "loc": 1803,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "BolusWizard.kt",
          "package": "app.aaps.core.objects.wizard",
          "repository": "AAPS_source",
          "eating_now_score": 1134.0,
          "importance": 2357.4,
          "complexity": 63,
          "functions": 15,
          "loc": 620,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorXdripImpl.kt",
          "package": "app.aaps.plugins.sync.xdrip",
          "repository": "AAPS_source",
          "eating_now_score": 1125.0,
          "importance": 2320.82,
          "complexity": 76,
          "functions": 37,
          "loc": 571,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV1.kt",
          "package": "app.aaps.plugins.sync.nsclient",
          "repository": "AAPS_source",
          "eating_now_score": 1110.0,
          "importance": 2295.52,
          "complexity": 93,
          "functions": 33,
          "loc": 806,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV3.kt",
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "AAPS_source",
          "eating_now_score": 1110.0,
          "importance": 2293.3,
          "complexity": 91,
          "functions": 33,
          "loc": 695,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "CarbsDao.kt",
          "package": "app.aaps.database.daos",
          "repository": "AAPS_source",
          "eating_now_score": 1070.0,
          "importance": 2193.72,
          "complexity": 1,
          "functions": 16,
          "loc": 61,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "IobCobCalculatorPlugin.kt",
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "AAPS_source",
          "eating_now_score": 1066.0,
          "importance": 2241.82,
          "complexity": 73,
          "functions": 25,
          "loc": 671,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "StoreDataForDbImpl.kt",
          "package": "app.aaps.plugins.sync.nsShared",
          "repository": "AAPS_source",
          "eating_now_score": 1002.0,
          "importance": 2076.26,
          "complexity": 23,
          "functions": 36,
          "loc": 643,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        }
      ],
      "EN_new": [
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "repository": "EN_new",
          "eating_now_score": 1944.0,
          "importance": 3983.48,
          "complexity": 15,
          "functions": 22,
          "loc": 449,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayer.kt",
          "package": "app.aaps.core.interfaces.db",
          "repository": "EN_new",
          "eating_now_score": 1572.0,
          "importance": 3272.0,
          "complexity": 156,
          "functions": 173,
          "loc": 1386,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "CarbsDao.kt",
          "package": "app.aaps.database.daos",
          "repository": "EN_new",
          "eating_now_score": 1420.0,
          "importance": 2911.32,
          "complexity": 2,
          "functions": 17,
          "loc": 66,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayerImpl.kt",
          "package": "app.aaps.database.persistence",
          "repository": "EN_new",
          "eating_now_score": 1385.0,
          "importance": 2869.0,
          "complexity": 66,
          "functions": 174,
          "loc": 1803,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "BolusWizard.kt",
          "package": "app.aaps.core.objects.wizard",
          "repository": "EN_new",
          "eating_now_score": 1384.0,
          "importance": 2874.4,
          "complexity": 63,
          "functions": 15,
          "loc": 620,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorXdripImpl.kt",
          "package": "app.aaps.plugins.sync.xdrip",
          "repository": "EN_new",
          "eating_now_score": 1375.0,
          "importance": 2837.82,
          "complexity": 76,
          "functions": 37,
          "loc": 571,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV3.kt",
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "EN_new",
          "eating_now_score": 1360.0,
          "importance": 2810.3,
          "complexity": 91,
          "functions": 33,
          "loc": 695,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV1.kt",
          "package": "app.aaps.plugins.sync.nsclient",
          "repository": "EN_new",
          "eating_now_score": 1360.0,
          "importance": 2812.52,
          "complexity": 93,
          "functions": 33,
          "loc": 806,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "IobCobCalculatorPlugin.kt",
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "EN_new",
          "eating_now_score": 1316.0,
          "importance": 2758.82,
          "complexity": 73,
          "functions": 25,
          "loc": 671,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "StoreDataForDbImpl.kt",
          "package": "app.aaps.plugins.sync.nsShared",
          "repository": "EN_new",
          "eating_now_score": 1252.0,
          "importance": 2593.26,
          "complexity": 23,
          "functions": 36,
          "loc": 643,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        }
      ],
      "EN_old": [
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "repository": "EN_old",
          "eating_now_score": 1894.0,
          "importance": 3876.46,
          "complexity": 22,
          "functions": 22,
          "loc": 473,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "CarbsDao.kt",
          "package": "app.aaps.database.impl.daos",
          "repository": "EN_old",
          "eating_now_score": 1450.0,
          "importance": 2961.52,
          "complexity": 2,
          "functions": 20,
          "loc": 76,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorXdripImpl.kt",
          "package": "app.aaps.plugins.sync.xdrip",
          "repository": "EN_old",
          "eating_now_score": 1325.0,
          "importance": 2727.82,
          "complexity": 76,
          "functions": 37,
          "loc": 571,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV1.kt",
          "package": "app.aaps.plugins.sync.nsclient",
          "repository": "EN_old",
          "eating_now_score": 1310.0,
          "importance": 2702.44,
          "complexity": 93,
          "functions": 33,
          "loc": 802,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV3.kt",
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "EN_old",
          "eating_now_score": 1310.0,
          "importance": 2700.24,
          "complexity": 91,
          "functions": 33,
          "loc": 692,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "BolusWizard.kt",
          "package": "app.aaps.core.main.wizard",
          "repository": "EN_old",
          "eating_now_score": 1258.0,
          "importance": 2622.68,
          "complexity": 53,
          "functions": 13,
          "loc": 534,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DetailedBolusInfo.kt",
          "package": "app.aaps.core.interfaces.pump",
          "repository": "EN_old",
          "eating_now_score": 1230.0,
          "importance": 2560.5,
          "complexity": 11,
          "functions": 7,
          "loc": 150,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "IobCobCalculatorPlugin.kt",
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "EN_old",
          "eating_now_score": 1206.0,
          "importance": 2529.06,
          "complexity": 79,
          "functions": 31,
          "loc": 683,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DefaultValueHelperImpl.kt",
          "package": "app.aaps.implementation.profile",
          "repository": "EN_old",
          "eating_now_score": 1205.0,
          "importance": 2466.96,
          "complexity": 20,
          "functions": 14,
          "loc": 148,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "AutotuneIob.kt",
          "package": "app.aaps.plugins.aps.autotune",
          "repository": "EN_old",
          "eating_now_score": 1193.0,
          "importance": 2466.3,
          "complexity": 70,
          "functions": 20,
          "loc": 495,
          "file_type": "kt",
          "is_critical": true,
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        }
      ]
    }
  },
  "eating_now_architecture": {
    "global": {
      "core_eating_now_files": [
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "repository": "EN_new",
          "eating_now_score": 1944.0,
          "importance": 3983.48,
          "package": "app.aaps.ui.activities.fragments",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "repository": "EN_old",
          "eating_now_score": 1894.0,
          "importance": 3876.46,
          "package": "app.aaps.ui.activities.fragments",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "TreatmentsBolusCarbsFragment.kt",
          "repository": "AAPS_source",
          "eating_now_score": 1694.0,
          "importance": 3466.48,
          "package": "app.aaps.ui.activities.fragments",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayer.kt",
          "repository": "EN_new",
          "eating_now_score": 1572.0,
          "importance": 3272.0,
          "package": "app.aaps.core.interfaces.db",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "CarbsDao.kt",
          "repository": "EN_old",
          "eating_now_score": 1450.0,
          "importance": 2961.52,
          "package": "app.aaps.database.impl.daos",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "CarbsDao.kt",
          "repository": "EN_new",
          "eating_now_score": 1420.0,
          "importance": 2911.32,
          "package": "app.aaps.database.daos",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayerImpl.kt",
          "repository": "EN_new",
          "eating_now_score": 1385.0,
          "importance": 2869.0,
          "package": "app.aaps.database.persistence",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "BolusWizard.kt",
          "repository": "EN_new",
          "eating_now_score": 1384.0,
          "importance": 2874.4,
          "package": "app.aaps.core.objects.wizard",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorXdripImpl.kt",
          "repository": "EN_new",
          "eating_now_score": 1375.0,
          "importance": 2837.82,
          "package": "app.aaps.plugins.sync.xdrip",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV1.kt",
          "repository": "EN_new",
          "eating_now_score": 1360.0,
          "importance": 2812.52,
          "package": "app.aaps.plugins.sync.nsclient",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV3.kt",
          "repository": "EN_new",
          "eating_now_score": 1360.0,
          "importance": 2810.3,
          "package": "app.aaps.plugins.sync.nsclientV3",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorXdripImpl.kt",
          "repository": "EN_old",
          "eating_now_score": 1325.0,
          "importance": 2727.82,
          "package": "app.aaps.plugins.sync.xdrip",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "PersistenceLayer.kt",
          "repository": "AAPS_source",
          "eating_now_score": 1322.0,
          "importance": 2755.0,
          "package": "app.aaps.core.interfaces.db",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "IobCobCalculatorPlugin.kt",
          "repository": "EN_new",
          "eating_now_score": 1316.0,
          "importance": 2758.82,
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        },
        {
          "filename": "DataSyncSelectorV3.kt",
          "repository": "EN_old",
          "eating_now_score": 1310.0,
          "importance": 2700.24,
          "package": "app.aaps.plugins.sync.nsclientV3",
          "has_source": true,
          "outgoing": 0,
          "incoming": 0,
          "total_connections": 0
        }
      ],
      "eating_now_packages": [
        {
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "EN_new",
          "file_count": 1,
          "avg_eating_now": 1316.0,
          "max_eating_now": 1316.0,
          "total_loc": 671
        },
        {
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "EN_old",
          "file_count": 1,
          "avg_eating_now": 1206.0,
          "max_eating_now": 1206.0,
          "total_loc": 683
        },
        {
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "EN_new",
          "file_count": 3,
          "avg_eating_now": 1151.33,
          "max_eating_now": 1360.0,
          "total_loc": 2141
        },
        {
          "package": "app.aaps.implementation.wizard",
          "repository": "EN_new",
          "file_count": 1,
          "avg_eating_now": 1142.0,
          "max_eating_now": 1142.0,
          "total_loc": 212
        },
        {
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "EN_old",
          "file_count": 3,
          "avg_eating_now": 1078.67,
          "max_eating_now": 1310.0,
          "total_loc": 1981
        },
        {
          "package": "app.aaps.implementation.wizard",
          "repository": "EN_old",
          "file_count": 1,
          "avg_eating_now": 1076.0,
          "max_eating_now": 1076.0,
          "total_loc": 209
        },
        {
          "package": "app.aaps.database.persistence",
          "repository": "EN_new",
          "file_count": 2,
          "avg_eating_now": 1067.5,
          "max_eating_now": 1385.0,
          "total_loc": 1928
        },
        {
          "package": "app.aaps.plugins.main.iob.iobCobCalculator",
          "repository": "AAPS_source",
          "file_count": 1,
          "avg_eating_now": 1066.0,
          "max_eating_now": 1066.0,
          "total_loc": 671
        },
        {
          "package": "app.aaps.core.interfaces.db",
          "repository": "EN_new",
          "file_count": 2,
          "avg_eating_now": 1000.0,
          "max_eating_now": 1572.0,
          "total_loc": 1413
        },
        {
          "package": "app.aaps.plugins.aps.EN",
          "repository": "EN_new",
          "file_count": 2,
          "avg_eating_now": 905.0,
          "max_eating_now": 965.0,
          "total_loc": 1783
        },
        {
          "package": "app.aaps.plugins.sync.nsclientV3",
          "repository": "AAPS_source",
          "file_count": 3,
          "avg_eating_now": 901.33,
          "max_eating_now": 1110.0,
          "total_loc": 2141
        },
        {
          "package": "app.aaps.implementation.wizard",
          "repository": "AAPS_source",
          "file_count": 1,
          "avg_eating_now": 892.0,
          "max_eating_now": 892.0,
          "total_loc": 212
        },
        {
          "package": "app.aaps.pump.danarv2",
          "repository": "EN_new",
          "file_count": 1,
          "avg_eating_now": 888.0,
          "max_eating_now": 888.0,
          "total_loc": 417
        },
        {
          "package": "app.aaps.ui.di",
          "repository": "EN_new",
          "file_count": 1,
          "avg_eating_now": 884.0,
          "max_eating_now": 884.0,
          "total_loc": 88
        },
        {
          "package": "info.nightscout.androidaps.danaRv2",
          "repository": "EN_old",
          "file_count": 1,
          "avg_eating_now": 884.0,
          "max_eating_now": 884.0,
          "total_loc": 413
        }
      ],
      "eating_now_dependents": []
    },
    "by_repository": {
      "AAPS_source": {
        "core_eating_now_files": [
          {
            "filename": "TreatmentsBolusCarbsFragment.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1694.0,
            "importance": 3466.48,
            "package": "app.aaps.ui.activities.fragments",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "PersistenceLayer.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1322.0,
            "importance": 2755.0,
            "package": "app.aaps.core.interfaces.db",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "PersistenceLayerImpl.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1135.0,
            "importance": 2352.0,
            "package": "app.aaps.database.persistence",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizard.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1134.0,
            "importance": 2357.4,
            "package": "app.aaps.core.objects.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorXdripImpl.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1125.0,
            "importance": 2320.82,
            "package": "app.aaps.plugins.sync.xdrip",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV1.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1110.0,
            "importance": 2295.52,
            "package": "app.aaps.plugins.sync.nsclient",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV3.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1110.0,
            "importance": 2293.3,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "CarbsDao.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1070.0,
            "importance": 2193.72,
            "package": "app.aaps.database.daos",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "IobCobCalculatorPlugin.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1066.0,
            "importance": 2241.82,
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "StoreDataForDbImpl.kt",
            "repository": "AAPS_source",
            "eating_now_score": 1002.0,
            "importance": 2076.26,
            "package": "app.aaps.plugins.sync.nsShared",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "NSClientV3PluginTest.kt",
            "repository": "AAPS_source",
            "eating_now_score": 955.0,
            "importance": 198.34,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "AutotuneIob.kt",
            "repository": "AAPS_source",
            "eating_now_score": 943.0,
            "importance": 1959.28,
            "package": "app.aaps.plugins.aps.autotune",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizardTest.kt",
            "repository": "AAPS_source",
            "eating_now_score": 892.0,
            "importance": 180.92,
            "package": "app.aaps.implementation.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusCalculatorResultExtension.kt",
            "repository": "AAPS_source",
            "eating_now_score": 830.0,
            "importance": 1684.72,
            "package": "app.aaps.database.persistence.converters",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "StoreDataForDb.kt",
            "repository": "AAPS_source",
            "eating_now_score": 824.0,
            "importance": 1722.12,
            "package": "app.aaps.core.interfaces.nsclient",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          }
        ],
        "eating_now_packages": [
          {
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "file_count": 1,
            "avg_eating_now": 1066.0,
            "max_eating_now": 1066.0,
            "total_loc": 671
          },
          {
            "package": "app.aaps.plugins.sync.nsclientV3",
            "file_count": 3,
            "avg_eating_now": 901.33,
            "max_eating_now": 1110.0,
            "total_loc": 2141
          },
          {
            "package": "app.aaps.implementation.wizard",
            "file_count": 1,
            "avg_eating_now": 892.0,
            "max_eating_now": 892.0,
            "total_loc": 212
          },
          {
            "package": "app.aaps.core.interfaces.nsclient",
            "file_count": 1,
            "avg_eating_now": 824.0,
            "max_eating_now": 824.0,
            "total_loc": 56
          },
          {
            "package": "app.aaps.database.persistence",
            "file_count": 2,
            "avg_eating_now": 817.5,
            "max_eating_now": 1135.0,
            "total_loc": 1928
          },
          {
            "package": "app.aaps.plugins.sync.nsShared",
            "file_count": 2,
            "avg_eating_now": 811.0,
            "max_eating_now": 1002.0,
            "total_loc": 938
          },
          {
            "package": "app.aaps.plugins.sync.nsclient",
            "file_count": 2,
            "avg_eating_now": 801.0,
            "max_eating_now": 1110.0,
            "total_loc": 1142
          },
          {
            "package": "app.aaps.plugins.sync.xdrip",
            "file_count": 2,
            "avg_eating_now": 779.0,
            "max_eating_now": 1125.0,
            "total_loc": 1001
          },
          {
            "package": "app.aaps.pump.danars.di",
            "file_count": 1,
            "avg_eating_now": 758.0,
            "max_eating_now": 758.0,
            "total_loc": 122
          },
          {
            "package": "app.aaps.core.interfaces.db",
            "file_count": 2,
            "avg_eating_now": 750.0,
            "max_eating_now": 1322.0,
            "total_loc": 1413
          }
        ],
        "eating_now_dependents": []
      },
      "EN_new": {
        "core_eating_now_files": [
          {
            "filename": "TreatmentsBolusCarbsFragment.kt",
            "repository": "EN_new",
            "eating_now_score": 1944.0,
            "importance": 3983.48,
            "package": "app.aaps.ui.activities.fragments",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "PersistenceLayer.kt",
            "repository": "EN_new",
            "eating_now_score": 1572.0,
            "importance": 3272.0,
            "package": "app.aaps.core.interfaces.db",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "CarbsDao.kt",
            "repository": "EN_new",
            "eating_now_score": 1420.0,
            "importance": 2911.32,
            "package": "app.aaps.database.daos",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "PersistenceLayerImpl.kt",
            "repository": "EN_new",
            "eating_now_score": 1385.0,
            "importance": 2869.0,
            "package": "app.aaps.database.persistence",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizard.kt",
            "repository": "EN_new",
            "eating_now_score": 1384.0,
            "importance": 2874.4,
            "package": "app.aaps.core.objects.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorXdripImpl.kt",
            "repository": "EN_new",
            "eating_now_score": 1375.0,
            "importance": 2837.82,
            "package": "app.aaps.plugins.sync.xdrip",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV3.kt",
            "repository": "EN_new",
            "eating_now_score": 1360.0,
            "importance": 2810.3,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV1.kt",
            "repository": "EN_new",
            "eating_now_score": 1360.0,
            "importance": 2812.52,
            "package": "app.aaps.plugins.sync.nsclient",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "IobCobCalculatorPlugin.kt",
            "repository": "EN_new",
            "eating_now_score": 1316.0,
            "importance": 2758.82,
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "StoreDataForDbImpl.kt",
            "repository": "EN_new",
            "eating_now_score": 1252.0,
            "importance": 2593.26,
            "package": "app.aaps.plugins.sync.nsShared",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "NSClientV3PluginTest.kt",
            "repository": "EN_new",
            "eating_now_score": 1205.0,
            "importance": 250.04,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "AutotuneIob.kt",
            "repository": "EN_new",
            "eating_now_score": 1193.0,
            "importance": 2476.28,
            "package": "app.aaps.plugins.aps.autotune",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizardTest.kt",
            "repository": "EN_new",
            "eating_now_score": 1142.0,
            "importance": 232.62,
            "package": "app.aaps.implementation.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusCalculatorResultExtension.kt",
            "repository": "EN_new",
            "eating_now_score": 1080.0,
            "importance": 2201.72,
            "package": "app.aaps.database.persistence.converters",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "StoreDataForDb.kt",
            "repository": "EN_new",
            "eating_now_score": 1074.0,
            "importance": 2239.12,
            "package": "app.aaps.core.interfaces.nsclient",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          }
        ],
        "eating_now_packages": [
          {
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "file_count": 1,
            "avg_eating_now": 1316.0,
            "max_eating_now": 1316.0,
            "total_loc": 671
          },
          {
            "package": "app.aaps.plugins.sync.nsclientV3",
            "file_count": 3,
            "avg_eating_now": 1151.33,
            "max_eating_now": 1360.0,
            "total_loc": 2141
          },
          {
            "package": "app.aaps.implementation.wizard",
            "file_count": 1,
            "avg_eating_now": 1142.0,
            "max_eating_now": 1142.0,
            "total_loc": 212
          },
          {
            "package": "app.aaps.database.persistence",
            "file_count": 2,
            "avg_eating_now": 1067.5,
            "max_eating_now": 1385.0,
            "total_loc": 1928
          },
          {
            "package": "app.aaps.core.interfaces.db",
            "file_count": 2,
            "avg_eating_now": 1000.0,
            "max_eating_now": 1572.0,
            "total_loc": 1413
          },
          {
            "package": "app.aaps.plugins.aps.EN",
            "file_count": 2,
            "avg_eating_now": 905.0,
            "max_eating_now": 965.0,
            "total_loc": 1783
          },
          {
            "package": "app.aaps.pump.danarv2",
            "file_count": 1,
            "avg_eating_now": 888.0,
            "max_eating_now": 888.0,
            "total_loc": 417
          },
          {
            "package": "app.aaps.ui.di",
            "file_count": 1,
            "avg_eating_now": 884.0,
            "max_eating_now": 884.0,
            "total_loc": 88
          },
          {
            "package": "app.aaps.core.interfaces.insulin",
            "file_count": 1,
            "avg_eating_now": 850.0,
            "max_eating_now": 850.0,
            "total_loc": 36
          },
          {
            "package": "app.aaps.plugins.constraints.safety",
            "file_count": 2,
            "avg_eating_now": 848.0,
            "max_eating_now": 898.0,
            "total_loc": 549
          }
        ],
        "eating_now_dependents": []
      },
      "EN_old": {
        "core_eating_now_files": [
          {
            "filename": "TreatmentsBolusCarbsFragment.kt",
            "repository": "EN_old",
            "eating_now_score": 1894.0,
            "importance": 3876.46,
            "package": "app.aaps.ui.activities.fragments",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "CarbsDao.kt",
            "repository": "EN_old",
            "eating_now_score": 1450.0,
            "importance": 2961.52,
            "package": "app.aaps.database.impl.daos",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorXdripImpl.kt",
            "repository": "EN_old",
            "eating_now_score": 1325.0,
            "importance": 2727.82,
            "package": "app.aaps.plugins.sync.xdrip",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV1.kt",
            "repository": "EN_old",
            "eating_now_score": 1310.0,
            "importance": 2702.44,
            "package": "app.aaps.plugins.sync.nsclient",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataSyncSelectorV3.kt",
            "repository": "EN_old",
            "eating_now_score": 1310.0,
            "importance": 2700.24,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizard.kt",
            "repository": "EN_old",
            "eating_now_score": 1258.0,
            "importance": 2622.68,
            "package": "app.aaps.core.main.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DetailedBolusInfo.kt",
            "repository": "EN_old",
            "eating_now_score": 1230.0,
            "importance": 2560.5,
            "package": "app.aaps.core.interfaces.pump",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "IobCobCalculatorPlugin.kt",
            "repository": "EN_old",
            "eating_now_score": 1206.0,
            "importance": 2529.06,
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DefaultValueHelperImpl.kt",
            "repository": "EN_old",
            "eating_now_score": 1205.0,
            "importance": 2466.96,
            "package": "app.aaps.implementation.profile",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "AutotuneIob.kt",
            "repository": "EN_old",
            "eating_now_score": 1193.0,
            "importance": 2466.3,
            "package": "app.aaps.plugins.aps.autotune",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "NSClientV3PluginTest.kt",
            "repository": "EN_old",
            "eating_now_score": 1185.0,
            "importance": 244.66,
            "package": "app.aaps.plugins.sync.nsclientV3",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusCalculatorResult.kt",
            "repository": "EN_old",
            "eating_now_score": 1084.0,
            "importance": 2208.2,
            "package": "app.aaps.database.entities",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "BolusWizardTest.kt",
            "repository": "EN_old",
            "eating_now_score": 1076.0,
            "importance": 218.42,
            "package": "app.aaps.implementation.wizard",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DataHandlerMobile.kt",
            "repository": "EN_old",
            "eating_now_score": 1053.0,
            "importance": 2200.4,
            "package": "app.aaps.plugins.sync.wear.wearintegration",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          },
          {
            "filename": "DefaultValueHelper.kt",
            "repository": "EN_old",
            "eating_now_score": 1028.0,
            "importance": 2135.8,
            "package": "app.aaps.core.interfaces.profile",
            "has_source": true,
            "outgoing": 0,
            "incoming": 0,
            "total_connections": 0
          }
        ],
        "eating_now_packages": [
          {
            "package": "app.aaps.plugins.main.iob.iobCobCalculator",
            "file_count": 1,
            "avg_eating_now": 1206.0,
            "max_eating_now": 1206.0,
            "total_loc": 683
          },
          {
            "package": "app.aaps.plugins.sync.nsclientV3",
            "file_count": 3,
            "avg_eating_now": 1078.67,
            "max_eating_now": 1310.0,
            "total_loc": 1981
          },
          {
            "package": "app.aaps.implementation.wizard",
            "file_count": 1,
            "avg_eating_now": 1076.0,
            "max_eating_now": 1076.0,
            "total_loc": 209
          },
          {
            "package": "info.nightscout.androidaps.danaRv2",
            "file_count": 1,
            "avg_eating_now": 884.0,
            "max_eating_now": 884.0,
            "total_loc": 413
          },
          {
            "package": "app.aaps.plugins.constraints.safety",
            "file_count": 2,
            "avg_eating_now": 858.5,
            "max_eating_now": 914.0,
            "total_loc": 492
          },
          {
            "package": "info.nightscout.androidaps.danaRv2.services",
            "file_count": 1,
            "avg_eating_now": 852.0,
            "max_eating_now": 852.0,
            "total_loc": 475
          },
          {
            "package": "app.aaps.core.interfaces.insulin",
            "file_count": 1,
            "avg_eating_now": 840.0,
            "max_eating_now": 840.0,
            "total_loc": 36
          },
          {
            "package": "info.nightscout.androidaps.danaRKorean.services",
            "file_count": 1,
            "avg_eating_now": 836.0,
            "max_eating_now": 836.0,
            "total_loc": 333
          },
          {
            "package": "app.aaps.ui.di",
            "file_count": 1,
            "avg_eating_now": 834.0,
            "max_eating_now": 834.0,
            "total_loc": 88
          },
          {
            "package": "app.aaps.ui.activities.fragments",
            "file_count": 7,
            "avg_eating_now": 826.0,
            "max_eating_now": 1894.0,
            "total_loc": 2065
          }
        ],
        "eating_now_dependents": []
      }
    }
  },
  "plugin_templates": {
    "eating": [
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_new",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1944.0,
        "importance": 3983.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_old",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1894.0,
        "importance": 3876.46,
        "functions": 22,
        "loc": 473,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.extensions.toVisibility\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.logging.UserEntryLogger\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.resources.ResourceHelper\nimport app.aaps",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1694.0,
        "importance": 3466.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "PersistenceLayer.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.interfaces.db",
        "eating_now_score": 1572.0,
        "importance": 3272.0,
        "functions": 173,
        "loc": 1386,
        "has_source": true,
        "source_preview": "package app.aaps.core.interfaces.db\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport io.reactivex.rxjava3.core.Completable\nimport io.reactivex.rxjava3.core.M",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_old",
        "package": "app.aaps.database.impl.daos",
        "eating_now_score": 1450.0,
        "importance": 2961.52,
        "functions": 20,
        "loc": 76,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.impl.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun findByNSId(nsId: String): Carbs?\n\n    @Qu",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.daos",
        "eating_now_score": 1420.0,
        "importance": 2911.32,
        "functions": 17,
        "loc": 66,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun getByNSId(nsId: String): Carbs?\n\n    @Query(\"S",
        "connections": 0
      },
      {
        "filename": "PersistenceLayerImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.persistence",
        "eating_now_score": 1385.0,
        "importance": 2869.0,
        "functions": 174,
        "loc": 1803,
        "has_source": true,
        "source_preview": "package app.aaps.database.persistence\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.int",
        "connections": 0
      },
      {
        "filename": "BolusWizard.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.objects.wizard",
        "eating_now_score": 1384.0,
        "importance": 2874.4,
        "functions": 15,
        "loc": 620,
        "has_source": true,
        "source_preview": "package app.aaps.core.objects.wizard\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.text.Spanned\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.pump.defs.PumpDescription\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.GlucoseStatus\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.automation.Automation\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.constraints.ConstraintsChecker\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.iob.GlucoseStatusProvider\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nim",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorXdripImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.xdrip",
        "eating_now_score": 1375.0,
        "importance": 2837.82,
        "functions": 37,
        "loc": 571,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.xdrip\n\nimport app.aaps.core.data.time.T\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.rx.events.EventXdripNewLog\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.sync.DataSyncSelectorXdrip\nimport app.aaps.core.interfaces.sync.XDripBroadcast\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport dagger.Lazy\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\n@Suppress(\"unused\")\n@Singleton\nclass DataSyncSelectorXdripImpl @Inject constructor(\n    private val sp: SP,\n    private val aapsLogger: AAPSLogger,\n    private",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorV3.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.nsclientV3",
        "eating_now_score": 1360.0,
        "importance": 2810.3,
        "functions": 33,
        "loc": 695,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.nsclientV3\n\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.nsclient.StoreDataForDb\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.source.NSClientSource\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.keys.BooleanKey\nimport app.aaps.core.keys.Preferences\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiQueue\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiStatus\nimport app.aaps.plugins.sync.nsShared.extensions.",
        "connections": 0
      }
    ],
    "bolus": [
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_new",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1944.0,
        "importance": 3983.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_old",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1894.0,
        "importance": 3876.46,
        "functions": 22,
        "loc": 473,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.extensions.toVisibility\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.logging.UserEntryLogger\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.resources.ResourceHelper\nimport app.aaps",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1694.0,
        "importance": 3466.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "PersistenceLayer.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.interfaces.db",
        "eating_now_score": 1572.0,
        "importance": 3272.0,
        "functions": 173,
        "loc": 1386,
        "has_source": true,
        "source_preview": "package app.aaps.core.interfaces.db\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport io.reactivex.rxjava3.core.Completable\nimport io.reactivex.rxjava3.core.M",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_old",
        "package": "app.aaps.database.impl.daos",
        "eating_now_score": 1450.0,
        "importance": 2961.52,
        "functions": 20,
        "loc": 76,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.impl.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun findByNSId(nsId: String): Carbs?\n\n    @Qu",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.daos",
        "eating_now_score": 1420.0,
        "importance": 2911.32,
        "functions": 17,
        "loc": 66,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun getByNSId(nsId: String): Carbs?\n\n    @Query(\"S",
        "connections": 0
      },
      {
        "filename": "PersistenceLayerImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.persistence",
        "eating_now_score": 1385.0,
        "importance": 2869.0,
        "functions": 174,
        "loc": 1803,
        "has_source": true,
        "source_preview": "package app.aaps.database.persistence\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.int",
        "connections": 0
      },
      {
        "filename": "BolusWizard.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.objects.wizard",
        "eating_now_score": 1384.0,
        "importance": 2874.4,
        "functions": 15,
        "loc": 620,
        "has_source": true,
        "source_preview": "package app.aaps.core.objects.wizard\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.text.Spanned\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.pump.defs.PumpDescription\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.GlucoseStatus\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.automation.Automation\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.constraints.ConstraintsChecker\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.iob.GlucoseStatusProvider\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nim",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorXdripImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.xdrip",
        "eating_now_score": 1375.0,
        "importance": 2837.82,
        "functions": 37,
        "loc": 571,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.xdrip\n\nimport app.aaps.core.data.time.T\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.rx.events.EventXdripNewLog\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.sync.DataSyncSelectorXdrip\nimport app.aaps.core.interfaces.sync.XDripBroadcast\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport dagger.Lazy\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\n@Suppress(\"unused\")\n@Singleton\nclass DataSyncSelectorXdripImpl @Inject constructor(\n    private val sp: SP,\n    private val aapsLogger: AAPSLogger,\n    private",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorV3.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.nsclientV3",
        "eating_now_score": 1360.0,
        "importance": 2810.3,
        "functions": 33,
        "loc": 695,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.nsclientV3\n\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.nsclient.StoreDataForDb\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.source.NSClientSource\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.keys.BooleanKey\nimport app.aaps.core.keys.Preferences\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiQueue\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiStatus\nimport app.aaps.plugins.sync.nsShared.extensions.",
        "connections": 0
      }
    ],
    "carb": [
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_new",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1944.0,
        "importance": 3983.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "EN_old",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1894.0,
        "importance": 3876.46,
        "functions": 22,
        "loc": 473,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.extensions.toVisibility\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.logging.UserEntryLogger\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.resources.ResourceHelper\nimport app.aaps",
        "connections": 0
      },
      {
        "filename": "TreatmentsBolusCarbsFragment.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.ui.activities.fragments",
        "eating_now_score": 1694.0,
        "importance": 3466.48,
        "functions": 22,
        "loc": 449,
        "has_source": true,
        "source_preview": "package app.aaps.ui.activities.fragments\n\nimport android.annotation.SuppressLint\nimport android.graphics.Paint\nimport android.os.Bundle\nimport android.util.SparseArray\nimport android.view.LayoutInflater\nimport android.view.Menu\nimport android.view.MenuInflater\nimport android.view.MenuItem\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.core.util.forEach\nimport androidx.core.view.MenuProvider\nimport androidx.lifecycle.Lifecycle\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interface",
        "connections": 0
      },
      {
        "filename": "PersistenceLayer.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.interfaces.db",
        "eating_now_score": 1572.0,
        "importance": 3272.0,
        "functions": 173,
        "loc": 1386,
        "has_source": true,
        "source_preview": "package app.aaps.core.interfaces.db\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport io.reactivex.rxjava3.core.Completable\nimport io.reactivex.rxjava3.core.M",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_old",
        "package": "app.aaps.database.impl.daos",
        "eating_now_score": 1450.0,
        "importance": 2961.52,
        "functions": 20,
        "loc": 76,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.impl.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun findByNSId(nsId: String): Carbs?\n\n    @Qu",
        "connections": 0
      },
      {
        "filename": "CarbsDao.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.daos",
        "eating_now_score": 1420.0,
        "importance": 2911.32,
        "functions": 17,
        "loc": 66,
        "has_source": true,
        "source_preview": "// Modified for Eating Now\npackage app.aaps.database.daos\n\nimport androidx.room.Dao\nimport androidx.room.Query\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.TABLE_CARBS\nimport io.reactivex.rxjava3.core.Maybe\nimport io.reactivex.rxjava3.core.Single\n\n@Dao\ninternal interface CarbsDao : TraceableDao<Carbs> {\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE id = :id\")\n    override fun findById(id: Long): Carbs?\n\n    @Query(\"DELETE FROM $TABLE_CARBS\")\n    override fun deleteAllEntries()\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE timestamp < :than\")\n    override fun deleteOlderThan(than: Long): Int\n\n    @Query(\"DELETE FROM $TABLE_CARBS WHERE referenceId IS NOT NULL\")\n    override fun deleteTrackedChanges(): Int\n\n    @Query(\"SELECT id FROM $TABLE_CARBS ORDER BY id DESC limit 1\")\n    fun getLastId(): Long?\n\n    @Query(\"SELECT * FROM $TABLE_CARBS WHERE unlikely(nightscoutId = :nsId) AND likely(referenceId IS NULL)\")\n    fun getByNSId(nsId: String): Carbs?\n\n    @Query(\"S",
        "connections": 0
      },
      {
        "filename": "PersistenceLayerImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.persistence",
        "eating_now_score": 1385.0,
        "importance": 2869.0,
        "functions": 174,
        "loc": 1803,
        "has_source": true,
        "source_preview": "package app.aaps.database.persistence\n\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.BS\nimport app.aaps.core.data.model.CA\nimport app.aaps.core.data.model.DS\nimport app.aaps.core.data.model.EB\nimport app.aaps.core.data.model.EPS\nimport app.aaps.core.data.model.FD\nimport app.aaps.core.data.model.GV\nimport app.aaps.core.data.model.GlucoseUnit\nimport app.aaps.core.data.model.HR\nimport app.aaps.core.data.model.NE\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.PS\nimport app.aaps.core.data.model.SC\nimport app.aaps.core.data.model.TB\nimport app.aaps.core.data.model.TDD\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.model.UE\nimport app.aaps.core.data.pump.defs.PumpType\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.APSResult\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.int",
        "connections": 0
      },
      {
        "filename": "BolusWizard.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.objects.wizard",
        "eating_now_score": 1384.0,
        "importance": 2874.4,
        "functions": 15,
        "loc": 620,
        "has_source": true,
        "source_preview": "package app.aaps.core.objects.wizard\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.text.Spanned\nimport app.aaps.core.data.model.BCR\nimport app.aaps.core.data.model.OE\nimport app.aaps.core.data.model.TE\nimport app.aaps.core.data.model.TT\nimport app.aaps.core.data.pump.defs.PumpDescription\nimport app.aaps.core.data.time.T\nimport app.aaps.core.data.ue.Action\nimport app.aaps.core.data.ue.Sources\nimport app.aaps.core.data.ue.ValueWithUnit\nimport app.aaps.core.interfaces.aps.GlucoseStatus\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.automation.Automation\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.constraints.ConstraintsChecker\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.iob.GlucoseStatusProvider\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nim",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorXdripImpl.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.xdrip",
        "eating_now_score": 1375.0,
        "importance": 2837.82,
        "functions": 37,
        "loc": 571,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.xdrip\n\nimport app.aaps.core.data.time.T\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.rx.events.EventXdripNewLog\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.sync.DataSyncSelectorXdrip\nimport app.aaps.core.interfaces.sync.XDripBroadcast\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport dagger.Lazy\nimport javax.inject.Inject\nimport javax.inject.Singleton\n\n@Suppress(\"unused\")\n@Singleton\nclass DataSyncSelectorXdripImpl @Inject constructor(\n    private val sp: SP,\n    private val aapsLogger: AAPSLogger,\n    private",
        "connections": 0
      },
      {
        "filename": "DataSyncSelectorV3.kt",
        "repository": "EN_new",
        "package": "app.aaps.plugins.sync.nsclientV3",
        "eating_now_score": 1360.0,
        "importance": 2810.3,
        "functions": 33,
        "loc": 695,
        "has_source": true,
        "source_preview": "package app.aaps.plugins.sync.nsclientV3\n\nimport app.aaps.core.interfaces.configuration.Config\nimport app.aaps.core.interfaces.db.PersistenceLayer\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.nsclient.StoreDataForDb\nimport app.aaps.core.interfaces.plugin.ActivePlugin\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.rx.bus.RxBus\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.source.NSClientSource\nimport app.aaps.core.interfaces.sync.DataSyncSelector\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.keys.BooleanKey\nimport app.aaps.core.keys.Preferences\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.plugins.sync.R\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiQueue\nimport app.aaps.plugins.sync.nsShared.events.EventNSClientUpdateGuiStatus\nimport app.aaps.plugins.sync.nsShared.extensions.",
        "connections": 0
      }
    ]
  },
  "repository_comparison": [
    {
      "repository": "EN_new",
      "file_count": 174,
      "avg_eating_now": 752.13,
      "max_eating_now": 1944.0,
      "files": [
        {
          "eating_now_score": 504.0,
          "functions": 0,
          "importance": 1063.74,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.core.objects.extensions",
          "loc": 12
        },
        {
          "eating_now_score": 632.0,
          "functions": 0,
          "importance": 1304.68,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 34
        },
        {
          "eating_now_score": 632.0,
          "functions": 0,
          "importance": 1304.5,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 80
        },
        {
          "eating_now_score": 639.0,
          "functions": 0,
          "importance": 1316.1,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 60
        },
        {
          "eating_now_score": 640.0,
          "functions": 0,
          "importance": 1317.28,
          "has_source": true,
          "name": "DetailedBolusInfoExtension.kt",
          "package": "app.aaps.pump.omnipod.eros.extensions",
          "loc": 14
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1361.06,
          "has_source": true,
          "name": "EventDismissBolusProgressIfRunning.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1361.06,
          "has_source": true,
          "name": "EventExtendedBolusChange.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "BolusAmountNotInRangeException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "BolusDurationNotInRangeException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "BolusLagTimeFeatureDisabledException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "BolusTypeAndParameterMismatchException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "CustomBolusNotConfiguredException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "MaximumNumberOfBolusTypeAlreadyRunningException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.06,
          "has_source": true,
          "name": "NoSuchBolusToCancelException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.16,
          "has_source": true,
          "name": "BolusType.kt",
          "package": "app.aaps.pump.medtrum.comm.enums",
          "loc": 8
        },
        {
          "eating_now_score": 648.0,
          "functions": 0,
          "importance": 1337.3,
          "has_source": true,
          "name": "MsgHistoryBolus.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 15
        },
        {
          "eating_now_score": 656.0,
          "functions": 0,
          "importance": 1389.14,
          "has_source": true,
          "name": "BolusProgressData.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 656.0,
          "functions": 0,
          "importance": 1353.16,
          "has_source": true,
          "name": "BolusProfile.kt",
          "package": "app.aaps.pump.equil.data",
          "loc": 8
        },
        {
          "eating_now_score": 656.0,
          "functions": 0,
          "importance": 1353.06,
          "has_source": true,
          "name": "FactoryMaxBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 656.0,
          "functions": 0,
          "importance": 1353.06,
          "has_source": true,
          "name": "FactoryMinBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 656.0,
          "functions": 0,
          "importance": 1353.06,
          "has_source": true,
          "name": "MaxBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 656.0,
          "functions": 1,
          "importance": 135.61,
          "has_source": true,
          "name": "CancelBolusPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 656.0,
          "functions": 1,
          "importance": 135.61,
          "has_source": true,
          "name": "SetBolusMotorPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 664.0,
          "functions": 0,
          "importance": 1373.06,
          "has_source": true,
          "name": "ExtendedBolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 53
        },
        {
          "eating_now_score": 664.0,
          "functions": 2,
          "importance": 1373.28,
          "has_source": true,
          "name": "BolusType.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 14
        },
        {
          "eating_now_score": 664.0,
          "functions": 2,
          "importance": 1374.86,
          "has_source": true,
          "name": "BolusExDuration.kt",
          "package": "app.aaps.pump.eopatch.code",
          "loc": 43
        },
        {
          "eating_now_score": 664.0,
          "functions": 2,
          "importance": 138.09,
          "has_source": true,
          "name": "BolusTimerImplTest.kt",
          "package": "app.aaps.plugins.automation",
          "loc": 72
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1373.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGet24CIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1374.82,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 116
        },
        {
          "eating_now_score": 664.0,
          "functions": 2,
          "importance": 1375.66,
          "has_source": true,
          "name": "DanaRSPacketBolusSet24CIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 58
        },
        {
          "eating_now_score": 664.0,
          "functions": 0,
          "importance": 1369.36,
          "has_source": true,
          "name": "DanaRSPacketHistoryBolus.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 18
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1371.84,
          "has_source": true,
          "name": "DanaRSPacketNotifyMissedBolusAlarm.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 664.0,
          "functions": 0,
          "importance": 1369.32,
          "has_source": true,
          "name": "CancelBolusMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 16
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1371.34,
          "has_source": true,
          "name": "SetBolusMotorPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 17
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1372.0,
          "has_source": true,
          "name": "MsgSetExtendedBolusStop.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 25
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 137.13,
          "has_source": true,
          "name": "MsgHistoryBolusTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 13
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 137.13,
          "has_source": true,
          "name": "MsgSetExtendedBolusStopTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 16
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 1387.68,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 34
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.82,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCirCfArrayTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 34
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.85,
          "has_source": true,
          "name": "DanaRsPacketHistoryBolusTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 27
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.81,
          "has_source": true,
          "name": "DanaRsPacketNotifyMissedBolusAlarmTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.81,
          "has_source": true,
          "name": "DanaRsPacketReviewBolusAvgTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 1387.5,
          "has_source": true,
          "name": "BolusSpeedInquirePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 25
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 1387.62,
          "has_source": true,
          "name": "BolusSpeedSettingPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 31
        },
        {
          "eating_now_score": 672.0,
          "functions": 0,
          "importance": 1400.5,
          "has_source": true,
          "name": "InsightBolusID.kt",
          "package": "app.aaps.pump.insight.database",
          "loc": 25
        },
        {
          "eating_now_score": 672.0,
          "functions": 0,
          "importance": 1385.2,
          "has_source": true,
          "name": "ActiveBolus.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 10
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.82,
          "has_source": true,
          "name": "SetBolusPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 33
        },
        {
          "eating_now_score": 672.0,
          "functions": 4,
          "importance": 1411.62,
          "has_source": true,
          "name": "ExtendedBolusDataPoint.kt",
          "package": "app.aaps.core.graph.data",
          "loc": 31
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 1388.12,
          "has_source": true,
          "name": "MsgBolusStart.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 31
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 1388.16,
          "has_source": true,
          "name": "MsgBolusStartWithSpeed.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 33
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.75,
          "has_source": true,
          "name": "MsgBolusStartTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.75,
          "has_source": true,
          "name": "MsgBolusStartWithSpeedTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.75,
          "has_source": true,
          "name": "MsgInitConnStatusBolusTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 23
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.74,
          "has_source": true,
          "name": "MsgSetExtendedBolusStartTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 672.0,
          "functions": 1,
          "importance": 138.74,
          "has_source": true,
          "name": "MsgStatusBolusExtendedTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 680.0,
          "functions": 1,
          "importance": 1404.9,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 45
        },
        {
          "eating_now_score": 680.0,
          "functions": 1,
          "importance": 1404.92,
          "has_source": true,
          "name": "BolusSpeedSettingResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 46
        },
        {
          "eating_now_score": 680.0,
          "functions": 4,
          "importance": 1397.84,
          "has_source": true,
          "name": "CommandCancelExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 42
        },
        {
          "eating_now_score": 680.0,
          "functions": 1,
          "importance": 1405.2,
          "has_source": true,
          "name": "MsgSetExtendedBolusStart.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 35
        },
        {
          "eating_now_score": 688.0,
          "functions": 4,
          "importance": 1438.0,
          "has_source": true,
          "name": "CmdExtendedBolusSet.kt",
          "package": "app.aaps.pump.equil.manager.command",
          "loc": 60
        },
        {
          "eating_now_score": 688.0,
          "functions": 1,
          "importance": 1419.46,
          "has_source": true,
          "name": "GetAvailableBolusTypesMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 23
        },
        {
          "eating_now_score": 688.0,
          "functions": 4,
          "importance": 1445.78,
          "has_source": true,
          "name": "BolusDataPoint.kt",
          "package": "app.aaps.core.graph.data",
          "loc": 39
        },
        {
          "eating_now_score": 696.0,
          "functions": 2,
          "importance": 1440.36,
          "has_source": true,
          "name": "DelegatedBolusDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 696.0,
          "functions": 2,
          "importance": 1440.36,
          "has_source": true,
          "name": "DelegatedExtendedBolusDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 696.0,
          "functions": 0,
          "importance": 1441.14,
          "has_source": true,
          "name": "Bolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 57
        },
        {
          "eating_now_score": 696.0,
          "functions": 1,
          "importance": 1436.08,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolusCancel.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 696.0,
          "functions": 1,
          "importance": 1436.94,
          "has_source": true,
          "name": "BolusSpeedInquireResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 47
        },
        {
          "eating_now_score": 696.0,
          "functions": 1,
          "importance": 1436.3,
          "has_source": true,
          "name": "BolusSpeedSettingReportPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 40
        },
        {
          "eating_now_score": 696.0,
          "functions": 1,
          "importance": 1436.84,
          "has_source": true,
          "name": "DeliverBolusMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 42
        },
        {
          "eating_now_score": 696.0,
          "functions": 1,
          "importance": 1436.4,
          "has_source": true,
          "name": "CancelBolusPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 20
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 1480.14,
          "has_source": true,
          "name": "SyncPumpCancelExtendedBolusIfAnyTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 145.21,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusCancelTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 1451.82,
          "has_source": true,
          "name": "BolusDeliveredEvent.kt",
          "package": "app.aaps.pump.insight.app_layer.history.history_events",
          "loc": 41
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 1451.6,
          "has_source": true,
          "name": "BolusProgrammedEvent.kt",
          "package": "app.aaps.pump.insight.app_layer.history.history_events",
          "loc": 30
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 1474.1,
          "has_source": true,
          "name": "PumpBolusType.kt",
          "package": "app.aaps.pump.medtronic.defs",
          "loc": 55
        },
        {
          "eating_now_score": 704.0,
          "functions": 2,
          "importance": 145.46,
          "has_source": true,
          "name": "ReadBolusStatePacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 54
        },
        {
          "eating_now_score": 704.0,
          "functions": 1,
          "importance": 145.87,
          "has_source": true,
          "name": "ProgramBolusCommandTest.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command",
          "loc": 23
        },
        {
          "eating_now_score": 704.0,
          "functions": 4,
          "importance": 1466.74,
          "has_source": true,
          "name": "BolusExtraCommand.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.message.command",
          "loc": 77
        },
        {
          "eating_now_score": 704.0,
          "functions": 5,
          "importance": 1468.94,
          "has_source": true,
          "name": "BolusDeliverySchedule.java",
          "package": "app.aaps.pump.omnipod.eros.driver.definition.schedule",
          "loc": 62
        },
        {
          "eating_now_score": 710.0,
          "functions": 0,
          "importance": 1454.8,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 45
        },
        {
          "eating_now_score": 712.0,
          "functions": 1,
          "importance": 146.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetBolusOptionTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 712.0,
          "functions": 1,
          "importance": 146.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 712.0,
          "functions": 1,
          "importance": 1468.12,
          "has_source": true,
          "name": "ReadBolusStatePacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 31
        },
        {
          "eating_now_score": 712.0,
          "functions": 0,
          "importance": 1462.34,
          "has_source": true,
          "name": "BolusElement.kt",
          "package": "app.aaps.plugins.sync.tidepool.elements",
          "loc": 22
        },
        {
          "eating_now_score": 714.0,
          "functions": 1,
          "importance": 1499.24,
          "has_source": true,
          "name": "EventOverviewBolusProgress.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 12
        },
        {
          "eating_now_score": 716.0,
          "functions": 1,
          "importance": 147.54,
          "has_source": true,
          "name": "MsgBolusStopTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 298.21,
          "has_source": true,
          "name": "InsertBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 27
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1491.1,
          "has_source": true,
          "name": "InsertOrUpdateBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 30
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1490.92,
          "has_source": true,
          "name": "InvalidateBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 21
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1490.96,
          "has_source": true,
          "name": "InvalidateExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 298.23,
          "has_source": true,
          "name": "SyncBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1494.16,
          "has_source": true,
          "name": "SyncNsBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 58
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1495.7,
          "has_source": true,
          "name": "SyncNsExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 85
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1511.82,
          "has_source": true,
          "name": "SyncPumpBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 41
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1512.5,
          "has_source": true,
          "name": "SyncPumpExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 50
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1491.48,
          "has_source": true,
          "name": "UpdateNsIdBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1491.48,
          "has_source": true,
          "name": "UpdateNsIdExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.58,
          "has_source": true,
          "name": "InjectionExtendedBolusResultReportPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 54
        },
        {
          "eating_now_score": 720.0,
          "functions": 3,
          "importance": 1489.62,
          "has_source": true,
          "name": "ReadBolusFinishTimeTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 56
        },
        {
          "eating_now_score": 720.0,
          "functions": 10,
          "importance": 1512.26,
          "has_source": true,
          "name": "TriggerBolusAgo.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 88
        },
        {
          "eating_now_score": 720.0,
          "functions": 5,
          "importance": 149.86,
          "has_source": true,
          "name": "TriggerBolusAgoTest.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 81
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.38,
          "has_source": true,
          "name": "DanaRSPacketBolusGetStepBolusInformation.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 44
        },
        {
          "eating_now_score": 720.0,
          "functions": 2,
          "importance": 1486.3,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolus.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 40
        },
        {
          "eating_now_score": 720.0,
          "functions": 2,
          "importance": 1486.98,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStart.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.34,
          "has_source": true,
          "name": "DanaRSPacketReviewBolusAvg.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 148.5,
          "has_source": true,
          "name": "DanaRsPacketBolusGetStepBolusInformationTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 720.0,
          "functions": 2,
          "importance": 148.71,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStartTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 81
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.64,
          "has_source": true,
          "name": "GetActiveBolusesMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.status",
          "loc": 32
        },
        {
          "eating_now_score": 720.0,
          "functions": 4,
          "importance": 1477.88,
          "has_source": true,
          "name": "CommandExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 44
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.74,
          "has_source": true,
          "name": "MsgInitConnStatusBolus.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 37
        },
        {
          "eating_now_score": 720.0,
          "functions": 3,
          "importance": 1490.64,
          "has_source": true,
          "name": "MsgStatusBolusExtended.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 57
        },
        {
          "eating_now_score": 720.0,
          "functions": 1,
          "importance": 1484.8,
          "has_source": true,
          "name": "MsgInitConnStatusBolusK.kt",
          "package": "app.aaps.pump.danarkorean.comm",
          "loc": 40
        },
        {
          "eating_now_score": 725.0,
          "functions": 1,
          "importance": 1495.72,
          "has_source": true,
          "name": "DanaRSPacketBolusGetBolusOption.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 111
        },
        {
          "eating_now_score": 725.0,
          "functions": 1,
          "importance": 149.48,
          "has_source": true,
          "name": "DanaRsPacketBolusGetBolusOptionTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 39
        },
        {
          "eating_now_score": 728.0,
          "functions": 2,
          "importance": 1506.3,
          "has_source": true,
          "name": "BolusDTO.kt",
          "package": "app.aaps.pump.medtronic.data.dto",
          "loc": 90
        },
        {
          "eating_now_score": 728.0,
          "functions": 1,
          "importance": 1500.46,
          "has_source": true,
          "name": "SetBolusPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 23
        },
        {
          "eating_now_score": 728.0,
          "functions": 0,
          "importance": 1498.04,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 52
        },
        {
          "eating_now_score": 730.0,
          "functions": 2,
          "importance": 1506.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetBolusOption.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 73
        },
        {
          "eating_now_score": 732.0,
          "functions": 1,
          "importance": 150.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStopTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 734.0,
          "functions": 1,
          "importance": 1512.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStop.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 48
        },
        {
          "eating_now_score": 734.0,
          "functions": 1,
          "importance": 1512.08,
          "has_source": true,
          "name": "MsgBolusStop.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 29
        },
        {
          "eating_now_score": 736.0,
          "functions": 2,
          "importance": 1553.14,
          "has_source": true,
          "name": "DetailedBolusInfoStorage.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 738.0,
          "functions": 1,
          "importance": 151.95,
          "has_source": true,
          "name": "MsgBolusProgressTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 24
        },
        {
          "eating_now_score": 744.0,
          "functions": 1,
          "importance": 1531.82,
          "has_source": true,
          "name": "AvailableBolusTypes.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 16
        },
        {
          "eating_now_score": 747.0,
          "functions": 0,
          "importance": 1528.78,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 44
        },
        {
          "eating_now_score": 748.0,
          "functions": 0,
          "importance": 1563.94,
          "has_source": true,
          "name": "NSExtendedBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 27
        },
        {
          "eating_now_score": 750.0,
          "functions": 4,
          "importance": 1539.3,
          "has_source": true,
          "name": "CommandSMBBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 65
        },
        {
          "eating_now_score": 760.0,
          "functions": 5,
          "importance": 1572.52,
          "has_source": true,
          "name": "StopExtBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 51
        },
        {
          "eating_now_score": 760.0,
          "functions": 5,
          "importance": 1572.6,
          "has_source": true,
          "name": "StopNowBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 55
        },
        {
          "eating_now_score": 760.0,
          "functions": 1,
          "importance": 1572.28,
          "has_source": true,
          "name": "BolusAction.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.action",
          "loc": 54
        },
        {
          "eating_now_score": 766.0,
          "functions": 7,
          "importance": 1580.96,
          "has_source": true,
          "name": "BolusActivity.kt",
          "package": "app.aaps.wear.interaction.actions",
          "loc": 73
        },
        {
          "eating_now_score": 768.0,
          "functions": 6,
          "importance": 1602.84,
          "has_source": true,
          "name": "ProgramBolusCommand.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command",
          "loc": 132
        },
        {
          "eating_now_score": 768.0,
          "functions": 12,
          "importance": 1599.4,
          "has_source": true,
          "name": "BolusProgressDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 195
        },
        {
          "eating_now_score": 772.0,
          "functions": 0,
          "importance": 1605.94,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.core.objects.extensions",
          "loc": 122
        },
        {
          "eating_now_score": 772.0,
          "functions": 1,
          "importance": 158.46,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 62
        },
        {
          "eating_now_score": 774.0,
          "functions": 0,
          "importance": 1584.4,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 50
        },
        {
          "eating_now_score": 782.0,
          "functions": 1,
          "importance": 160.45,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 55
        },
        {
          "eating_now_score": 784.0,
          "functions": 4,
          "importance": 1625.8,
          "has_source": true,
          "name": "DetailedBolusInfoStorageImpl.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 90
        },
        {
          "eating_now_score": 788.0,
          "functions": 1,
          "importance": 1619.56,
          "has_source": true,
          "name": "MsgBolusProgress.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 28
        },
        {
          "eating_now_score": 800.0,
          "functions": 6,
          "importance": 1657.56,
          "has_source": true,
          "name": "StopComboBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 78
        },
        {
          "eating_now_score": 800.0,
          "functions": 2,
          "importance": 166.99,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 48
        },
        {
          "eating_now_score": 800.0,
          "functions": 4,
          "importance": 167.52,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 88
        },
        {
          "eating_now_score": 806.0,
          "functions": 7,
          "importance": 1659.84,
          "has_source": true,
          "name": "ExtendedBolusDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 142
        },
        {
          "eating_now_score": 808.0,
          "functions": 1,
          "importance": 1647.32,
          "has_source": true,
          "name": "BolusProgressHelperActivity.kt",
          "package": "app.aaps.ui.activities",
          "loc": 16
        },
        {
          "eating_now_score": 820.0,
          "functions": 1,
          "importance": 1714.18,
          "has_source": true,
          "name": "NSBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 39
        },
        {
          "eating_now_score": 820.0,
          "functions": 4,
          "importance": 1691.14,
          "has_source": true,
          "name": "StartQuickBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 57
        },
        {
          "eating_now_score": 839.0,
          "functions": 0,
          "importance": 1713.16,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 38
        },
        {
          "eating_now_score": 840.0,
          "functions": 4,
          "importance": 173.24,
          "has_source": true,
          "name": "DetailedBolusInfoStorageTest.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 95
        },
        {
          "eating_now_score": 857.0,
          "functions": 1,
          "importance": 175.81,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCalculationInformationTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 30
        },
        {
          "eating_now_score": 880.0,
          "functions": 17,
          "importance": 1830.82,
          "has_source": true,
          "name": "ExtendedBolusDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 66
        },
        {
          "eating_now_score": 892.0,
          "functions": 1,
          "importance": 1829.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCalculationInformation.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 62
        },
        {
          "eating_now_score": 896.0,
          "functions": 2,
          "importance": 1840.36,
          "has_source": true,
          "name": "DelegatedBolusCalculatorResultDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 910.0,
          "functions": 4,
          "importance": 1860.72,
          "has_source": true,
          "name": "CommandBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 61
        },
        {
          "eating_now_score": 913.0,
          "functions": 0,
          "importance": 1893.9,
          "has_source": true,
          "name": "NSBolusWizard.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 25
        },
        {
          "eating_now_score": 920.0,
          "functions": 6,
          "importance": 190.14,
          "has_source": true,
          "name": "BolusExtraCommandTest.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.message.command",
          "loc": 61
        },
        {
          "eating_now_score": 935.0,
          "functions": 1,
          "importance": 1921.1,
          "has_source": true,
          "name": "InsertOrUpdateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 30
        },
        {
          "eating_now_score": 935.0,
          "functions": 1,
          "importance": 1920.96,
          "has_source": true,
          "name": "InvalidateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 935.0,
          "functions": 1,
          "importance": 1923.04,
          "has_source": true,
          "name": "SyncNsBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 52
        },
        {
          "eating_now_score": 935.0,
          "functions": 1,
          "importance": 1921.48,
          "has_source": true,
          "name": "UpdateNsIdBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 940.0,
          "functions": 4,
          "importance": 1929.82,
          "has_source": true,
          "name": "StartCalcBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 41
        },
        {
          "eating_now_score": 956.0,
          "functions": 5,
          "importance": 1970.34,
          "has_source": true,
          "name": "BolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 92
        },
        {
          "eating_now_score": 972.0,
          "functions": 0,
          "importance": 1989.34,
          "has_source": true,
          "name": "BolusCalculatorResult.kt",
          "package": "app.aaps.database.entities",
          "loc": 67
        },
        {
          "eating_now_score": 980.0,
          "functions": 27,
          "importance": 2039.62,
          "has_source": true,
          "name": "BolusCurrent.kt",
          "package": "app.aaps.pump.eopatch.vo",
          "loc": 181
        },
        {
          "eating_now_score": 982.0,
          "functions": 0,
          "importance": 2044.42,
          "has_source": true,
          "name": "BolusShortInsulinProgramElement.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command.insulin.program",
          "loc": 11
        },
        {
          "eating_now_score": 1010.0,
          "functions": 19,
          "importance": 2091.46,
          "has_source": true,
          "name": "BolusDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 73
        },
        {
          "eating_now_score": 1035.0,
          "functions": 1,
          "importance": 2113.86,
          "has_source": true,
          "name": "BolusWizardDTO.kt",
          "package": "app.aaps.pump.medtronic.data.dto",
          "loc": 43
        },
        {
          "eating_now_score": 1065.0,
          "functions": 12,
          "importance": 2199.5,
          "has_source": true,
          "name": "BolusCalculatorResultDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 50
        },
        {
          "eating_now_score": 1066.0,
          "functions": 14,
          "importance": 2216.46,
          "has_source": true,
          "name": "TreatmentsExtendedBolusesFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 248
        },
        {
          "eating_now_score": 1067.0,
          "functions": 1,
          "importance": 217.46,
          "has_source": true,
          "name": "BolusCalculatorResultExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 61
        },
        {
          "eating_now_score": 1070.0,
          "functions": 3,
          "importance": 2228.78,
          "has_source": true,
          "name": "DetailedBolusInfo.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 89
        },
        {
          "eating_now_score": 1080.0,
          "functions": 0,
          "importance": 2201.72,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 86
        },
        {
          "eating_now_score": 1142.0,
          "functions": 4,
          "importance": 232.62,
          "has_source": true,
          "name": "BolusWizardTest.kt",
          "package": "app.aaps.implementation.wizard",
          "loc": 212
        },
        {
          "eating_now_score": 1384.0,
          "functions": 15,
          "importance": 2874.4,
          "has_source": true,
          "name": "BolusWizard.kt",
          "package": "app.aaps.core.objects.wizard",
          "loc": 620
        },
        {
          "eating_now_score": 1944.0,
          "functions": 22,
          "importance": 3983.48,
          "has_source": true,
          "name": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 449
        }
      ]
    },
    {
      "repository": "EN_old",
      "file_count": 179,
      "avg_eating_now": 707.59,
      "max_eating_now": 1894.0,
      "files": [
        {
          "eating_now_score": 400.0,
          "functions": 0,
          "importance": 815.0,
          "has_source": false,
          "name": "ActiveBolus.java",
          "package": "unknown",
          "loc": 0
        },
        {
          "eating_now_score": 590.0,
          "functions": 0,
          "importance": 1215.68,
          "has_source": true,
          "name": "DetailedBolusInfoExtension.kt",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.eros.extensions",
          "loc": 14
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1251.06,
          "has_source": true,
          "name": "EventDismissBolusProgressIfRunning.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1251.06,
          "has_source": true,
          "name": "EventExtendedBolusChange.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1235.56,
          "has_source": true,
          "name": "BolusType.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.descriptors",
          "loc": 8
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1227.16,
          "has_source": true,
          "name": "BolusType.kt",
          "package": "info.nightscout.pump.medtrum.comm.enums",
          "loc": 8
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1231.28,
          "has_source": true,
          "name": "BolusProgressReporter.java",
          "package": "info.nightscout.pump.combo.ruffyscripter",
          "loc": 14
        },
        {
          "eating_now_score": 598.0,
          "functions": 0,
          "importance": 1215.3,
          "has_source": true,
          "name": "MsgHistoryBolus.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 15
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1279.14,
          "has_source": true,
          "name": "BolusProgressData.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "BolusAmountNotInRangeException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "BolusDurationNotInRangeException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "BolusLagTimeFeatureDisabledException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "BolusTypeAndParameterMismatchException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "CustomBolusNotConfiguredException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "MaximumNumberOfBolusTypeAlreadyRunningException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.56,
          "has_source": true,
          "name": "NoSuchBolusToCancelException.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.exceptions.app_layer_errors",
          "loc": 8
        },
        {
          "eating_now_score": 606.0,
          "functions": 1,
          "importance": 124.61,
          "has_source": true,
          "name": "CancelBolusPacketTest.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 606.0,
          "functions": 1,
          "importance": 124.61,
          "has_source": true,
          "name": "SetBolusMotorPacketTest.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.48,
          "has_source": true,
          "name": "FactoryMaxBolusAmountBlock.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.parameter_blocks",
          "loc": 4
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.48,
          "has_source": true,
          "name": "FactoryMinBolusAmountBlock.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.parameter_blocks",
          "loc": 4
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1251.48,
          "has_source": true,
          "name": "MaxBolusAmountBlock.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.parameter_blocks",
          "loc": 4
        },
        {
          "eating_now_score": 606.0,
          "functions": 2,
          "importance": 1257.2,
          "has_source": true,
          "name": "BolusExDuration.kt",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.code",
          "loc": 40
        },
        {
          "eating_now_score": 606.0,
          "functions": 0,
          "importance": 1238.46,
          "has_source": true,
          "name": "BolusType.java",
          "package": "org.monkey.d.ruffy.ruffy.driver.display.menu",
          "loc": 13
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 126.13,
          "has_source": true,
          "name": "MsgHistoryBolusTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 13
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 126.13,
          "has_source": true,
          "name": "MsgSetExtendedBolusStopTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 16
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 1263.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGet24CIRCFArray.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 1264.82,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCIRCFArray.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 116
        },
        {
          "eating_now_score": 614.0,
          "functions": 2,
          "importance": 1265.66,
          "has_source": true,
          "name": "DanaRSPacketBolusSet24CIRCFArray.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 58
        },
        {
          "eating_now_score": 614.0,
          "functions": 0,
          "importance": 1259.36,
          "has_source": true,
          "name": "DanaRSPacketHistoryBolus.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 18
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 1261.84,
          "has_source": true,
          "name": "DanaRSPacketNotifyMissedBolusAlarm.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 614.0,
          "functions": 2,
          "importance": 127.09,
          "has_source": true,
          "name": "BolusTimerImplTest.kt",
          "package": "app.aaps.plugins.automation",
          "loc": 72
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 1261.34,
          "has_source": true,
          "name": "SetBolusMotorPacket.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 17
        },
        {
          "eating_now_score": 614.0,
          "functions": 1,
          "importance": 1250.0,
          "has_source": true,
          "name": "MsgSetExtendedBolusStop.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 25
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.75,
          "has_source": true,
          "name": "MsgBolusStartTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.75,
          "has_source": true,
          "name": "MsgBolusStartWithSpeedTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.75,
          "has_source": true,
          "name": "MsgInitConnStatusBolusTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 23
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.74,
          "has_source": true,
          "name": "MsgSetExtendedBolusStartTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.74,
          "has_source": true,
          "name": "MsgStatusBolusExtendedTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.82,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCirCfArrayTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 34
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.85,
          "has_source": true,
          "name": "DanaRsPacketHistoryBolusTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 27
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.81,
          "has_source": true,
          "name": "DanaRsPacketNotifyMissedBolusAlarmTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.82,
          "has_source": true,
          "name": "SetBolusPacketTest.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 33
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 127.81,
          "has_source": true,
          "name": "DanaRsPacketReviewBolusAvgTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 622.0,
          "functions": 2,
          "importance": 1279.56,
          "has_source": true,
          "name": "BolusSpeedInquirePacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 28
        },
        {
          "eating_now_score": 622.0,
          "functions": 2,
          "importance": 1279.64,
          "has_source": true,
          "name": "BolusSpeedSettingPacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 32
        },
        {
          "eating_now_score": 622.0,
          "functions": 2,
          "importance": 1279.72,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingPacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 36
        },
        {
          "eating_now_score": 622.0,
          "functions": 0,
          "importance": 1278.44,
          "has_source": true,
          "name": "InsightBolusID.kt",
          "package": "info.nightscout.androidaps.insight.database",
          "loc": 22
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 1266.12,
          "has_source": true,
          "name": "MsgBolusStart.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 31
        },
        {
          "eating_now_score": 622.0,
          "functions": 1,
          "importance": 1266.16,
          "has_source": true,
          "name": "MsgBolusStartWithSpeed.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 33
        },
        {
          "eating_now_score": 628.0,
          "functions": 0,
          "importance": 1313.74,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.core.main.extensions",
          "loc": 12
        },
        {
          "eating_now_score": 630.0,
          "functions": 2,
          "importance": 1299.38,
          "has_source": true,
          "name": "ExtendedBolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 69
        },
        {
          "eating_now_score": 630.0,
          "functions": 2,
          "importance": 1296.96,
          "has_source": true,
          "name": "BolusSpeedSettingResponsePacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 48
        },
        {
          "eating_now_score": 630.0,
          "functions": 2,
          "importance": 1296.94,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingResponsePacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 47
        },
        {
          "eating_now_score": 630.0,
          "functions": 4,
          "importance": 1287.62,
          "has_source": true,
          "name": "CommandCancelExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 31
        },
        {
          "eating_now_score": 630.0,
          "functions": 1,
          "importance": 1283.2,
          "has_source": true,
          "name": "MsgSetExtendedBolusStart.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 35
        },
        {
          "eating_now_score": 638.0,
          "functions": 4,
          "importance": 1345.66,
          "has_source": true,
          "name": "ExtendedBolusDataPoint.kt",
          "package": "app.aaps.core.main.graph.data",
          "loc": 33
        },
        {
          "eating_now_score": 638.0,
          "functions": 0,
          "importance": 1315.72,
          "has_source": true,
          "name": "ActiveBolusTypeIDs.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.ids",
          "loc": 16
        },
        {
          "eating_now_score": 638.0,
          "functions": 0,
          "importance": 1315.72,
          "has_source": true,
          "name": "BolusTypeIDs.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.ids",
          "loc": 16
        },
        {
          "eating_now_score": 640.0,
          "functions": 0,
          "importance": 1310.5,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 80
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1330.36,
          "has_source": true,
          "name": "DelegatedBolusDao.kt",
          "package": "app.aaps.database.impl.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1330.36,
          "has_source": true,
          "name": "DelegatedExtendedBolusDao.kt",
          "package": "app.aaps.database.impl.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1330.36,
          "has_source": true,
          "name": "DelegatedMultiwaveBolusLinkDao.kt",
          "package": "app.aaps.database.impl.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 646.0,
          "functions": 1,
          "importance": 1326.08,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolusCancel.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1328.98,
          "has_source": true,
          "name": "BolusSpeedInquireResponsePacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 49
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1328.34,
          "has_source": true,
          "name": "BolusSpeedSettingReportPacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 42
        },
        {
          "eating_now_score": 646.0,
          "functions": 1,
          "importance": 1356.48,
          "has_source": true,
          "name": "PumpBolusType.kt",
          "package": "info.nightscout.androidaps.plugins.pump.medtronic.defs",
          "loc": 54
        },
        {
          "eating_now_score": 646.0,
          "functions": 1,
          "importance": 1326.4,
          "has_source": true,
          "name": "CancelBolusPacket.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 20
        },
        {
          "eating_now_score": 654.0,
          "functions": 1,
          "importance": 1370.14,
          "has_source": true,
          "name": "SyncPumpCancelExtendedBolusIfAnyTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 654.0,
          "functions": 1,
          "importance": 134.21,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusCancelTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 654.0,
          "functions": 1,
          "importance": 135.71,
          "has_source": true,
          "name": "ProgramBolusCommandTest.kt",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.dash.driver.pod.command",
          "loc": 23
        },
        {
          "eating_now_score": 654.0,
          "functions": 4,
          "importance": 1365.1,
          "has_source": true,
          "name": "BolusExtraCommand.java",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.eros.driver.communication.message.command",
          "loc": 75
        },
        {
          "eating_now_score": 654.0,
          "functions": 5,
          "importance": 1367.34,
          "has_source": true,
          "name": "BolusDeliverySchedule.java",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.eros.driver.definition.schedule",
          "loc": 62
        },
        {
          "eating_now_score": 654.0,
          "functions": 2,
          "importance": 134.46,
          "has_source": true,
          "name": "ReadBolusStatePacketTest.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 54
        },
        {
          "eating_now_score": 662.0,
          "functions": 1,
          "importance": 135.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetBolusOptionTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 662.0,
          "functions": 1,
          "importance": 135.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 662.0,
          "functions": 1,
          "importance": 1358.12,
          "has_source": true,
          "name": "ReadBolusStatePacket.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 31
        },
        {
          "eating_now_score": 662.0,
          "functions": 3,
          "importance": 1363.92,
          "has_source": true,
          "name": "Bolus.java",
          "package": "info.nightscout.pump.combo.ruffyscripter.history",
          "loc": 46
        },
        {
          "eating_now_score": 664.0,
          "functions": 1,
          "importance": 1389.24,
          "has_source": true,
          "name": "EventOverviewBolusProgress.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 12
        },
        {
          "eating_now_score": 666.0,
          "functions": 1,
          "importance": 136.54,
          "has_source": true,
          "name": "MsgBolusStopTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 668.0,
          "functions": 0,
          "importance": 1364.1,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 60
        },
        {
          "eating_now_score": 670.0,
          "functions": 0,
          "importance": 1375.42,
          "has_source": true,
          "name": "MultiwaveBolusLink.kt",
          "package": "app.aaps.database.entities",
          "loc": 46
        },
        {
          "eating_now_score": 670.0,
          "functions": 5,
          "importance": 1384.5,
          "has_source": true,
          "name": "MultiwaveBolusLinkDao.kt",
          "package": "app.aaps.database.impl.daos",
          "loc": 25
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 276.21,
          "has_source": true,
          "name": "InsertBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 27
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1380.92,
          "has_source": true,
          "name": "InvalidateBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 21
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1380.96,
          "has_source": true,
          "name": "InvalidateExtendedBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 276.23,
          "has_source": true,
          "name": "SyncBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1384.16,
          "has_source": true,
          "name": "SyncNsBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 58
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1385.7,
          "has_source": true,
          "name": "SyncNsExtendedBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 85
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1401.82,
          "has_source": true,
          "name": "SyncPumpBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 41
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1402.5,
          "has_source": true,
          "name": "SyncPumpExtendedBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 50
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1381.48,
          "has_source": true,
          "name": "UpdateNsIdBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1381.48,
          "has_source": true,
          "name": "UpdateNsIdExtendedBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1374.38,
          "has_source": true,
          "name": "DanaRSPacketBolusGetStepBolusInformation.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 44
        },
        {
          "eating_now_score": 670.0,
          "functions": 2,
          "importance": 1376.3,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolus.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 40
        },
        {
          "eating_now_score": 670.0,
          "functions": 2,
          "importance": 1376.98,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStart.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1374.34,
          "has_source": true,
          "name": "DanaRSPacketReviewBolusAvg.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 137.5,
          "has_source": true,
          "name": "DanaRsPacketBolusGetStepBolusInformationTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 670.0,
          "functions": 2,
          "importance": 137.71,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStartTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 80
        },
        {
          "eating_now_score": 670.0,
          "functions": 4,
          "importance": 1411.78,
          "has_source": true,
          "name": "BolusDataPoint.kt",
          "package": "app.aaps.core.main.graph.data",
          "loc": 39
        },
        {
          "eating_now_score": 670.0,
          "functions": 7,
          "importance": 1394.8,
          "has_source": true,
          "name": "AvailableBolusTypes.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.descriptors",
          "loc": 45
        },
        {
          "eating_now_score": 670.0,
          "functions": 10,
          "importance": 1402.78,
          "has_source": true,
          "name": "TriggerBolusAgo.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 89
        },
        {
          "eating_now_score": 670.0,
          "functions": 5,
          "importance": 138.88,
          "has_source": true,
          "name": "TriggerBolusAgoTest.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 91
        },
        {
          "eating_now_score": 670.0,
          "functions": 2,
          "importance": 1376.62,
          "has_source": true,
          "name": "InjectionExtendedBolusResultReportPacket.kt",
          "package": "info.nightscout.pump.diaconn.packet",
          "loc": 56
        },
        {
          "eating_now_score": 670.0,
          "functions": 3,
          "importance": 1388.16,
          "has_source": true,
          "name": "ReadBolusFinishTimeTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 63
        },
        {
          "eating_now_score": 670.0,
          "functions": 4,
          "importance": 1367.66,
          "has_source": true,
          "name": "CommandExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 33
        },
        {
          "eating_now_score": 670.0,
          "functions": 0,
          "importance": 1367.78,
          "has_source": true,
          "name": "BolusElement.kt",
          "package": "app.aaps.plugins.sync.tidepool.elements",
          "loc": 19
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1362.8,
          "has_source": true,
          "name": "MsgInitConnStatusBolus_k.kt",
          "package": "info.nightscout.androidaps.danaRKorean.comm",
          "loc": 40
        },
        {
          "eating_now_score": 670.0,
          "functions": 1,
          "importance": 1362.74,
          "has_source": true,
          "name": "MsgInitConnStatusBolus.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 37
        },
        {
          "eating_now_score": 670.0,
          "functions": 3,
          "importance": 1368.64,
          "has_source": true,
          "name": "MsgStatusBolusExtended.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 57
        },
        {
          "eating_now_score": 675.0,
          "functions": 1,
          "importance": 1385.72,
          "has_source": true,
          "name": "DanaRSPacketBolusGetBolusOption.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 111
        },
        {
          "eating_now_score": 675.0,
          "functions": 1,
          "importance": 138.48,
          "has_source": true,
          "name": "DanaRsPacketBolusGetBolusOptionTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 39
        },
        {
          "eating_now_score": 676.0,
          "functions": 0,
          "importance": 1376.78,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 44
        },
        {
          "eating_now_score": 678.0,
          "functions": 3,
          "importance": 1401.58,
          "has_source": true,
          "name": "Bolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 79
        },
        {
          "eating_now_score": 678.0,
          "functions": 2,
          "importance": 1404.7,
          "has_source": true,
          "name": "BolusDTO.kt",
          "package": "info.nightscout.androidaps.plugins.pump.medtronic.data.dto",
          "loc": 90
        },
        {
          "eating_now_score": 678.0,
          "functions": 1,
          "importance": 1390.46,
          "has_source": true,
          "name": "SetBolusPacket.kt",
          "package": "info.nightscout.pump.medtrum.comm.packets",
          "loc": 23
        },
        {
          "eating_now_score": 680.0,
          "functions": 2,
          "importance": 1396.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetBolusOption.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 73
        },
        {
          "eating_now_score": 682.0,
          "functions": 1,
          "importance": 139.82,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStopTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 684.0,
          "functions": 1,
          "importance": 1402.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStop.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 48
        },
        {
          "eating_now_score": 684.0,
          "functions": 1,
          "importance": 1390.08,
          "has_source": true,
          "name": "MsgBolusStop.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 29
        },
        {
          "eating_now_score": 686.0,
          "functions": 2,
          "importance": 1443.14,
          "has_source": true,
          "name": "DetailedBolusInfoStorage.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 688.0,
          "functions": 1,
          "importance": 140.95,
          "has_source": true,
          "name": "MsgBolusProgressTest.kt",
          "package": "info.nightscout.pump.danaR.comm",
          "loc": 24
        },
        {
          "eating_now_score": 694.0,
          "functions": 2,
          "importance": 1431.92,
          "has_source": true,
          "name": "CancelBolusMessage.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.remote_control",
          "loc": 26
        },
        {
          "eating_now_score": 697.0,
          "functions": 0,
          "importance": 1418.76,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 43
        },
        {
          "eating_now_score": 698.0,
          "functions": 0,
          "importance": 1453.94,
          "has_source": true,
          "name": "NSExtendedBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 27
        },
        {
          "eating_now_score": 700.0,
          "functions": 4,
          "importance": 1428.98,
          "has_source": true,
          "name": "CommandSMBBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 49
        },
        {
          "eating_now_score": 710.0,
          "functions": 1,
          "importance": 1470.64,
          "has_source": true,
          "name": "BolusAction.java",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.eros.driver.communication.action",
          "loc": 52
        },
        {
          "eating_now_score": 710.0,
          "functions": 5,
          "importance": 1471.02,
          "has_source": true,
          "name": "StopExtBolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 56
        },
        {
          "eating_now_score": 710.0,
          "functions": 5,
          "importance": 1471.08,
          "has_source": true,
          "name": "StopNowBolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 59
        },
        {
          "eating_now_score": 710.0,
          "functions": 2,
          "importance": 1463.96,
          "has_source": true,
          "name": "GetAvailableBolusTypesMessage.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.remote_control",
          "loc": 28
        },
        {
          "eating_now_score": 710.0,
          "functions": 2,
          "importance": 1465.2,
          "has_source": true,
          "name": "GetActiveBolusesMessage.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.status",
          "loc": 40
        },
        {
          "eating_now_score": 716.0,
          "functions": 7,
          "importance": 1470.98,
          "has_source": true,
          "name": "BolusActivity.kt",
          "package": "app.aaps.wear.interaction.actions",
          "loc": 74
        },
        {
          "eating_now_score": 718.0,
          "functions": 6,
          "importance": 1501.24,
          "has_source": true,
          "name": "ProgramBolusCommand.kt",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.dash.driver.pod.command",
          "loc": 132
        },
        {
          "eating_now_score": 718.0,
          "functions": 12,
          "importance": 1489.4,
          "has_source": true,
          "name": "BolusProgressDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 195
        },
        {
          "eating_now_score": 722.0,
          "functions": 0,
          "importance": 1507.98,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.core.main.extensions",
          "loc": 124
        },
        {
          "eating_now_score": 722.0,
          "functions": 1,
          "importance": 147.46,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 60
        },
        {
          "eating_now_score": 732.0,
          "functions": 1,
          "importance": 149.45,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 53
        },
        {
          "eating_now_score": 734.0,
          "functions": 1,
          "importance": 1509.54,
          "has_source": true,
          "name": "InsertOrUpdateBolusTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 52
        },
        {
          "eating_now_score": 734.0,
          "functions": 4,
          "importance": 1515.84,
          "has_source": true,
          "name": "DetailedBolusInfoStorageImpl.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 92
        },
        {
          "eating_now_score": 738.0,
          "functions": 1,
          "importance": 1497.56,
          "has_source": true,
          "name": "MsgBolusProgress.kt",
          "package": "info.nightscout.androidaps.danar.comm",
          "loc": 28
        },
        {
          "eating_now_score": 750.0,
          "functions": 6,
          "importance": 1555.06,
          "has_source": true,
          "name": "StopComboBolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 83
        },
        {
          "eating_now_score": 750.0,
          "functions": 9,
          "importance": 1558.68,
          "has_source": true,
          "name": "BolusDeliveredEvent.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.history.history_events",
          "loc": 64
        },
        {
          "eating_now_score": 750.0,
          "functions": 6,
          "importance": 1552.3,
          "has_source": true,
          "name": "BolusProgrammedEvent.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.history.history_events",
          "loc": 45
        },
        {
          "eating_now_score": 750.0,
          "functions": 8,
          "importance": 1557.8,
          "has_source": true,
          "name": "DeliverBolusMessage.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.app_layer.remote_control",
          "loc": 70
        },
        {
          "eating_now_score": 750.0,
          "functions": 2,
          "importance": 155.99,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 48
        },
        {
          "eating_now_score": 750.0,
          "functions": 4,
          "importance": 156.52,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 88
        },
        {
          "eating_now_score": 756.0,
          "functions": 7,
          "importance": 1549.78,
          "has_source": true,
          "name": "ExtendedBolusDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 139
        },
        {
          "eating_now_score": 758.0,
          "functions": 1,
          "importance": 1537.32,
          "has_source": true,
          "name": "BolusProgressHelperActivity.kt",
          "package": "app.aaps.ui.activities",
          "loc": 16
        },
        {
          "eating_now_score": 762.0,
          "functions": 1,
          "importance": 1588.16,
          "has_source": true,
          "name": "NSBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 38
        },
        {
          "eating_now_score": 770.0,
          "functions": 5,
          "importance": 1591.58,
          "has_source": true,
          "name": "StartQuickBolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 59
        },
        {
          "eating_now_score": 790.0,
          "functions": 4,
          "importance": 162.24,
          "has_source": true,
          "name": "DetailedBolusInfoStorageTest.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 95
        },
        {
          "eating_now_score": 798.0,
          "functions": 10,
          "importance": 1662.0,
          "has_source": true,
          "name": "BolusCommand.java",
          "package": "info.nightscout.pump.combo.ruffyscripter.commands",
          "loc": 250
        },
        {
          "eating_now_score": 799.0,
          "functions": 0,
          "importance": 1624.36,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 48
        },
        {
          "eating_now_score": 807.0,
          "functions": 1,
          "importance": 164.81,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCalculationInformationTest.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 30
        },
        {
          "eating_now_score": 817.0,
          "functions": 0,
          "importance": 1659.18,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 39
        },
        {
          "eating_now_score": 830.0,
          "functions": 10,
          "importance": 1720.4,
          "has_source": true,
          "name": "ActiveBolus.java",
          "package": "info.nightscout.androidaps.plugins.pump.insight.descriptors",
          "loc": 50
        },
        {
          "eating_now_score": 842.0,
          "functions": 1,
          "importance": 1719.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCalculationInformation.kt",
          "package": "info.nightscout.pump.danars.comm",
          "loc": 62
        },
        {
          "eating_now_score": 846.0,
          "functions": 2,
          "importance": 1730.36,
          "has_source": true,
          "name": "DelegatedBolusCalculatorResultDao.kt",
          "package": "app.aaps.database.impl.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 860.0,
          "functions": 4,
          "importance": 1750.48,
          "has_source": true,
          "name": "CommandBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 49
        },
        {
          "eating_now_score": 863.0,
          "functions": 0,
          "importance": 1783.9,
          "has_source": true,
          "name": "NSBolusWizard.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 25
        },
        {
          "eating_now_score": 870.0,
          "functions": 19,
          "importance": 1800.96,
          "has_source": true,
          "name": "ExtendedBolusDao.kt",
          "package": "app.aaps.database.impl.daos",
          "loc": 73
        },
        {
          "eating_now_score": 870.0,
          "functions": 6,
          "importance": 179.98,
          "has_source": true,
          "name": "BolusExtraCommandTest.java",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.eros.driver.communication.message.command",
          "loc": 61
        },
        {
          "eating_now_score": 885.0,
          "functions": 1,
          "importance": 1811.1,
          "has_source": true,
          "name": "InsertOrUpdateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 30
        },
        {
          "eating_now_score": 885.0,
          "functions": 1,
          "importance": 1810.96,
          "has_source": true,
          "name": "InvalidateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 885.0,
          "functions": 1,
          "importance": 1813.04,
          "has_source": true,
          "name": "SyncNsBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 52
        },
        {
          "eating_now_score": 885.0,
          "functions": 1,
          "importance": 1811.48,
          "has_source": true,
          "name": "UpdateNsIdBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.impl.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 890.0,
          "functions": 4,
          "importance": 1828.28,
          "has_source": true,
          "name": "StartCalcBolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 44
        },
        {
          "eating_now_score": 930.0,
          "functions": 27,
          "importance": 1938.02,
          "has_source": true,
          "name": "BolusCurrent.kt",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.vo",
          "loc": 181
        },
        {
          "eating_now_score": 932.0,
          "functions": 0,
          "importance": 1942.82,
          "has_source": true,
          "name": "BolusShortInsulinProgramElement.kt",
          "package": "info.nightscout.androidaps.plugins.pump.omnipod.dash.driver.pod.command.insulin.program",
          "loc": 11
        },
        {
          "eating_now_score": 960.0,
          "functions": 20,
          "importance": 1981.52,
          "has_source": true,
          "name": "BolusDao.kt",
          "package": "app.aaps.database.impl.daos",
          "loc": 76
        },
        {
          "eating_now_score": 985.0,
          "functions": 1,
          "importance": 2012.26,
          "has_source": true,
          "name": "BolusWizardDTO.kt",
          "package": "info.nightscout.androidaps.plugins.pump.medtronic.data.dto",
          "loc": 43
        },
        {
          "eating_now_score": 986.0,
          "functions": 8,
          "importance": 2033.02,
          "has_source": true,
          "name": "BolusTask.java",
          "package": "info.nightscout.androidaps.plugins.pump.eopatch.ble.task",
          "loc": 106
        },
        {
          "eating_now_score": 1015.0,
          "functions": 13,
          "importance": 2090.58,
          "has_source": true,
          "name": "BolusCalculatorResultDao.kt",
          "package": "app.aaps.database.impl.daos",
          "loc": 54
        },
        {
          "eating_now_score": 1016.0,
          "functions": 14,
          "importance": 2107.06,
          "has_source": true,
          "name": "TreatmentsExtendedBolusesFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 253
        },
        {
          "eating_now_score": 1027.0,
          "functions": 1,
          "importance": 208.46,
          "has_source": true,
          "name": "BolusCalculatorResultExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 59
        },
        {
          "eating_now_score": 1076.0,
          "functions": 4,
          "importance": 218.42,
          "has_source": true,
          "name": "BolusWizardTest.kt",
          "package": "app.aaps.implementation.wizard",
          "loc": 209
        },
        {
          "eating_now_score": 1084.0,
          "functions": 2,
          "importance": 2208.2,
          "has_source": true,
          "name": "BolusCalculatorResult.kt",
          "package": "app.aaps.database.entities",
          "loc": 110
        },
        {
          "eating_now_score": 1230.0,
          "functions": 7,
          "importance": 2560.5,
          "has_source": true,
          "name": "DetailedBolusInfo.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 150
        },
        {
          "eating_now_score": 1258.0,
          "functions": 13,
          "importance": 2622.68,
          "has_source": true,
          "name": "BolusWizard.kt",
          "package": "app.aaps.core.main.wizard",
          "loc": 534
        },
        {
          "eating_now_score": 1894.0,
          "functions": 22,
          "importance": 3876.46,
          "has_source": true,
          "name": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 473
        }
      ]
    },
    {
      "repository": "AAPS_source",
      "file_count": 174,
      "avg_eating_now": 501.84,
      "max_eating_now": 1694.0,
      "files": [
        {
          "eating_now_score": 254.0,
          "functions": 0,
          "importance": 546.74,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.core.objects.extensions",
          "loc": 12
        },
        {
          "eating_now_score": 382.0,
          "functions": 0,
          "importance": 787.68,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 34
        },
        {
          "eating_now_score": 382.0,
          "functions": 0,
          "importance": 787.5,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 80
        },
        {
          "eating_now_score": 389.0,
          "functions": 0,
          "importance": 799.1,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 60
        },
        {
          "eating_now_score": 390.0,
          "functions": 0,
          "importance": 800.28,
          "has_source": true,
          "name": "DetailedBolusInfoExtension.kt",
          "package": "app.aaps.pump.omnipod.eros.extensions",
          "loc": 14
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 844.06,
          "has_source": true,
          "name": "EventDismissBolusProgressIfRunning.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 844.06,
          "has_source": true,
          "name": "EventExtendedBolusChange.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "BolusAmountNotInRangeException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "BolusDurationNotInRangeException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "BolusLagTimeFeatureDisabledException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "BolusTypeAndParameterMismatchException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "CustomBolusNotConfiguredException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "MaximumNumberOfBolusTypeAlreadyRunningException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.06,
          "has_source": true,
          "name": "NoSuchBolusToCancelException.kt",
          "package": "app.aaps.pump.insight.exceptions.app_layer_errors",
          "loc": 3
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.16,
          "has_source": true,
          "name": "BolusType.kt",
          "package": "app.aaps.pump.medtrum.comm.enums",
          "loc": 8
        },
        {
          "eating_now_score": 398.0,
          "functions": 0,
          "importance": 820.3,
          "has_source": true,
          "name": "MsgHistoryBolus.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 15
        },
        {
          "eating_now_score": 406.0,
          "functions": 0,
          "importance": 872.14,
          "has_source": true,
          "name": "BolusProgressData.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 406.0,
          "functions": 0,
          "importance": 836.16,
          "has_source": true,
          "name": "BolusProfile.kt",
          "package": "app.aaps.pump.equil.data",
          "loc": 8
        },
        {
          "eating_now_score": 406.0,
          "functions": 0,
          "importance": 836.06,
          "has_source": true,
          "name": "FactoryMaxBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 406.0,
          "functions": 0,
          "importance": 836.06,
          "has_source": true,
          "name": "FactoryMinBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 406.0,
          "functions": 0,
          "importance": 836.06,
          "has_source": true,
          "name": "MaxBolusAmountBlock.kt",
          "package": "app.aaps.pump.insight.app_layer.parameter_blocks",
          "loc": 3
        },
        {
          "eating_now_score": 406.0,
          "functions": 1,
          "importance": 83.91,
          "has_source": true,
          "name": "CancelBolusPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 406.0,
          "functions": 1,
          "importance": 83.91,
          "has_source": true,
          "name": "SetBolusMotorPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 32
        },
        {
          "eating_now_score": 414.0,
          "functions": 0,
          "importance": 856.06,
          "has_source": true,
          "name": "ExtendedBolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 53
        },
        {
          "eating_now_score": 414.0,
          "functions": 2,
          "importance": 856.28,
          "has_source": true,
          "name": "BolusType.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 14
        },
        {
          "eating_now_score": 414.0,
          "functions": 2,
          "importance": 857.86,
          "has_source": true,
          "name": "BolusExDuration.kt",
          "package": "app.aaps.pump.eopatch.code",
          "loc": 43
        },
        {
          "eating_now_score": 414.0,
          "functions": 2,
          "importance": 86.39,
          "has_source": true,
          "name": "BolusTimerImplTest.kt",
          "package": "app.aaps.plugins.automation",
          "loc": 72
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 856.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGet24CIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 857.82,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 116
        },
        {
          "eating_now_score": 414.0,
          "functions": 2,
          "importance": 858.66,
          "has_source": true,
          "name": "DanaRSPacketBolusSet24CIRCFArray.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 58
        },
        {
          "eating_now_score": 414.0,
          "functions": 0,
          "importance": 852.36,
          "has_source": true,
          "name": "DanaRSPacketHistoryBolus.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 18
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 854.84,
          "has_source": true,
          "name": "DanaRSPacketNotifyMissedBolusAlarm.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 414.0,
          "functions": 0,
          "importance": 852.32,
          "has_source": true,
          "name": "CancelBolusMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 16
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 854.34,
          "has_source": true,
          "name": "SetBolusMotorPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 17
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 855.0,
          "has_source": true,
          "name": "MsgSetExtendedBolusStop.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 25
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 85.43,
          "has_source": true,
          "name": "MsgHistoryBolusTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 13
        },
        {
          "eating_now_score": 414.0,
          "functions": 1,
          "importance": 85.43,
          "has_source": true,
          "name": "MsgSetExtendedBolusStopTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 16
        },
        {
          "eating_now_score": 422.0,
          "functions": 0,
          "importance": 883.5,
          "has_source": true,
          "name": "InsightBolusID.kt",
          "package": "app.aaps.pump.insight.database",
          "loc": 25
        },
        {
          "eating_now_score": 422.0,
          "functions": 0,
          "importance": 868.2,
          "has_source": true,
          "name": "ActiveBolus.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 10
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 870.68,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 34
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.12,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCirCfArrayTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 34
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.15,
          "has_source": true,
          "name": "DanaRsPacketHistoryBolusTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 27
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.11,
          "has_source": true,
          "name": "DanaRsPacketNotifyMissedBolusAlarmTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.11,
          "has_source": true,
          "name": "DanaRsPacketReviewBolusAvgTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 31
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 870.5,
          "has_source": true,
          "name": "BolusSpeedInquirePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 25
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 870.62,
          "has_source": true,
          "name": "BolusSpeedSettingPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 31
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.12,
          "has_source": true,
          "name": "SetBolusPacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 33
        },
        {
          "eating_now_score": 422.0,
          "functions": 4,
          "importance": 894.62,
          "has_source": true,
          "name": "ExtendedBolusDataPoint.kt",
          "package": "app.aaps.core.graph.data",
          "loc": 31
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 871.12,
          "has_source": true,
          "name": "MsgBolusStart.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 31
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 871.16,
          "has_source": true,
          "name": "MsgBolusStartWithSpeed.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 33
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.05,
          "has_source": true,
          "name": "MsgBolusStartTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.05,
          "has_source": true,
          "name": "MsgBolusStartWithSpeedTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 26
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.05,
          "has_source": true,
          "name": "MsgInitConnStatusBolusTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 23
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.04,
          "has_source": true,
          "name": "MsgSetExtendedBolusStartTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 422.0,
          "functions": 1,
          "importance": 87.04,
          "has_source": true,
          "name": "MsgStatusBolusExtendedTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 430.0,
          "functions": 1,
          "importance": 887.9,
          "has_source": true,
          "name": "InjectionExtendedBolusSettingResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 45
        },
        {
          "eating_now_score": 430.0,
          "functions": 1,
          "importance": 887.92,
          "has_source": true,
          "name": "BolusSpeedSettingResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 46
        },
        {
          "eating_now_score": 430.0,
          "functions": 4,
          "importance": 880.84,
          "has_source": true,
          "name": "CommandCancelExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 42
        },
        {
          "eating_now_score": 430.0,
          "functions": 1,
          "importance": 888.2,
          "has_source": true,
          "name": "MsgSetExtendedBolusStart.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 35
        },
        {
          "eating_now_score": 438.0,
          "functions": 4,
          "importance": 921.0,
          "has_source": true,
          "name": "CmdExtendedBolusSet.kt",
          "package": "app.aaps.pump.equil.manager.command",
          "loc": 60
        },
        {
          "eating_now_score": 438.0,
          "functions": 1,
          "importance": 902.46,
          "has_source": true,
          "name": "GetAvailableBolusTypesMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 23
        },
        {
          "eating_now_score": 438.0,
          "functions": 4,
          "importance": 928.78,
          "has_source": true,
          "name": "BolusDataPoint.kt",
          "package": "app.aaps.core.graph.data",
          "loc": 39
        },
        {
          "eating_now_score": 446.0,
          "functions": 2,
          "importance": 923.36,
          "has_source": true,
          "name": "DelegatedBolusDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 446.0,
          "functions": 2,
          "importance": 923.36,
          "has_source": true,
          "name": "DelegatedExtendedBolusDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 446.0,
          "functions": 0,
          "importance": 924.14,
          "has_source": true,
          "name": "Bolus.kt",
          "package": "app.aaps.database.entities",
          "loc": 57
        },
        {
          "eating_now_score": 446.0,
          "functions": 1,
          "importance": 919.08,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolusCancel.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 446.0,
          "functions": 1,
          "importance": 919.94,
          "has_source": true,
          "name": "BolusSpeedInquireResponsePacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 47
        },
        {
          "eating_now_score": 446.0,
          "functions": 1,
          "importance": 919.3,
          "has_source": true,
          "name": "BolusSpeedSettingReportPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 40
        },
        {
          "eating_now_score": 446.0,
          "functions": 1,
          "importance": 919.84,
          "has_source": true,
          "name": "DeliverBolusMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.remote_control",
          "loc": 42
        },
        {
          "eating_now_score": 446.0,
          "functions": 1,
          "importance": 919.4,
          "has_source": true,
          "name": "CancelBolusPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 20
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 963.14,
          "has_source": true,
          "name": "SyncPumpCancelExtendedBolusIfAnyTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 93.51,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusCancelTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 29
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 934.82,
          "has_source": true,
          "name": "BolusDeliveredEvent.kt",
          "package": "app.aaps.pump.insight.app_layer.history.history_events",
          "loc": 41
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 934.6,
          "has_source": true,
          "name": "BolusProgrammedEvent.kt",
          "package": "app.aaps.pump.insight.app_layer.history.history_events",
          "loc": 30
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 957.1,
          "has_source": true,
          "name": "PumpBolusType.kt",
          "package": "app.aaps.pump.medtronic.defs",
          "loc": 55
        },
        {
          "eating_now_score": 454.0,
          "functions": 2,
          "importance": 93.76,
          "has_source": true,
          "name": "ReadBolusStatePacketTest.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 54
        },
        {
          "eating_now_score": 454.0,
          "functions": 1,
          "importance": 94.17,
          "has_source": true,
          "name": "ProgramBolusCommandTest.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command",
          "loc": 23
        },
        {
          "eating_now_score": 454.0,
          "functions": 4,
          "importance": 949.74,
          "has_source": true,
          "name": "BolusExtraCommand.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.message.command",
          "loc": 77
        },
        {
          "eating_now_score": 454.0,
          "functions": 5,
          "importance": 951.94,
          "has_source": true,
          "name": "BolusDeliverySchedule.java",
          "package": "app.aaps.pump.omnipod.eros.driver.definition.schedule",
          "loc": 62
        },
        {
          "eating_now_score": 460.0,
          "functions": 0,
          "importance": 937.8,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 45
        },
        {
          "eating_now_score": 462.0,
          "functions": 1,
          "importance": 95.12,
          "has_source": true,
          "name": "DanaRsPacketBolusSetBolusOptionTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 462.0,
          "functions": 1,
          "importance": 95.12,
          "has_source": true,
          "name": "DanaRsPacketBolusSetExtendedBolusTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 35
        },
        {
          "eating_now_score": 462.0,
          "functions": 1,
          "importance": 951.12,
          "has_source": true,
          "name": "ReadBolusStatePacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 31
        },
        {
          "eating_now_score": 462.0,
          "functions": 0,
          "importance": 945.34,
          "has_source": true,
          "name": "BolusElement.kt",
          "package": "app.aaps.plugins.sync.tidepool.elements",
          "loc": 22
        },
        {
          "eating_now_score": 464.0,
          "functions": 1,
          "importance": 982.24,
          "has_source": true,
          "name": "EventOverviewBolusProgress.kt",
          "package": "app.aaps.core.interfaces.rx.events",
          "loc": 12
        },
        {
          "eating_now_score": 466.0,
          "functions": 1,
          "importance": 95.84,
          "has_source": true,
          "name": "MsgBolusStopTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 20
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 194.81,
          "has_source": true,
          "name": "InsertBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 27
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 974.1,
          "has_source": true,
          "name": "InsertOrUpdateBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 30
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 973.92,
          "has_source": true,
          "name": "InvalidateBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 21
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 973.96,
          "has_source": true,
          "name": "InvalidateExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 194.83,
          "has_source": true,
          "name": "SyncBolusWithTempIdTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 32
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 977.16,
          "has_source": true,
          "name": "SyncNsBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 58
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 978.7,
          "has_source": true,
          "name": "SyncNsExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 85
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 994.82,
          "has_source": true,
          "name": "SyncPumpBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 41
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 995.5,
          "has_source": true,
          "name": "SyncPumpExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 50
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.58,
          "has_source": true,
          "name": "InjectionExtendedBolusResultReportPacket.kt",
          "package": "app.aaps.pump.diaconn.packet",
          "loc": 54
        },
        {
          "eating_now_score": 470.0,
          "functions": 3,
          "importance": 972.62,
          "has_source": true,
          "name": "ReadBolusFinishTimeTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 56
        },
        {
          "eating_now_score": 470.0,
          "functions": 10,
          "importance": 995.26,
          "has_source": true,
          "name": "TriggerBolusAgo.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 88
        },
        {
          "eating_now_score": 470.0,
          "functions": 5,
          "importance": 98.16,
          "has_source": true,
          "name": "TriggerBolusAgoTest.kt",
          "package": "app.aaps.plugins.automation.triggers",
          "loc": 81
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.38,
          "has_source": true,
          "name": "DanaRSPacketBolusGetStepBolusInformation.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 44
        },
        {
          "eating_now_score": 470.0,
          "functions": 2,
          "importance": 969.3,
          "has_source": true,
          "name": "DanaRSPacketBolusSetExtendedBolus.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 40
        },
        {
          "eating_now_score": 470.0,
          "functions": 2,
          "importance": 969.98,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStart.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.34,
          "has_source": true,
          "name": "DanaRSPacketReviewBolusAvg.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 42
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 96.8,
          "has_source": true,
          "name": "DanaRsPacketBolusGetStepBolusInformationTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 49
        },
        {
          "eating_now_score": 470.0,
          "functions": 2,
          "importance": 97.01,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStartTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 81
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.64,
          "has_source": true,
          "name": "GetActiveBolusesMessage.kt",
          "package": "app.aaps.pump.insight.app_layer.status",
          "loc": 32
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 974.48,
          "has_source": true,
          "name": "UpdateNsIdBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 974.48,
          "has_source": true,
          "name": "UpdateNsIdExtendedBolusTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 470.0,
          "functions": 4,
          "importance": 960.88,
          "has_source": true,
          "name": "CommandExtendedBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 44
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.74,
          "has_source": true,
          "name": "MsgInitConnStatusBolus.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 37
        },
        {
          "eating_now_score": 470.0,
          "functions": 3,
          "importance": 973.64,
          "has_source": true,
          "name": "MsgStatusBolusExtended.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 57
        },
        {
          "eating_now_score": 470.0,
          "functions": 1,
          "importance": 967.8,
          "has_source": true,
          "name": "MsgInitConnStatusBolusK.kt",
          "package": "app.aaps.pump.danarkorean.comm",
          "loc": 40
        },
        {
          "eating_now_score": 475.0,
          "functions": 1,
          "importance": 978.72,
          "has_source": true,
          "name": "DanaRSPacketBolusGetBolusOption.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 111
        },
        {
          "eating_now_score": 475.0,
          "functions": 1,
          "importance": 97.78,
          "has_source": true,
          "name": "DanaRsPacketBolusGetBolusOptionTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 39
        },
        {
          "eating_now_score": 478.0,
          "functions": 2,
          "importance": 989.3,
          "has_source": true,
          "name": "BolusDTO.kt",
          "package": "app.aaps.pump.medtronic.data.dto",
          "loc": 90
        },
        {
          "eating_now_score": 478.0,
          "functions": 1,
          "importance": 983.46,
          "has_source": true,
          "name": "SetBolusPacket.kt",
          "package": "app.aaps.pump.medtrum.comm.packets",
          "loc": 23
        },
        {
          "eating_now_score": 478.0,
          "functions": 0,
          "importance": 981.04,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 52
        },
        {
          "eating_now_score": 480.0,
          "functions": 2,
          "importance": 989.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetBolusOption.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 73
        },
        {
          "eating_now_score": 482.0,
          "functions": 1,
          "importance": 99.12,
          "has_source": true,
          "name": "DanaRsPacketBolusSetStepBolusStopTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 37
        },
        {
          "eating_now_score": 484.0,
          "functions": 1,
          "importance": 995.96,
          "has_source": true,
          "name": "DanaRSPacketBolusSetStepBolusStop.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 48
        },
        {
          "eating_now_score": 484.0,
          "functions": 1,
          "importance": 995.08,
          "has_source": true,
          "name": "MsgBolusStop.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 29
        },
        {
          "eating_now_score": 486.0,
          "functions": 2,
          "importance": 1036.14,
          "has_source": true,
          "name": "DetailedBolusInfoStorage.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 7
        },
        {
          "eating_now_score": 488.0,
          "functions": 1,
          "importance": 100.25,
          "has_source": true,
          "name": "MsgBolusProgressTest.kt",
          "package": "app.aaps.pump.danaR.comm",
          "loc": 24
        },
        {
          "eating_now_score": 494.0,
          "functions": 1,
          "importance": 1014.82,
          "has_source": true,
          "name": "AvailableBolusTypes.kt",
          "package": "app.aaps.pump.insight.descriptors",
          "loc": 16
        },
        {
          "eating_now_score": 497.0,
          "functions": 0,
          "importance": 1011.78,
          "has_source": true,
          "name": "BolusExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 44
        },
        {
          "eating_now_score": 498.0,
          "functions": 0,
          "importance": 1046.94,
          "has_source": true,
          "name": "NSExtendedBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 27
        },
        {
          "eating_now_score": 500.0,
          "functions": 4,
          "importance": 1022.3,
          "has_source": true,
          "name": "CommandSMBBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 65
        },
        {
          "eating_now_score": 510.0,
          "functions": 5,
          "importance": 1055.52,
          "has_source": true,
          "name": "StopExtBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 51
        },
        {
          "eating_now_score": 510.0,
          "functions": 5,
          "importance": 1055.6,
          "has_source": true,
          "name": "StopNowBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 55
        },
        {
          "eating_now_score": 510.0,
          "functions": 1,
          "importance": 1055.28,
          "has_source": true,
          "name": "BolusAction.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.action",
          "loc": 54
        },
        {
          "eating_now_score": 516.0,
          "functions": 7,
          "importance": 1063.96,
          "has_source": true,
          "name": "BolusActivity.kt",
          "package": "app.aaps.wear.interaction.actions",
          "loc": 73
        },
        {
          "eating_now_score": 518.0,
          "functions": 6,
          "importance": 1085.84,
          "has_source": true,
          "name": "ProgramBolusCommand.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command",
          "loc": 132
        },
        {
          "eating_now_score": 518.0,
          "functions": 12,
          "importance": 1082.4,
          "has_source": true,
          "name": "BolusProgressDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 195
        },
        {
          "eating_now_score": 522.0,
          "functions": 0,
          "importance": 1088.94,
          "has_source": true,
          "name": "ExtendedBolusExtension.kt",
          "package": "app.aaps.core.objects.extensions",
          "loc": 122
        },
        {
          "eating_now_score": 522.0,
          "functions": 1,
          "importance": 106.76,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 62
        },
        {
          "eating_now_score": 524.0,
          "functions": 0,
          "importance": 1067.4,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclient.extensions",
          "loc": 50
        },
        {
          "eating_now_score": 532.0,
          "functions": 1,
          "importance": 108.75,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 55
        },
        {
          "eating_now_score": 534.0,
          "functions": 4,
          "importance": 1108.8,
          "has_source": true,
          "name": "DetailedBolusInfoStorageImpl.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 90
        },
        {
          "eating_now_score": 538.0,
          "functions": 1,
          "importance": 1102.56,
          "has_source": true,
          "name": "MsgBolusProgress.kt",
          "package": "app.aaps.pump.danar.comm",
          "loc": 28
        },
        {
          "eating_now_score": 550.0,
          "functions": 6,
          "importance": 1140.56,
          "has_source": true,
          "name": "StopComboBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 78
        },
        {
          "eating_now_score": 550.0,
          "functions": 2,
          "importance": 115.29,
          "has_source": true,
          "name": "BolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 48
        },
        {
          "eating_now_score": 550.0,
          "functions": 4,
          "importance": 115.82,
          "has_source": true,
          "name": "ExtendedBolusExtensionKtTest.kt",
          "package": "app.aaps.plugins.main.extensions",
          "loc": 88
        },
        {
          "eating_now_score": 556.0,
          "functions": 7,
          "importance": 1142.84,
          "has_source": true,
          "name": "ExtendedBolusDialog.kt",
          "package": "app.aaps.ui.dialogs",
          "loc": 142
        },
        {
          "eating_now_score": 558.0,
          "functions": 1,
          "importance": 1130.32,
          "has_source": true,
          "name": "BolusProgressHelperActivity.kt",
          "package": "app.aaps.ui.activities",
          "loc": 16
        },
        {
          "eating_now_score": 570.0,
          "functions": 1,
          "importance": 1197.18,
          "has_source": true,
          "name": "NSBolus.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 39
        },
        {
          "eating_now_score": 570.0,
          "functions": 4,
          "importance": 1174.14,
          "has_source": true,
          "name": "StartQuickBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 57
        },
        {
          "eating_now_score": 589.0,
          "functions": 0,
          "importance": 1196.16,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 38
        },
        {
          "eating_now_score": 590.0,
          "functions": 4,
          "importance": 121.54,
          "has_source": true,
          "name": "DetailedBolusInfoStorageTest.kt",
          "package": "app.aaps.implementation.pump",
          "loc": 95
        },
        {
          "eating_now_score": 607.0,
          "functions": 1,
          "importance": 124.11,
          "has_source": true,
          "name": "DanaRsPacketBolusGetCalculationInformationTest.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 30
        },
        {
          "eating_now_score": 630.0,
          "functions": 17,
          "importance": 1313.82,
          "has_source": true,
          "name": "ExtendedBolusDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 66
        },
        {
          "eating_now_score": 642.0,
          "functions": 1,
          "importance": 1312.74,
          "has_source": true,
          "name": "DanaRSPacketBolusGetCalculationInformation.kt",
          "package": "app.aaps.pump.danars.comm",
          "loc": 62
        },
        {
          "eating_now_score": 646.0,
          "functions": 2,
          "importance": 1323.36,
          "has_source": true,
          "name": "DelegatedBolusCalculatorResultDao.kt",
          "package": "app.aaps.database.daos.delegated",
          "loc": 18
        },
        {
          "eating_now_score": 660.0,
          "functions": 4,
          "importance": 1343.72,
          "has_source": true,
          "name": "CommandBolus.kt",
          "package": "app.aaps.implementation.queue.commands",
          "loc": 61
        },
        {
          "eating_now_score": 663.0,
          "functions": 0,
          "importance": 1376.9,
          "has_source": true,
          "name": "NSBolusWizard.kt",
          "package": "app.aaps.core.nssdk.localmodel.treatment",
          "loc": 25
        },
        {
          "eating_now_score": 670.0,
          "functions": 6,
          "importance": 138.44,
          "has_source": true,
          "name": "BolusExtraCommandTest.java",
          "package": "app.aaps.pump.omnipod.eros.driver.communication.message.command",
          "loc": 61
        },
        {
          "eating_now_score": 685.0,
          "functions": 1,
          "importance": 1404.1,
          "has_source": true,
          "name": "InsertOrUpdateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 30
        },
        {
          "eating_now_score": 685.0,
          "functions": 1,
          "importance": 1403.96,
          "has_source": true,
          "name": "InvalidateBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 23
        },
        {
          "eating_now_score": 685.0,
          "functions": 1,
          "importance": 1406.04,
          "has_source": true,
          "name": "SyncNsBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 52
        },
        {
          "eating_now_score": 685.0,
          "functions": 1,
          "importance": 1404.48,
          "has_source": true,
          "name": "UpdateNsIdBolusCalculatorResultTransaction.kt",
          "package": "app.aaps.database.transactions",
          "loc": 24
        },
        {
          "eating_now_score": 690.0,
          "functions": 4,
          "importance": 1412.82,
          "has_source": true,
          "name": "StartCalcBolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 41
        },
        {
          "eating_now_score": 706.0,
          "functions": 5,
          "importance": 1453.34,
          "has_source": true,
          "name": "BolusTask.kt",
          "package": "app.aaps.pump.eopatch.ble.task",
          "loc": 92
        },
        {
          "eating_now_score": 710.0,
          "functions": 18,
          "importance": 1473.86,
          "has_source": true,
          "name": "BolusDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 68
        },
        {
          "eating_now_score": 722.0,
          "functions": 0,
          "importance": 1472.34,
          "has_source": true,
          "name": "BolusCalculatorResult.kt",
          "package": "app.aaps.database.entities",
          "loc": 67
        },
        {
          "eating_now_score": 730.0,
          "functions": 27,
          "importance": 1522.62,
          "has_source": true,
          "name": "BolusCurrent.kt",
          "package": "app.aaps.pump.eopatch.vo",
          "loc": 181
        },
        {
          "eating_now_score": 732.0,
          "functions": 0,
          "importance": 1527.42,
          "has_source": true,
          "name": "BolusShortInsulinProgramElement.kt",
          "package": "app.aaps.pump.omnipod.dash.driver.pod.command.insulin.program",
          "loc": 11
        },
        {
          "eating_now_score": 785.0,
          "functions": 1,
          "importance": 1596.86,
          "has_source": true,
          "name": "BolusWizardDTO.kt",
          "package": "app.aaps.pump.medtronic.data.dto",
          "loc": 43
        },
        {
          "eating_now_score": 815.0,
          "functions": 12,
          "importance": 1682.5,
          "has_source": true,
          "name": "BolusCalculatorResultDao.kt",
          "package": "app.aaps.database.daos",
          "loc": 50
        },
        {
          "eating_now_score": 816.0,
          "functions": 14,
          "importance": 1699.46,
          "has_source": true,
          "name": "TreatmentsExtendedBolusesFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 248
        },
        {
          "eating_now_score": 817.0,
          "functions": 1,
          "importance": 165.76,
          "has_source": true,
          "name": "BolusCalculatorResultExtensionKtTest.kt",
          "package": "app.aaps.plugins.sync.nsclientV3.extensions",
          "loc": 61
        },
        {
          "eating_now_score": 820.0,
          "functions": 3,
          "importance": 1711.78,
          "has_source": true,
          "name": "DetailedBolusInfo.kt",
          "package": "app.aaps.core.interfaces.pump",
          "loc": 89
        },
        {
          "eating_now_score": 830.0,
          "functions": 0,
          "importance": 1684.72,
          "has_source": true,
          "name": "BolusCalculatorResultExtension.kt",
          "package": "app.aaps.database.persistence.converters",
          "loc": 86
        },
        {
          "eating_now_score": 892.0,
          "functions": 4,
          "importance": 180.92,
          "has_source": true,
          "name": "BolusWizardTest.kt",
          "package": "app.aaps.implementation.wizard",
          "loc": 212
        },
        {
          "eating_now_score": 1134.0,
          "functions": 15,
          "importance": 2357.4,
          "has_source": true,
          "name": "BolusWizard.kt",
          "package": "app.aaps.core.objects.wizard",
          "loc": 620
        },
        {
          "eating_now_score": 1694.0,
          "functions": 22,
          "importance": 3466.48,
          "has_source": true,
          "name": "TreatmentsBolusCarbsFragment.kt",
          "package": "app.aaps.ui.activities.fragments",
          "loc": 449
        }
      ]
    }
  ],
  "code_examples": {
    "bolus_calculation": [
      {
        "filename": "AutotuneIob.kt",
        "repository": "EN_old",
        "package": "app.aaps.plugins.aps.autotune",
        "eating_now_score": 1193.0,
        "has_source": true,
        "score": 4.021354675292969,
        "full_source_code": "package app.aaps.plugins.aps.autotune\n\nimport app.aaps.core.interfaces.configuration.Constants\nimport app.aaps.core.interfaces.iob.Iob\nimport app.aaps.core.interfaces.iob.IobTotal\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.core.interfaces.profile.Profile\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.interfaces.utils.Round\nimport app.aaps.core.interfaces.utils.T\nimport app.aaps.core.main.extensions.convertedToAbsolute\nimport app.aaps.core.main.extensions.durationInMinutes\nimport app.aaps.core.main.extensions.toJson\nimport app.aaps.core.main.extensions.toTemporaryBasal\nimport app.aaps.core.main.iob.round\nimport app.aaps.core.utils.MidnightUtils\nimport app.aaps.database.entities.Bolus\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.ExtendedBolus\nimport app.aaps.database.entities.GlucoseValue\nimport app.aaps.database.entities.TemporaryBasal\nimport app.aaps.database.entities.TherapyEvent\nimport app.aaps.database.entities.embedments.InterfaceIDs\nimport app.aaps.database.impl.AppRepository\nimport app.aaps.plugins.aps.autotune.data.ATProfile\nimport app.aaps.plugins.aps.autotune.data.LocalInsulin\nimport org.json.JSONArray\nimport org.json.JSONObject\nimport javax.inject.Inject\nimport javax.inject.Singleton\nimport kotlin.math.ceil\n\n@Singleton\nopen class AutotuneIob @Inject constructor(\n    private val aapsLogger: AAPSLogger,\n    private val repository: AppRepository,\n    private val profileFunction: ProfileFunction,\n    private val sp: SP,\n    private val dateUtil: DateUtil,\n    private val autotuneFS: AutotuneFS\n) {\n\n    private var nsTreatments = ArrayList<NsTreatment>()\n    private var dia: Double = Constants.defaultDIA\n    var boluses: ArrayList<Bolus> = ArrayList()\n    var meals = ArrayList<Carbs>()\n    lateinit var glucose: List<GlucoseValue> // newest at index 0\n    private lateinit var tempBasals: ArrayList<TemporaryBasal>\n    var startBG: Long = 0\n    private var endBG: Long = 0\n    private fun range(): Long = (60 * 60 * 1000L * dia + T.hours(2).msecs()).toLong()\n\n    fun initializeData(from: Long, to: Long, tunedProfile: ATProfile) {\n        dia = tunedProfile.dia\n        startBG = from\n        endBG = to\n        nsTreatments.clear()\n        meals.clear()\n        boluses.clear()\n        tempBasals = ArrayList()\n        if (profileFunction.getProfile(from - range()) == null)\n            return\n        initializeBgReadings(from, to)\n        initializeTreatmentData(from - range(), to)\n        initializeTempBasalData(from - range(), to, tunedProfile)\n        initializeExtendedBolusData(from - range(), to, tunedProfile)\n        sortTempBasal()\n        addNeutralTempBasal(from - range(), to, tunedProfile)        // Without Neutral TBR, Autotune Web will ignore iob for periods without TBR running\n        sortNsTreatments()\n        sortBoluses()\n        aapsLogger.debug(LTag.AUTOTUNE, \"Nb Treatments: \" + nsTreatments.size + \" Nb meals: \" + meals.size)\n    }\n\n    @Synchronized\n    private fun sortTempBasal() {\n        tempBasals = ArrayList(tempBasals.toList().sortedWith { o1: TemporaryBasal, o2: TemporaryBasal -> (o2.timestamp - o1.timestamp).toInt() })\n    }\n\n    @Synchronized\n    private fun sortNsTreatments() {\n        nsTreatments = ArrayList(nsTreatments.toList().sortedWith { o1: NsTreatment, o2: NsTreatment -> (o2.date - o1.date).toInt() })\n    }\n\n    @Synchronized\n    private fun sortBoluses() {\n        boluses = ArrayList(boluses.toList().sortedWith { o1: Bolus, o2: Bolus -> (o2.timestamp - o1.timestamp).toInt() })\n    }\n\n    private fun initializeBgReadings(from: Long, to: Long) {\n        glucose = repository.compatGetBgReadingsDataFromTime(from, to, false).blockingGet()\n    }\n\n    //nsTreatment is used only for export data, meals is used in AutotunePrep\n    private fun initializeTreatmentData(from: Long, to: Long) {\n        val oldestBgDate = if (glucose.isNotEmpty()) glucose[glucose.size - 1].timestamp else from\n        aapsLogger.debug(\n            LTag.AUTOTUNE,\n            \"Check BG date: BG Size: \" + glucose.size + \" OldestBG: \" + dateUtil.dateAndTimeAndSecondsString(oldestBgDate) + \" to: \" + dateUtil.dateAndTimeAndSecondsString(to)\n        )\n        val tmpCarbs = repository.getCarbsDataFromTimeToTimeExpanded(from, to, false).blockingGet()\n        aapsLogger.debug(LTag.AUTOTUNE, \"Nb treatments after query: \" + tmpCarbs.size)\n        var nbCarbs = 0\n        for (i in tmpCarbs.indices) {\n            val tp = tmpCarbs[i]\n            if (tp.isValid) {\n                nsTreatments.add(NsTreatment(tp))\n                //only carbs after first BGReadings are taken into account in calculation of Autotune\n                if (tp.amount > 0.0 && tp.timestamp >= oldestBgDate) meals.add(tmpCarbs[i])\n                if (tp.timestamp < to && tp.amount > 0.0)\n                    nbCarbs++\n            }\n        }\n        val tmpBolus = repository.getBolusesDataFromTimeToTime(from, to, false).blockingGet()\n        var nbSMB = 0\n        var nbBolus = 0\n        for (i in tmpBolus.indices) {\n            val tp = tmpBolus[i]\n            if (tp.isValid && tp.type != Bolus.Type.PRIMING) {\n                boluses.add(tp)\n                nsTreatments.add(NsTreatment(tp))\n                //only carbs after first BGReadings are taken into account in calculation of Autotune\n                if (tp.timestamp < to) {\n                    if (tp.type == Bolus.Type.SMB)\n                        nbSMB++\n                    else if (tp.amount > 0.0)\n                        nbBolus++\n                }\n            }\n        }\n        //log.debug(\"AutotunePlugin Nb Meals: $nbCarbs Nb Bolus: $nbBolus Nb SMB: $nbSMB\")\n    }\n\n    //nsTreatment is used only for export data\n    private fun initializeTempBasalData(from: Long, to: Long, tunedProfile: ATProfile) {\n        val tBRs = repository.getTemporaryBasalsDataFromTimeToTime(from, to, false).blockingGet()\n        //log.debug(\"D/AutotunePlugin tempBasal size before cleaning:\" + tBRs.size);\n        for (i in tBRs.indices) {\n            if (tBRs[i].isValid)\n                toSplittedTimestampTB(tBRs[i], tunedProfile)\n        }\n        //log.debug(\"D/AutotunePlugin: tempBasal size: \" + tempBasals.size)\n    }\n\n    //nsTreatment is used only for export data\n    private fun initializeExtendedBolusData(from: Long, to: Long, tunedProfile: ATProfile) {\n        val extendedBoluses = repository.getExtendedBolusDataFromTimeToTime(from, to, false).blockingGet()\n        for (i in extendedBoluses.indices) {\n            val eb = extendedBoluses[i]\n            if (eb.isValid)\n                if (eb.isEmulatingTempBasal) {\n                    profileFunction.getProfile(eb.timestamp)?.let {\n                        toSplittedTimestampTB(eb.toTemporaryBasal(it), tunedProfile)\n                    }\n                } else {\n                    nsTreatments.add(NsTreatment(eb))\n                    boluses.addAll(convertToBoluses(eb))\n                }\n        }\n    }\n\n    // addNeutralTempBasal will add a fake neutral TBR (100%) to have correct basal rate in exported file for periods without TBR running\n    // to be able to compare results between oref0 algo and aaps\n    @Synchronized\n    private fun addNeutralTempBasal(from: Long, to: Long, tunedProfile: ATProfile) {\n        var previousStart = to\n        for (i in tempBasals.indices) {\n            val newStart = tempBasals[i].timestamp + tempBasals[i].duration\n            if (previousStart - newStart > T.mins(1).msecs()) {                  // fill neutral only if more than 1 min\n                val neutralTbr = TemporaryBasal(\n                    isValid = true,\n                    isAbsolute = false,\n                    timestamp = newStart,\n                    rate = 100.0,\n                    duration = previousStart - newStart,\n                    interfaceIDs_backing = InterfaceIDs(nightscoutId = \"neutral_$newStart\"),\n                    type = TemporaryBasal.Type.NORMAL\n                )\n                toSplittedTimestampTB(neutralTbr, tunedProfile)\n            }\n            previousStart = tempBasals[i].timestamp\n        }\n        if (previousStart - from > T.mins(1).msecs()) {                         // fill neutral only if more than 1 min\n            val neutralTbr = TemporaryBasal(\n                isValid = true,\n                isAbsolute = false,\n                timestamp = from,\n                rate = 100.0,\n                duration = previousStart - from,\n                interfaceIDs_backing = InterfaceIDs(nightscoutId = \"neutral_$from\"),\n                type = TemporaryBasal.Type.NORMAL\n            )\n            toSplittedTimestampTB(neutralTbr, tunedProfile)\n        }\n    }\n\n    // toSplittedTimestampTB will split all TBR across hours in different TBR with correct absolute value to be sure to have correct basal rate\n    // even if profile rate is not the same\n    @Synchronized\n    private fun toSplittedTimestampTB(tb: TemporaryBasal, tunedProfile: ATProfile) {\n        var splittedTimestamp = tb.timestamp\n        val cutInMilliSec = T.mins(60).msecs()                  //30 min to compare with oref0, 60 min to improve accuracy\n        var splittedDuration = tb.duration\n        if (tb.isValid && tb.durationInMinutes > 0) {\n            val endTimestamp = splittedTimestamp + splittedDuration\n            while (splittedDuration > 0) {\n                if (MidnightUtils.milliSecFromMidnight(splittedTimestamp) / cutInMilliSec == MidnightUtils.milliSecFromMidnight(endTimestamp) / cutInMilliSec) {\n                    val newTb = TemporaryBasal(\n                        isValid = true,\n                        isAbsolute = tb.isAbsolute,\n                        timestamp = splittedTimestamp,\n                        rate = tb.rate,\n                        duration = splittedDuration,\n                        interfaceIDs_backing = tb.interfaceIDs_backing,\n                        type = tb.type\n                    )\n                    tempBasals.add(newTb)\n                    nsTreatments.add(NsTreatment(newTb))\n                    splittedDuration = 0\n                    val profile = profileFunction.getProfile(newTb.timestamp) ?: continue\n                    boluses.addAll(convertToBoluses(newTb, profile, tunedProfile.profile))           //\n                    // required for correct iob calculation with oref0 algo\n                } else {\n                    val durationFilled = (cutInMilliSec - MidnightUtils.milliSecFromMidnight(splittedTimestamp) % cutInMilliSec)\n                    val newTb = TemporaryBasal(\n                        isValid = true,\n                        isAbsolute = tb.isAbsolute,\n                        timestamp = splittedTimestamp,\n                        rate = tb.rate,\n                        duration = durationFilled,\n                        interfaceIDs_backing = tb.interfaceIDs_backing,\n                        type = tb.type\n                    )\n                    tempBasals.add(newTb)\n                    nsTreatments.add(NsTreatment(newTb))\n                    splittedTimestamp += durationFilled\n                    splittedDuration -= durationFilled\n                    val profile = profileFunction.getProfile(newTb.timestamp) ?: continue\n                    boluses.addAll(convertToBoluses(newTb, profile, tunedProfile.profile))           // required for correct iob calculation with oref0 algo\n                }\n            }\n        }\n    }\n\n    open fun getIOB(time: Long, localInsulin: LocalInsulin): IobTotal =\n        getCalculationToTimeTreatments(time, localInsulin).round()\n\n    // Add specific calculation for Autotune (reference localInsulin for Peak/dia)\n    private fun Bolus.iobCalc(time: Long, localInsulin: LocalInsulin): Iob {\n        if (!isValid || type == Bolus.Type.PRIMING) return Iob()\n        return localInsulin.iobCalcForTreatment(this, time)\n    }\n\n    private fun getCalculationToTimeTreatments(time: Long, localInsulin: LocalInsulin): IobTotal {\n        val total = IobTotal(time)\n        val detailedLog = sp.getBoolean(app.aaps.core.utils.R.string.key_autotune_additional_log, false)\n        for (pos in boluses.indices) {\n            val t = boluses[pos]\n            if (!t.isValid) continue\n            if (t.timestamp > time || t.timestamp < time - localInsulin.duration) continue\n            val tIOB = t.iobCalc(time, localInsulin)\n            if (detailedLog)\n                log(\n                    \"iobCalc;${t.interfaceIDs.nightscoutId};$time;${t.timestamp};${tIOB.iobContrib};${tIOB.activityContrib};${dateUtil.dateAndTimeAndSecondsString(time)};${\n                        dateUtil.dateAndTimeAndSecondsString(\n                            t.timestamp\n                        )\n                    }\"\n                )\n            total.iob += tIOB.iobContrib\n            total.activity += tIOB.activityContrib\n        }\n        return total\n    }\n\n    private fun convertToBoluses(eb: ExtendedBolus): MutableList<Bolus> {\n        val result: MutableList<Bolus> = ArrayList()\n        val aboutFiveMinIntervals = ceil(eb.duration / 5.0).toInt()\n        val spacing = eb.duration / aboutFiveMinIntervals.toDouble()\n        for (j in 0L until aboutFiveMinIntervals) {\n            // find middle of the interval\n            val calcDate = (eb.timestamp + j * spacing * 60 * 1000 + 0.5 * spacing * 60 * 1000).toLong()\n            val tempBolusSize: Double = eb.amount / aboutFiveMinIntervals\n            val bolusInterfaceIDs = InterfaceIDs().also { it.nightscoutId = eb.interfaceIDs.nightscoutId + \"_eb_$j\" }\n            val tempBolusPart = Bolus(\n                interfaceIDs_backing = bolusInterfaceIDs,\n                timestamp = calcDate,\n                amount = tempBolusSize,\n                type = Bolus.Type.NORMAL\n            )\n            result.add(tempBolusPart)\n        }\n        return result\n    }\n\n    private fun convertToBoluses(tbr: TemporaryBasal, profile: Profile, tunedProfile: Profile): MutableList<Bolus> {\n        val result: MutableList<Bolus> = ArrayList()\n        val realDuration = tbr.durationInMinutes\n        val basalRate = profile.getBasal(tbr.timestamp)\n        val tunedRate = tunedProfile.getBasal(tbr.timestamp)\n        val netBasalRate = Round.roundTo(\n            if (tbr.isAbsolute) {\n                tbr.rate - tunedRate\n            } else {\n                tbr.rate / 100.0 * basalRate - tunedRate\n            }, 0.001\n        )\n        val aboutFiveMinIntervals = ceil(realDuration / 5.0).toInt()\n        val tempBolusSpacing = realDuration / aboutFiveMinIntervals.toDouble()\n        for (j in 0L until aboutFiveMinIntervals) {\n            // find middle of the interval\n            val calcDate = (tbr.timestamp + j * tempBolusSpacing * 60 * 1000 + 0.5 * tempBolusSpacing * 60 * 1000).toLong()\n            val tempBolusSize = netBasalRate * tempBolusSpacing / 60.0\n            val bolusInterfaceIDs = InterfaceIDs().also { it.nightscoutId = tbr.interfaceIDs.nightscoutId + \"_tbr_$j\" }\n            val tempBolusPart = Bolus(\n                interfaceIDs_backing = bolusInterfaceIDs,\n                timestamp = calcDate,\n                amount = tempBolusSize,\n                type = Bolus.Type.NORMAL\n            )\n            result.add(tempBolusPart)\n        }\n        return result\n    }\n\n    fun Bolus.toJson(isAdd: Boolean, dateUtil: DateUtil): JSONObject =\n        JSONObject()\n            .put(\"eventType\", if (type == Bolus.Type.SMB) TherapyEvent.Type.CORRECTION_BOLUS.text else TherapyEvent.Type.MEAL_BOLUS.text)\n            .put(\"insulin\", amount)\n            .put(\"created_at\", dateUtil.toISOString(timestamp))\n            .put(\"date\", timestamp)\n            .put(\"type\", type.name)\n            .put(\"notes\", notes)\n            .put(\"isValid\", isValid)\n            .put(\"isSMB\", type == Bolus.Type.SMB).also {\n                if (interfaceIDs.pumpId != null) it.put(\"pumpId\", interfaceIDs.pumpId)\n                if (interfaceIDs.pumpType != null) it.put(\"pumpType\", interfaceIDs.pumpType!!.name)\n                if (interfaceIDs.pumpSerial != null) it.put(\"pumpSerial\", interfaceIDs.pumpSerial)\n                if (isAdd && interfaceIDs.nightscoutId != null) it.put(\"_id\", interfaceIDs.nightscoutId)\n            }\n\n    @Synchronized\n    fun glucoseToJSON(): String {\n        val glucoseJson = JSONArray()\n        for (bgReading in glucose)\n            glucoseJson.put(bgReading.toJson(true, dateUtil))\n        return glucoseJson.toString(2)\n    }\n\n    @Synchronized\n    fun bolusesToJSON(): String {\n        val bolusesJson = JSONArray()\n        for (bolus in boluses)\n            bolusesJson.put(bolus.toJson(true, dateUtil))\n        return bolusesJson.toString(2)\n    }\n\n    @Synchronized\n    fun nsHistoryToJSON(): String {\n        val json = JSONArray()\n        for (t in nsTreatments) {\n            json.put(t.toJson())\n        }\n        return json.toString(2).replace(\"\\\\/\", \"/\")\n    }\n\n    //I add this internal class to be able to export easily ns-treatment files with same contain and format than NS query used by oref0-autotune\n    private inner class NsTreatment {\n\n        var date: Long = 0\n        var eventType: TherapyEvent.Type? = null\n        var carbsTreatment: Carbs? = null\n        var bolusTreatment: Bolus? = null\n        var temporaryBasal: TemporaryBasal? = null\n        var extendedBolus: ExtendedBolus? = null\n\n        constructor(t: Carbs) {\n            carbsTreatment = t\n            date = t.timestamp\n            eventType = TherapyEvent.Type.CARBS_CORRECTION\n        }\n\n        constructor(t: Bolus) {\n            bolusTreatment = t\n            date = t.timestamp\n            eventType = TherapyEvent.Type.CORRECTION_BOLUS\n        }\n\n        constructor(t: TemporaryBasal) {\n            temporaryBasal = t\n            date = t.timestamp\n            eventType = TherapyEvent.Type.TEMPORARY_BASAL\n        }\n\n        constructor(t: ExtendedBolus) {\n            extendedBolus = t\n            date = t.timestamp\n            eventType = TherapyEvent.Type.COMBO_BOLUS\n        }\n\n        fun TemporaryBasal.toJson(isAdd: Boolean, profile: Profile, dateUtil: DateUtil): JSONObject =\n            JSONObject()\n                .put(\"created_at\", dateUtil.toISOString(timestamp))\n                .put(\"enteredBy\", \"openaps://\" + \"AndroidAPS\")\n                .put(\"eventType\", TherapyEvent.Type.TEMPORARY_BASAL.text)\n                .put(\"isValid\", isValid)\n                .put(\"duration\", T.msecs(duration).mins())\n                .put(\"durationInMilliseconds\", duration) // rounded duration leads to different basal IOB\n                .put(\"type\", type.name)\n                .put(\"rate\", convertedToAbsolute(timestamp, profile)) // generated by OpenAPS, for compatibility\n                .also {\n                    if (isAbsolute) it.put(\"absolute\", rate)\n                    else it.put(\"percent\", rate - 100)\n                    if (interfaceIDs.pumpId != null) it.put(\"pumpId\", interfaceIDs.pumpId)\n                    if (interfaceIDs.endId != null) it.put(\"endId\", interfaceIDs.endId)\n                    if (interfaceIDs.pumpType != null) it.put(\"pumpType\", interfaceIDs.pumpType!!.name)\n                    if (interfaceIDs.pumpSerial != null) it.put(\"pumpSerial\", interfaceIDs.pumpSerial)\n                    if (isAdd && interfaceIDs.nightscoutId != null) it.put(\"_id\", interfaceIDs.nightscoutId)\n                }\n\n        fun ExtendedBolus.toJson(isAdd: Boolean, profile: Profile, dateUtil: DateUtil): JSONObject =\n            if (isEmulatingTempBasal)\n                toTemporaryBasal(profile)\n                    .toJson(isAdd, profile, dateUtil)\n                    .put(\"extendedEmulated\", toRealJson(isAdd, dateUtil))\n            else toRealJson(isAdd, dateUtil)\n\n        fun ExtendedBolus.toRealJson(isAdd: Boolean, dateUtil: DateUtil): JSONObject =\n            JSONObject()\n                .put(\"created_at\", dateUtil.toISOString(timestamp))\n                .put(\"enteredBy\", \"openaps://\" + \"AndroidAPS\")\n                .put(\"eventType\", TherapyEvent.Type.COMBO_BOLUS.text)\n                .put(\"duration\", T.msecs(duration).mins())\n                .put(\"durationInMilliseconds\", duration)\n                .put(\"splitNow\", 0)\n                .put(\"splitExt\", 100)\n                .put(\"enteredinsulin\", amount)\n                .put(\"relative\", rate)\n                .put(\"isValid\", isValid)\n                .put(\"isEmulatingTempBasal\", isEmulatingTempBasal)\n                .also {\n                    if (interfaceIDs.pumpId != null) it.put(\"pumpId\", interfaceIDs.pumpId)\n                    if (interfaceIDs.endId != null) it.put(\"endId\", interfaceIDs.endId)\n                    if (interfaceIDs.pumpType != null) it.put(\"pumpType\", interfaceIDs.pumpType!!.name)\n                    if (interfaceIDs.pumpSerial != null) it.put(\"pumpSerial\", interfaceIDs.pumpSerial)\n                    if (isAdd && interfaceIDs.nightscoutId != null) it.put(\"_id\", interfaceIDs.nightscoutId)\n                }\n\n        fun Carbs.toJson(isAdd: Boolean, dateUtil: DateUtil): JSONObject =\n            JSONObject()\n                .put(\"eventType\", if (amount < 12) TherapyEvent.Type.CARBS_CORRECTION.text else TherapyEvent.Type.MEAL_BOLUS.text)\n                .put(\"carbs\", amount)\n                .put(\"notes\", notes)\n                .put(\"created_at\", dateUtil.toISOString(timestamp))\n                .put(\"isValid\", isValid)\n                .put(\"date\", timestamp).also {\n                    if (duration != 0L) it.put(\"duration\", duration)\n                    if (interfaceIDs.pumpId != null) it.put(\"pumpId\", interfaceIDs.pumpId)\n                    if (interfaceIDs.pumpType != null) it.put(\"pumpType\", interfaceIDs.pumpType!!.name)\n                    if (interfaceIDs.pumpSerial != null) it.put(\"pumpSerial\", interfaceIDs.pumpSerial)\n                    if (isAdd && interfaceIDs.nightscoutId != null) it.put(\"_id\", interfaceIDs.nightscoutId)\n                }\n\n        fun toJson(): JSONObject? {\n            val cpJson = JSONObject()\n            return when (eventType) {\n                TherapyEvent.Type.TEMPORARY_BASAL  ->\n                    temporaryBasal?.let { tbr ->\n                        val profile = profileFunction.getProfile(tbr.timestamp)\n                        profile?.let {\n                            tbr.toJson(true, it, dateUtil)\n                        }\n                    }\n\n                TherapyEvent.Type.COMBO_BOLUS      ->\n                    extendedBolus?.let { ebr ->\n                        val profile = profileFunction.getProfile(ebr.timestamp)\n                        profile?.let {\n                            ebr.toJson(true, it, dateUtil)\n                        }\n                    }\n\n                TherapyEvent.Type.CORRECTION_BOLUS -> bolusTreatment?.toJson(true, dateUtil)\n                TherapyEvent.Type.CARBS_CORRECTION -> carbsTreatment?.toJson(true, dateUtil)\n                else                               -> cpJson\n            }\n        }\n    }\n\n    private fun log(message: String) {\n        autotuneFS.atLog(\"[iob] $message\")\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InvokeLoopWorker.kt",
        "repository": "EN_new",
        "package": "app.aaps.workflow",
        "eating_now_score": 295.0,
        "has_source": true,
        "score": 4.015348434448242,
        "full_source_code": "package app.aaps.workflow\n\nimport android.content.Context\nimport androidx.work.WorkerParameters\nimport androidx.work.workDataOf\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.rx.events.Event\nimport app.aaps.core.interfaces.rx.events.EventNewBG\nimport app.aaps.core.objects.workflow.LoggingWorker\nimport app.aaps.core.utils.receivers.DataWorkerStorage\nimport kotlinx.coroutines.Dispatchers\nimport javax.inject.Inject\n\nclass InvokeLoopWorker(\n    context: Context,\n    params: WorkerParameters\n) : LoggingWorker(context, params, Dispatchers.Default) {\n\n    @Inject lateinit var dataWorkerStorage: DataWorkerStorage\n    @Inject lateinit var iobCobCalculator: IobCobCalculator\n    @Inject lateinit var loop: Loop\n\n    class InvokeLoopData(\n        val cause: Event?\n    )\n\n    /*\n     This method is triggered once autosens calculation has completed, so the LoopPlugin\n     has current data to work with. However, autosens calculation can be triggered by multiple\n     sources and currently only a new BG should trigger a loop run. Hence we return early if\n     the event causing the calculation is not EventNewBG.\n     <p>\n    */\n    override suspend fun doWorkAndLog(): Result {\n\n        val data = dataWorkerStorage.pickupObject(inputData.getLong(DataWorkerStorage.STORE_KEY, -1)) as InvokeLoopData?\n            ?: return Result.failure(workDataOf(\"Error\" to \"missing input data\"))\n\n        if (data.cause !is EventNewBG) return Result.success(workDataOf(\"Result\" to \"no calculation needed\"))\n        val glucoseValue = iobCobCalculator.ads.actualBg() ?: return Result.success(workDataOf(\"Result\" to \"bg outdated\"))\n        if (glucoseValue.timestamp <= loop.lastBgTriggeredRun) return Result.success(workDataOf(\"Result\" to \"already looped with that value\"))\n        loop.lastBgTriggeredRun = glucoseValue.timestamp\n        loop.invoke(\"Calculation for $glucoseValue\", true)\n        return Result.success()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InvokeLoopWorker.kt",
        "repository": "EN_old",
        "package": "app.aaps.workflow",
        "eating_now_score": 245.0,
        "has_source": true,
        "score": 4.015348434448242,
        "full_source_code": "package app.aaps.workflow\n\nimport android.content.Context\nimport androidx.work.WorkerParameters\nimport androidx.work.workDataOf\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.rx.events.Event\nimport app.aaps.core.interfaces.rx.events.EventNewBG\nimport app.aaps.core.main.utils.worker.LoggingWorker\nimport app.aaps.core.utils.receivers.DataWorkerStorage\nimport kotlinx.coroutines.Dispatchers\nimport javax.inject.Inject\n\nclass InvokeLoopWorker(\n    context: Context,\n    params: WorkerParameters\n) : LoggingWorker(context, params, Dispatchers.Default) {\n\n    @Inject lateinit var dataWorkerStorage: DataWorkerStorage\n    @Inject lateinit var iobCobCalculator: IobCobCalculator\n    @Inject lateinit var loop: Loop\n\n    class InvokeLoopData(\n        val cause: Event?\n    )\n\n    /*\n     This method is triggered once autosens calculation has completed, so the LoopPlugin\n     has current data to work with. However, autosens calculation can be triggered by multiple\n     sources and currently only a new BG should trigger a loop run. Hence we return early if\n     the event causing the calculation is not EventNewBG.\n     <p>\n    */\n    override suspend fun doWorkAndLog(): Result {\n\n        val data = dataWorkerStorage.pickupObject(inputData.getLong(DataWorkerStorage.STORE_KEY, -1)) as InvokeLoopData?\n            ?: return Result.failure(workDataOf(\"Error\" to \"missing input data\"))\n\n        if (data.cause !is EventNewBG) return Result.success(workDataOf(\"Result\" to \"no calculation needed\"))\n        val glucoseValue = iobCobCalculator.ads.actualBg() ?: return Result.success(workDataOf(\"Result\" to \"bg outdated\"))\n        if (glucoseValue.timestamp <= loop.lastBgTriggeredRun) return Result.success(workDataOf(\"Result\" to \"already looped with that value\"))\n        loop.lastBgTriggeredRun = glucoseValue.timestamp\n        loop.invoke(\"Calculation for $glucoseValue\", true)\n        return Result.success()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InvokeLoopWorker.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.workflow",
        "eating_now_score": 45.0,
        "has_source": true,
        "score": 4.015348434448242,
        "full_source_code": "package app.aaps.workflow\n\nimport android.content.Context\nimport androidx.work.WorkerParameters\nimport androidx.work.workDataOf\nimport app.aaps.core.interfaces.aps.Loop\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.rx.events.Event\nimport app.aaps.core.interfaces.rx.events.EventNewBG\nimport app.aaps.core.objects.workflow.LoggingWorker\nimport app.aaps.core.utils.receivers.DataWorkerStorage\nimport kotlinx.coroutines.Dispatchers\nimport javax.inject.Inject\n\nclass InvokeLoopWorker(\n    context: Context,\n    params: WorkerParameters\n) : LoggingWorker(context, params, Dispatchers.Default) {\n\n    @Inject lateinit var dataWorkerStorage: DataWorkerStorage\n    @Inject lateinit var iobCobCalculator: IobCobCalculator\n    @Inject lateinit var loop: Loop\n\n    class InvokeLoopData(\n        val cause: Event?\n    )\n\n    /*\n     This method is triggered once autosens calculation has completed, so the LoopPlugin\n     has current data to work with. However, autosens calculation can be triggered by multiple\n     sources and currently only a new BG should trigger a loop run. Hence we return early if\n     the event causing the calculation is not EventNewBG.\n     <p>\n    */\n    override suspend fun doWorkAndLog(): Result {\n\n        val data = dataWorkerStorage.pickupObject(inputData.getLong(DataWorkerStorage.STORE_KEY, -1)) as InvokeLoopData?\n            ?: return Result.failure(workDataOf(\"Error\" to \"missing input data\"))\n\n        if (data.cause !is EventNewBG) return Result.success(workDataOf(\"Result\" to \"no calculation needed\"))\n        val glucoseValue = iobCobCalculator.ads.actualBg() ?: return Result.success(workDataOf(\"Result\" to \"bg outdated\"))\n        if (glucoseValue.timestamp <= loop.lastBgTriggeredRun) return Result.success(workDataOf(\"Result\" to \"already looped with that value\"))\n        loop.lastBgTriggeredRun = glucoseValue.timestamp\n        loop.invoke(\"Calculation for $glucoseValue\", true)\n        return Result.success()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "APS.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.interfaces.aps",
        "eating_now_score": 304.0,
        "has_source": true,
        "score": 3.930083751678467,
        "full_source_code": "package app.aaps.core.interfaces.aps\n\nimport app.aaps.core.interfaces.configuration.ConfigExportImport\nimport app.aaps.core.interfaces.profile.Profile\n\ninterface APS : ConfigExportImport {\n\n    /**\n     * Algorithm used\n     */\n    val algorithm: APSResult.Algorithm\n\n    /**\n     * Result of last invocation\n     */\n    val lastAPSResult: APSResult?\n\n    /**\n     * Timestamp of last invocation\n     */\n    val lastAPSRun: Long\n\n    /**\n     * Is APS providing variable ISF calculation?\n     * @return true if yes\n     */\n    fun supportsDynamicIsf(): Boolean = false\n\n    /**\n     * Is APS providing variable IC calculation?\n     * @return true if yes\n     */\n    fun supportsDynamicIc(): Boolean = false\n\n    /**\n     * Dedicated string for Sensitivity OKDialog in overview on ISF calculation ?\n     * @return string or null if nothing to show\n     */\n    fun getSensitivityOverviewString(): String? = null\n\n    /**\n     * Calculate current ISF\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @param caller Caller identification for logging purposes\n     * @return isf or null if not available\n     *\n     * Remember calculation must be as fast as possible. It's called very often\n     */\n    fun getIsfMgdl(profile: Profile, caller: String): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate ISF to specified timestamp\n     * @param timestamp time\n     * @param caller Caller identification for logging purposes\n     * @return isf or null if not available\n     *\n     * Remember calculation must be as fast as possible. It's called very often\n     */\n    fun getAverageIsfMgdl(timestamp: Long, caller: String): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate current IC\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @return ic or null if not available\n     */\n    fun getIc(profile: Profile): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate IC to specified timestamp\n     * @param timestamp time\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @return ic or null if not available\n     */\n    fun getIc(timestamp: Long, profile: Profile): Double? = error(\"Not implemented\")\n\n    /**\n     * Is plugin enabled?\n     * Overlap with [PluginBase::isEnabled] to avoid type conversion\n     */\n    fun isEnabled(): Boolean\n\n    /**\n     * Invoke algorithm\n     * @param initiator caller\n     * @param tempBasalFallback if true previous enact of SMB failed. Try calculation without SMB\n     */\n    fun invoke(initiator: String, tempBasalFallback: Boolean)\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "APS.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.core.interfaces.aps",
        "eating_now_score": 54.0,
        "has_source": true,
        "score": 3.930083751678467,
        "full_source_code": "package app.aaps.core.interfaces.aps\n\nimport app.aaps.core.interfaces.configuration.ConfigExportImport\nimport app.aaps.core.interfaces.profile.Profile\n\ninterface APS : ConfigExportImport {\n\n    /**\n     * Algorithm used\n     */\n    val algorithm: APSResult.Algorithm\n\n    /**\n     * Result of last invocation\n     */\n    val lastAPSResult: APSResult?\n\n    /**\n     * Timestamp of last invocation\n     */\n    val lastAPSRun: Long\n\n    /**\n     * Is APS providing variable ISF calculation?\n     * @return true if yes\n     */\n    fun supportsDynamicIsf(): Boolean = false\n\n    /**\n     * Is APS providing variable IC calculation?\n     * @return true if yes\n     */\n    fun supportsDynamicIc(): Boolean = false\n\n    /**\n     * Dedicated string for Sensitivity OKDialog in overview on ISF calculation ?\n     * @return string or null if nothing to show\n     */\n    fun getSensitivityOverviewString(): String? = null\n\n    /**\n     * Calculate current ISF\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @param caller Caller identification for logging purposes\n     * @return isf or null if not available\n     *\n     * Remember calculation must be as fast as possible. It's called very often\n     */\n    fun getIsfMgdl(profile: Profile, caller: String): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate ISF to specified timestamp\n     * @param timestamp time\n     * @param caller Caller identification for logging purposes\n     * @return isf or null if not available\n     *\n     * Remember calculation must be as fast as possible. It's called very often\n     */\n    fun getAverageIsfMgdl(timestamp: Long, caller: String): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate current IC\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @return ic or null if not available\n     */\n    fun getIc(profile: Profile): Double? = error(\"Not implemented\")\n\n    /**\n     * Calculate IC to specified timestamp\n     * @param timestamp time\n     * @param profile Actual profile to get multiplier form [ProfileSealed.EPS]\n     * @return ic or null if not available\n     */\n    fun getIc(timestamp: Long, profile: Profile): Double? = error(\"Not implemented\")\n\n    /**\n     * Is plugin enabled?\n     * Overlap with [PluginBase::isEnabled] to avoid type conversion\n     */\n    fun isEnabled(): Boolean\n\n    /**\n     * Invoke algorithm\n     * @param initiator caller\n     * @param tempBasalFallback if true previous enact of SMB failed. Try calculation without SMB\n     */\n    fun invoke(initiator: String, tempBasalFallback: Boolean)\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "AutotunePrepTest.kt",
        "repository": "EN_old",
        "package": "app.aaps.plugins.aps.autotune",
        "eating_now_score": 921.0,
        "has_source": true,
        "score": 3.653547525405884,
        "full_source_code": "package app.aaps.plugins.aps.autotune\n\nimport app.aaps.core.interfaces.db.GlucoseUnit\nimport app.aaps.core.interfaces.iob.IobTotal\nimport app.aaps.core.interfaces.logging.AAPSLogger\nimport app.aaps.core.interfaces.profile.ProfileFunction\nimport app.aaps.core.interfaces.profile.PureProfile\nimport app.aaps.core.interfaces.sharedPreferences.SP\nimport app.aaps.core.interfaces.utils.DateUtil\nimport app.aaps.core.interfaces.utils.T\nimport app.aaps.core.main.extensions.shiftBlock\nimport app.aaps.core.main.profile.ProfileSealed\nimport app.aaps.core.utils.JsonHelper\nimport app.aaps.database.entities.Bolus\nimport app.aaps.database.entities.Carbs\nimport app.aaps.database.entities.GlucoseValue\nimport app.aaps.database.entities.data.Block\nimport app.aaps.database.entities.data.TargetBlock\nimport app.aaps.database.impl.AppRepository\nimport app.aaps.plugins.aps.autotune.data.ATProfile\nimport app.aaps.plugins.aps.autotune.data.LocalInsulin\nimport app.aaps.plugins.aps.autotune.data.PreppedGlucose\nimport app.aaps.shared.tests.TestBaseWithProfile\nimport com.google.common.truth.Truth.assertThat\nimport org.json.JSONArray\nimport org.json.JSONObject\nimport org.junit.jupiter.api.BeforeEach\nimport org.junit.jupiter.api.Test\nimport org.mockito.Mock\nimport org.mockito.Mockito.`when`\nimport java.io.File\nimport java.util.TimeZone\n\nclass AutotunePrepTest : TestBaseWithProfile() {\n\n    @Mock lateinit var autotuneFS: AutotuneFS\n    @Mock lateinit var repository: AppRepository\n    private lateinit var autotunePrep: AutotunePrep\n    private lateinit var autotuneIob: TestAutotuneIob\n    private var ts = 0\n    private var min5mCarbImpact = 0.0\n    private var autotuneMin = 0.0\n    private var autotuneMax = 0.0\n    private var startDayTime = 0L\n\n    @BeforeEach\n    fun initData() {\n        ts = T.msecs(TimeZone.getDefault().getOffset(System.currentTimeMillis()).toLong()).hours().toInt() - 2\n    }\n\n    @Test\n    fun autotunePrepTest1() { // Test if categorisation with standard treatments with carbs is Ok\n        val inputIobJson = File(\"src/test/res/autotune/test1/oaps-iobCalc.2022-05-21.json\").readText() //json files build with iob/activity calculated by OAPS\n        val iobOapsCalculation = buildIobOaps(JSONArray(inputIobJson))\n        autotuneIob = TestAutotuneIob(aapsLogger, repository, profileFunction, sp, dateUtil, autotuneFS, iobOapsCalculation)\n        autotunePrep = AutotunePrep(sp, dateUtil, autotuneFS, autotuneIob)\n        val inputProfileJson = File(\"src/test/res/autotune/test1/profile.pump.json\").readText()\n        val inputProfile = atProfileFromOapsJson(JSONObject(inputProfileJson), dateUtil)!!\n        val prepJson = File(\"src/test/res/autotune/test1/autotune.2022-05-21.json\").readText()\n        val oapsPreppedGlucose = PreppedGlucose(JSONObject(prepJson), dateUtil) //prep data calculated by OpenAPS autotune\n        val oapsEntriesJson = File(\"src/test/res/autotune/test1/aaps-entries.2022-05-21.json\").readText()\n        autotuneIob.glucose = buildGlucose(JSONArray(oapsEntriesJson))\n        val oapsTreatmentsJson = File(\"src/test/res/autotune/test1/aaps-treatments.2022-05-21.json\").readText()\n        autotuneIob.meals = buildMeals(JSONArray(oapsTreatmentsJson))  //Only meals is used in unit test, Insulin only used for iob calculation\n        autotuneIob.boluses = buildBoluses(oapsPreppedGlucose) //Values from oapsPrepData because linked to iob calculation method for TBR\n        `when`(sp.getDouble(app.aaps.core.utils.R.string.key_openapsama_min_5m_carbimpact, 3.0)).thenReturn(min5mCarbImpact)\n        `when`(sp.getBoolean(app.aaps.core.utils.R.string.key_autotune_categorize_uam_as_basal, false)).thenReturn(false)\n        val aapsPreppedGlucose = autotunePrep.categorizeBGDatums(inputProfile, inputProfile.localInsulin, false)!!\n        // compare all categorization calculated by aaps plugin (aapsPreppedGlucose) with categorization calculated by OpenAPS (oapsPreppedGlucose)\n        for (i in aapsPreppedGlucose.crData.indices)\n            assertThat(oapsPreppedGlucose.crData[i].equals(aapsPreppedGlucose.crData[i])).isTrue()\n        for (i in aapsPreppedGlucose.csfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.csfGlucoseData[i].equals(aapsPreppedGlucose.csfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.isfGlucoseData = oapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.isfGlucoseData = aapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.isfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.isfGlucoseData[i].equals(aapsPreppedGlucose.isfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.basalGlucoseData = oapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.basalGlucoseData = aapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.basalGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.basalGlucoseData[i].equals(aapsPreppedGlucose.basalGlucoseData[i])).isTrue()\n    }\n\n    @Test\n    fun autotunePrepTest2() { // Test if categorisation without carbs (full UAM) and categorize UAM as basal false is Ok\n        val inputIobJson = File(\"src/test/res/autotune/test2/oaps-iobCalc.2022-05-21.json\").readText() //json files build with iob/activity calculated by OAPS\n        val iobOapsCalculation = buildIobOaps(JSONArray(inputIobJson))\n        autotuneIob = TestAutotuneIob(aapsLogger, repository, profileFunction, sp, dateUtil, autotuneFS, iobOapsCalculation)\n        autotunePrep = AutotunePrep(sp, dateUtil, autotuneFS, autotuneIob)\n        val inputProfileJson = File(\"src/test/res/autotune/test2/profile.pump.json\").readText()\n        val inputProfile = atProfileFromOapsJson(JSONObject(inputProfileJson), dateUtil)!!\n        val prepJson = File(\"src/test/res/autotune/test2/autotune.2022-05-21.json\").readText()\n        val oapsPreppedGlucose = PreppedGlucose(JSONObject(prepJson), dateUtil) //prep data calculated by OpenAPS autotune\n        val oapsEntriesJson = File(\"src/test/res/autotune/test2/aaps-entries.2022-05-21.json\").readText()\n        autotuneIob.glucose = buildGlucose(JSONArray(oapsEntriesJson))\n        val oapsTreatmentsJson = File(\"src/test/res/autotune/test2/aaps-treatments.2022-05-21.json\").readText()\n        autotuneIob.meals = buildMeals(JSONArray(oapsTreatmentsJson))  //Only meals is used in unit test, Insulin only used for iob calculation\n        autotuneIob.boluses = buildBoluses(oapsPreppedGlucose) //Values from oapsPrepData because linked to iob calculation method for TBR\n        `when`(sp.getDouble(app.aaps.core.utils.R.string.key_openapsama_min_5m_carbimpact, 3.0)).thenReturn(min5mCarbImpact)\n        `when`(sp.getBoolean(app.aaps.core.utils.R.string.key_autotune_categorize_uam_as_basal, false)).thenReturn(false)           // CategorizeUAM as Basal = False\n        val aapsPreppedGlucose = autotunePrep.categorizeBGDatums(inputProfile, inputProfile.localInsulin, false)!!\n        // compare all categorization calculated by aaps plugin (aapsPreppedGlucose) with categorization calculated by OpenAPS (oapsPreppedGlucose)\n        for (i in aapsPreppedGlucose.crData.indices)\n            assertThat(oapsPreppedGlucose.crData[i].equals(aapsPreppedGlucose.crData[i])).isTrue()\n        for (i in aapsPreppedGlucose.csfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.csfGlucoseData[i].equals(aapsPreppedGlucose.csfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.isfGlucoseData = oapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.isfGlucoseData = aapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.isfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.isfGlucoseData[i].equals(aapsPreppedGlucose.isfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.basalGlucoseData = oapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.basalGlucoseData = aapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.basalGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.basalGlucoseData[i].equals(aapsPreppedGlucose.basalGlucoseData[i])).isTrue()\n    }\n\n    @Test\n    fun autotunePrepTest3() { // Test if categorisation without carbs (full UAM) and categorize UAM as basal true is Ok\n        val inputIobJson = File(\"src/test/res/autotune/test3/oaps-iobCalc.2022-05-21.json\").readText() //json files build with iob/activity calculated by OAPS\n        val iobOapsCalculation = buildIobOaps(JSONArray(inputIobJson))\n        autotuneIob = TestAutotuneIob(aapsLogger, repository, profileFunction, sp, dateUtil, autotuneFS, iobOapsCalculation)\n        autotunePrep = AutotunePrep(sp, dateUtil, autotuneFS, autotuneIob)\n        val inputProfileJson = File(\"src/test/res/autotune/test3/profile.pump.json\").readText()\n        val inputProfile = atProfileFromOapsJson(JSONObject(inputProfileJson), dateUtil)!!\n        val prepJson = File(\"src/test/res/autotune/test3/autotune.2022-05-21.json\").readText()\n        val oapsPreppedGlucose = PreppedGlucose(JSONObject(prepJson), dateUtil) //prep data calculated by OpenAPS autotune\n        val oapsEntriesJson = File(\"src/test/res/autotune/test3/aaps-entries.2022-05-21.json\").readText()\n        autotuneIob.glucose = buildGlucose(JSONArray(oapsEntriesJson))\n        val oapsTreatmentsJson = File(\"src/test/res/autotune/test3/aaps-treatments.2022-05-21.json\").readText()\n        autotuneIob.meals = buildMeals(JSONArray(oapsTreatmentsJson))  //Only meals is used in unit test, Insulin only used for iob calculation\n        autotuneIob.boluses = buildBoluses(oapsPreppedGlucose) //Values from oapsPrepData because linked to iob calculation method for TBR\n        `when`(sp.getDouble(app.aaps.core.utils.R.string.key_openapsama_min_5m_carbimpact, 3.0)).thenReturn(min5mCarbImpact)\n        `when`(sp.getBoolean(app.aaps.core.utils.R.string.key_autotune_categorize_uam_as_basal, false)).thenReturn(true)           // CategorizeUAM as Basal = True\n        val aapsPreppedGlucose = autotunePrep.categorizeBGDatums(inputProfile, inputProfile.localInsulin, false)!!\n        // compare all categorization calculated by aaps plugin (aapsPreppedGlucose) with categorization calculated by OpenAPS (oapsPreppedGlucose)\n        for (i in aapsPreppedGlucose.crData.indices)\n            assertThat(oapsPreppedGlucose.crData[i].equals(aapsPreppedGlucose.crData[i])).isTrue()\n        for (i in aapsPreppedGlucose.csfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.csfGlucoseData[i].equals(aapsPreppedGlucose.csfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.isfGlucoseData = oapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.isfGlucoseData = aapsPreppedGlucose.isfGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.isfGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.isfGlucoseData[i].equals(aapsPreppedGlucose.isfGlucoseData[i])).isTrue()\n        oapsPreppedGlucose.basalGlucoseData = oapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        aapsPreppedGlucose.basalGlucoseData = aapsPreppedGlucose.basalGlucoseData.sortedBy { it.date }\n        for (i in aapsPreppedGlucose.basalGlucoseData.indices)\n            assertThat(oapsPreppedGlucose.basalGlucoseData[i].equals(aapsPreppedGlucose.basalGlucoseData[i])).isTrue()\n    }\n\n    /*************************************************************************************************************************************************************************************\n     * OpenAPS profile for Autotune only have one ISF value and one IC value\n     */\n    @Suppress(\"SpellCheckingInspection\")\n    private fun atProfileFromOapsJson(jsonObject: JSONObject, dateUtil: DateUtil, defaultUnits: String? = null): ATProfile? {\n        try {\n            min5mCarbImpact = JsonHelper.safeGetDoubleAllowNull(jsonObject, \"min_5m_carbimpact\") ?: return null\n            autotuneMin = JsonHelper.safeGetDoubleAllowNull(jsonObject, \"autosens_min\") ?: return null\n            autotuneMax = JsonHelper.safeGetDoubleAllowNull(jsonObject, \"autosens_max\") ?: return null\n            val txtUnits = JsonHelper.safeGetStringAllowNull(jsonObject, \"units\", defaultUnits) ?: return null\n            val units = GlucoseUnit.fromText(txtUnits)\n            val dia = JsonHelper.safeGetDoubleAllowNull(jsonObject, \"dia\") ?: return null\n            val peak = JsonHelper.safeGetIntAllowNull(jsonObject, \"insulinPeakTime\") ?: return null\n            val localInsulin = LocalInsulin(\"insulin\", peak, dia)\n            val timezone = TimeZone.getTimeZone(JsonHelper.safeGetString(jsonObject, \"timezone\", \"UTC\"))\n            val isfJson = jsonObject.getJSONObject(\"isfProfile\")\n            val isfBlocks = ArrayList<Block>(1).also {\n                val isfJsonArray = isfJson.getJSONArray(\"sensitivities\")\n                val value = isfJsonArray.getJSONObject(0).getDouble(\"sensitivity\")\n                it.add(0, Block((T.hours(24).secs()) * 1000L, value))\n            }\n            val icBlocks = ArrayList<Block>(1).also {\n                val value = jsonObject.getDouble(\"carb_ratio\")\n                it.add(0, Block((T.hours(24).secs()) * 1000L, value))\n            }\n            val basalBlocks = blockFromJsonArray(jsonObject.getJSONArray(\"basalprofile\"))\n                ?: return null\n            val targetBlocks = ArrayList<TargetBlock>(1).also {\n                it.add(0, TargetBlock((T.hours(24).secs()) * 1000L, 100.0, 100.0))\n            }\n\n            val pure = PureProfile(\n                jsonObject = jsonObject,\n                basalBlocks = basalBlocks.shiftBlock(1.0, ts),\n                isfBlocks = isfBlocks,\n                icBlocks = icBlocks,\n                targetBlocks = targetBlocks,\n                glucoseUnit = units,\n                timeZone = timezone,\n                dia = dia\n            )\n            return ATProfile(ProfileSealed.Pure(pure), localInsulin, profileInjector).also { it.dateUtil = dateUtil }\n        } catch (ignored: Exception) {\n            return null\n        }\n    }\n\n    private fun blockFromJsonArray(jsonArray: JSONArray?): List<Block>? {\n        val size = jsonArray?.length() ?: return null\n        val ret = ArrayList<Block>(size)\n        try {\n            for (index in 0 until jsonArray.length() - 1) {\n                val o = jsonArray.getJSONObject(index)\n                val tas = o.getInt(\"minutes\") * 60\n                val next = jsonArray.getJSONObject(index + 1)\n                val nextTas = next.getInt(\"minutes\") * 60\n                val value = o.getDouble(\"rate\")\n                if (tas % 3600 != 0) return null\n                if (nextTas % 3600 != 0) return null\n                ret.add(index, Block((nextTas - tas) * 1000L, value))\n            }\n            val last: JSONObject = jsonArray.getJSONObject(jsonArray.length() - 1)\n            val lastTas = last.getInt(\"minutes\") * 60\n            val value = last.getDouble(\"rate\")\n            ret.add(jsonArray.length() - 1, Block((T.hours(24).secs() - lastTas) * 1000L, value))\n        } catch (e: Exception) {\n            return null\n        }\n        return ret\n    }\n\n    private fun buildBoluses(preppedGlucose: PreppedGlucose): ArrayList<Bolus> { //if categorization is correct then I return for dose function the crInsulin calculated in Oaps\n        val boluses: ArrayList<Bolus> = ArrayList()\n        for (i in preppedGlucose.crData.indices) {\n            boluses.add(\n                Bolus(\n                    timestamp = preppedGlucose.crData[i].crEndTime,\n                    amount = preppedGlucose.crData[i].crInsulin,\n                    type = Bolus.Type.NORMAL\n                )\n            )\n        }\n        if (boluses.size == 0)  //Add at least one insulin treatment for tests to avoid return null in categorization\n            boluses.add(\n                Bolus(\n                    timestamp = startDayTime,\n                    amount = 1.0,\n                    type = Bolus.Type.NORMAL\n                )\n            )\n        return boluses\n    }\n\n    private fun buildMeals(jsonArray: JSONArray): ArrayList<Carbs> {\n        val list: ArrayList<Carbs> = ArrayList()\n        for (index in 0 until jsonArray.length()) {\n            val json = jsonArray.getJSONObject(index)\n            val value = JsonHelper.safeGetDouble(json, \"carbs\", 0.0)\n            val timestamp = JsonHelper.safeGetLong(json, \"date\")\n            if (value > 0.0 && timestamp > startDayTime) {\n                list.add(Carbs(timestamp = timestamp, amount = value, duration = 0))\n            }\n        }\n        return list\n    }\n\n    private fun buildGlucose(jsonArray: JSONArray): List<GlucoseValue> {\n        val list: ArrayList<GlucoseValue> = ArrayList()\n        for (index in 0 until jsonArray.length()) {\n            val json = jsonArray.getJSONObject(index)\n            val value = JsonHelper.safeGetDouble(json, \"sgv\")\n            val timestamp = JsonHelper.safeGetLong(json, \"date\")\n            list.add(GlucoseValue(raw = value, noise = 0.0, value = value, timestamp = timestamp, sourceSensor = GlucoseValue.SourceSensor.UNKNOWN, trendArrow = GlucoseValue.TrendArrow.FLAT))\n        }\n        if (list.size > 0)\n            startDayTime = list[list.size - 1].timestamp\n        return list\n    }\n\n    private fun buildIobOaps(jsonArray: JSONArray): ArrayList<IobTotal> { //if categorization is correct then I return for dose function the crInsulin calculated in Oaps\n        val list: ArrayList<IobTotal> = ArrayList()\n        for (index in 0 until jsonArray.length()) {\n            val json = jsonArray.getJSONObject(index)\n            val time = JsonHelper.safeGetLong(json, \"date\")\n            val iob = JsonHelper.safeGetDouble(json, \"iob\")\n            val activity = JsonHelper.safeGetDouble(json, \"activity\")\n            val iobTotal = IobTotal(time)\n            iobTotal.iob = iob\n            iobTotal.activity = activity\n            list.add(iobTotal)\n        }\n        return list\n    }\n\n    class TestAutotuneIob(\n        aapsLogger: AAPSLogger,\n        repository: AppRepository,\n        profileFunction: ProfileFunction,\n        sp: SP,\n        dateUtil: DateUtil,\n        autotuneFS: AutotuneFS,\n        private val iobOapsCalculation: ArrayList<IobTotal>\n    ) : AutotuneIob(\n        aapsLogger,\n        repository,\n        profileFunction,\n        sp,\n        dateUtil,\n        autotuneFS\n    ) {\n\n        override fun getIOB(time: Long, localInsulin: LocalInsulin): IobTotal {\n            val bolusIob = IobTotal(time)\n            iobOapsCalculation.forEach {\n                if (it.time == time)\n                    return it\n            }\n            return bolusIob\n        }\n    }\n}\n",
        "key_snippets": "{}"
      },
      {
        "filename": "CalculationWorkflow.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.interfaces.workflow",
        "eating_now_score": 592.0,
        "has_source": true,
        "score": 3.653247356414795,
        "full_source_code": "package app.aaps.core.interfaces.workflow\n\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.overview.OverviewData\nimport app.aaps.core.interfaces.rx.events.Event\n\ninterface CalculationWorkflow {\n    companion object {\n\n        const val MAIN_CALCULATION = \"calculation\"\n        const val HISTORY_CALCULATION = \"history_calculation\"\n        const val JOB = \"job\"\n        const val PASS = \"pass\"\n    }\n\n    enum class ProgressData(val pass: Int, val percentOfTotal: Int) {\n        DRAW_BG(0, 1),\n        PREPARE_TREATMENTS_DATA(1, 2),\n        PREPARE_BASAL_DATA(2, 6),\n        PREPARE_TEMPORARY_TARGET_DATA(3, 6),\n        DRAW_TT(4, 1),\n        IOB_COB_OREF(5, 77),\n        PREPARE_IOB_AUTOSENS_DATA(6, 5),\n        DRAW_IOB(7, 1),\n        DRAW_FINAL(8, 1);\n\n        fun finalPercent(progress: Int): Int {\n            var total = 0\n            for (i in entries) if (i.pass < pass) total += i.percentOfTotal\n            total += (percentOfTotal.toDouble() * progress / 100.0).toInt()\n            return total\n        }\n    }\n\n    fun stopCalculation(job: String, from: String)\n\n    /**\n     * Start calculation of data needed for displaying graphs\n     *\n     * @param job [MAIN_CALCULATION] or [HISTORY_CALCULATION]\n     * @param iobCobCalculator different instance for [HistoryBrowseActivity]\n     * @param overviewData different instance for [HistoryBrowseActivity]\n     */\n    fun runCalculation(\n        job: String,\n        iobCobCalculator: IobCobCalculator,\n        overviewData: OverviewData,\n        reason: String,\n        end: Long,\n        bgDataReload: Boolean,\n        cause: Event?\n    )\n\n    /**\n     * Update treatments in graph ofter new therapy event\n     */\n    fun runOnEventTherapyEventChange(overviewData: OverviewData)\n\n    /**\n     * Update graph ofter scale change\n     * There may be me necessary display larger time interval thus run new calculation\n     */\n    fun runOnScaleChanged(iobCobCalculator: IobCobCalculator, overviewData: OverviewData)\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "CalculationWorkflow.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.core.interfaces.workflow",
        "eating_now_score": 342.0,
        "has_source": true,
        "score": 3.653247356414795,
        "full_source_code": "package app.aaps.core.interfaces.workflow\n\nimport app.aaps.core.interfaces.iob.IobCobCalculator\nimport app.aaps.core.interfaces.overview.OverviewData\nimport app.aaps.core.interfaces.rx.events.Event\n\ninterface CalculationWorkflow {\n    companion object {\n\n        const val MAIN_CALCULATION = \"calculation\"\n        const val HISTORY_CALCULATION = \"history_calculation\"\n        const val JOB = \"job\"\n        const val PASS = \"pass\"\n    }\n\n    enum class ProgressData(val pass: Int, val percentOfTotal: Int) {\n        DRAW_BG(0, 1),\n        PREPARE_TREATMENTS_DATA(1, 2),\n        PREPARE_BASAL_DATA(2, 6),\n        PREPARE_TEMPORARY_TARGET_DATA(3, 6),\n        DRAW_TT(4, 1),\n        IOB_COB_OREF(5, 77),\n        PREPARE_IOB_AUTOSENS_DATA(6, 5),\n        DRAW_IOB(7, 1),\n        DRAW_FINAL(8, 1);\n\n        fun finalPercent(progress: Int): Int {\n            var total = 0\n            for (i in entries) if (i.pass < pass) total += i.percentOfTotal\n            total += (percentOfTotal.toDouble() * progress / 100.0).toInt()\n            return total\n        }\n    }\n\n    fun stopCalculation(job: String, from: String)\n\n    /**\n     * Start calculation of data needed for displaying graphs\n     *\n     * @param job [MAIN_CALCULATION] or [HISTORY_CALCULATION]\n     * @param iobCobCalculator different instance for [HistoryBrowseActivity]\n     * @param overviewData different instance for [HistoryBrowseActivity]\n     */\n    fun runCalculation(\n        job: String,\n        iobCobCalculator: IobCobCalculator,\n        overviewData: OverviewData,\n        reason: String,\n        end: Long,\n        bgDataReload: Boolean,\n        cause: Event?\n    )\n\n    /**\n     * Update treatments in graph ofter new therapy event\n     */\n    fun runOnEventTherapyEventChange(overviewData: OverviewData)\n\n    /**\n     * Update graph ofter scale change\n     * There may be me necessary display larger time interval thus run new calculation\n     */\n    fun runOnScaleChanged(iobCobCalculator: IobCobCalculator, overviewData: OverviewData)\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "IobCobCalculator.kt",
        "repository": "EN_old",
        "package": "app.aaps.core.interfaces.iob",
        "eating_now_score": 853.0,
        "has_source": true,
        "score": 3.392341136932373,
        "full_source_code": "package app.aaps.core.interfaces.iob\n\nimport app.aaps.core.interfaces.aps.AutosensData\nimport app.aaps.core.interfaces.aps.AutosensDataStore\nimport app.aaps.core.interfaces.aps.AutosensResult\nimport app.aaps.core.interfaces.aps.BasalData\nimport app.aaps.core.interfaces.profile.Profile\nimport app.aaps.database.entities.ExtendedBolus\nimport app.aaps.database.entities.TemporaryBasal\nimport org.json.JSONArray\n\ninterface IobCobCalculator {\n\n    var ads: AutosensDataStore\n\n    fun getMealDataWithWaitingForCalculationFinish(): MealData\n    fun getLastAutosensDataWithWaitForCalculationFinish(reason: String): AutosensData?\n\n    fun calculateFromTreatmentsAndTemps(toTime: Long, profile: Profile): IobTotal\n\n    fun calculateDetectionStart(from: Long, limitDataToOldestAvailable: Boolean): Long\n\n    fun getBasalData(profile: Profile, fromTime: Long): BasalData\n\n    fun calculateIobArrayInDia(profile: Profile): Array<IobTotal>\n    fun calculateIobArrayForSMB(lastAutosensResult: AutosensResult, exercise_mode: Boolean, half_basal_exercise_target: Int, isTempTarget: Boolean): Array<IobTotal>\n    fun iobArrayToString(array: Array<IobTotal>): String\n    fun convertToJSONArray(iobArray: Array<IobTotal>): JSONArray\n\n    fun clearCache()\n\n    /**\n     *  Calculate CobInfo to now()\n     *\n     *  @param reason caller identification\n     *  @return CobInfo\n     */\n    fun getCobInfo(reason: String): CobInfo\n\n    /**\n     * Calculate IobTotal from boluses and extended boluses to now().\n     * NOTE: Only isValid == true boluses are included\n     * NOTE: if faking by TBR by extended boluses is enabled, extended boluses are not included\n     *  and are calculated towards temporary basals\n     *\n     * @return calculated iob\n     */\n    fun calculateIobFromBolus(): IobTotal\n\n    /**\n     * Get running temporary basal at time\n     *\n     *  @return     running temporary basal or null if no tbr is running\n     */\n    fun getTempBasal(timestamp: Long): TemporaryBasal?\n\n    /**\n     * Get running temporary basal at time\n     *\n     *  @return     running temporary basal or null if no tbr is running\n     *              If pump is faking extended boluses as temporary basals\n     *              return extended converted to temporary basal with type == FAKE_EXTENDED\n     */\n    fun getTempBasalIncludingConvertedExtended(timestamp: Long): TemporaryBasal?\n\n    /**\n     * Get running temporary basals for given time range, sliced by calculationStep.\n     * For each step between given range it calculates equivalent of getTempBasalIncludingConvertedExtended\n     *\n     *  @param startTime start of calculated period, timestamp\n     *  @param endTime end of calculated period, timestamp\n     *  @param calculationStep calculation step, in millisecond\n     *  @return map where for each step, its timestamp is a key and calculated optional temporary basal is a value\n     */\n    fun getTempBasalIncludingConvertedExtendedForRange(startTime: Long, endTime: Long, calculationStep: Long): Map<Long, TemporaryBasal?>\n\n    /**\n     * Get running extended bolus at time\n     *\n     *  @return     running extended bolus or null if no eb is running\n     */\n    fun getExtendedBolus(timestamp: Long): ExtendedBolus?\n\n    /**\n     *  Calculate IOB of base basal insulin (usually not accounted towards IOB)\n     *\n     *  @param  toTime\n     *  @return IobTotal\n     */\n    fun calculateAbsoluteIobFromBaseBasals(toTime: Long): IobTotal\n\n    /**\n     *  Calculate IOB from Temporary basals and Extended boluses (if emulation is enabled) to the the time specified\n     *\n     *  @param  toTime    time to calculate to\n     *  @return IobTotal\n     */\n    fun calculateIobToTimeFromTempBasalsIncludingConvertedExtended(toTime: Long): IobTotal\n\n    /**\n     *  Calculate IOB from Temporary basals and Extended boluses (if emulation is enabled) to now\n     *\n     *  @return IobTotal\n     */\n    fun calculateIobFromTempBasalsIncludingConvertedExtended(): IobTotal\n}",
        "key_snippets": "{}"
      }
    ],
    "carb_counting": [
      {
        "filename": "MsgSetCarbsEntry.kt",
        "repository": "EN_new",
        "package": "app.aaps.pump.danar.comm",
        "eating_now_score": 728.0,
        "has_source": true,
        "score": 3.9215826988220215,
        "full_source_code": "package app.aaps.pump.danar.comm\n\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.pump.dana.comm.RecordTypes\nimport dagger.android.HasAndroidInjector\nimport java.util.Calendar\n\nclass MsgSetCarbsEntry(\n    injector: HasAndroidInjector,\n    val time: Long,\n    val amount: Int\n) : MessageBase(injector) {\n\n    init {\n        setCommand(0x0402)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"New message\")\n        val calendar = Calendar.getInstance()\n        calendar.timeInMillis = time\n        addParamByte(RecordTypes.RECORD_TYPE_CARBO)\n        addParamByte((calendar[Calendar.YEAR] % 100).toByte())\n        addParamByte((calendar[Calendar.MONTH] + 1).toByte())\n        addParamByte(calendar[Calendar.DAY_OF_MONTH].toByte())\n        addParamByte(calendar[Calendar.HOUR_OF_DAY].toByte())\n        addParamByte(calendar[Calendar.MINUTE].toByte())\n        addParamByte(calendar[Calendar.SECOND].toByte())\n        addParamByte(0x43.toByte()) //??\n        addParamInt(amount)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry: \" + amount + \" date \" + calendar.time.toString())\n    }\n\n    override fun handleMessage(bytes: ByteArray) {\n        val result = intFromBuff(bytes, 0, 1)\n        if (result != 1) {\n            failed = true\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result ERROR!!!\")\n        } else {\n            failed = false\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result\")\n        }\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "MsgSetCarbsEntry.kt",
        "repository": "EN_old",
        "package": "info.nightscout.androidaps.danar.comm",
        "eating_now_score": 678.0,
        "has_source": true,
        "score": 3.9215826988220215,
        "full_source_code": "package info.nightscout.androidaps.danar.comm\n\nimport app.aaps.core.interfaces.logging.LTag\nimport dagger.android.HasAndroidInjector\nimport info.nightscout.pump.dana.comm.RecordTypes\nimport java.util.Calendar\n\nclass MsgSetCarbsEntry(\n    injector: HasAndroidInjector,\n    val time: Long,\n    val amount: Int\n) : MessageBase(injector) {\n\n    init {\n        setCommand(0x0402)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"New message\")\n        val calendar = Calendar.getInstance()\n        calendar.timeInMillis = time\n        addParamByte(RecordTypes.RECORD_TYPE_CARBO)\n        addParamByte((calendar[Calendar.YEAR] % 100).toByte())\n        addParamByte((calendar[Calendar.MONTH] + 1).toByte())\n        addParamByte(calendar[Calendar.DAY_OF_MONTH].toByte())\n        addParamByte(calendar[Calendar.HOUR_OF_DAY].toByte())\n        addParamByte(calendar[Calendar.MINUTE].toByte())\n        addParamByte(calendar[Calendar.SECOND].toByte())\n        addParamByte(0x43.toByte()) //??\n        addParamInt(amount)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry: \" + amount + \" date \" + calendar.time.toString())\n    }\n\n    override fun handleMessage(bytes: ByteArray) {\n        val result = intFromBuff(bytes, 0, 1)\n        if (result != 1) {\n            failed = true\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result FAILED!!!\")\n        } else {\n            failed = false\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result\")\n        }\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "MsgSetCarbsEntry.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.pump.danar.comm",
        "eating_now_score": 478.0,
        "has_source": true,
        "score": 3.9215826988220215,
        "full_source_code": "package app.aaps.pump.danar.comm\n\nimport app.aaps.core.interfaces.logging.LTag\nimport app.aaps.pump.dana.comm.RecordTypes\nimport dagger.android.HasAndroidInjector\nimport java.util.Calendar\n\nclass MsgSetCarbsEntry(\n    injector: HasAndroidInjector,\n    val time: Long,\n    val amount: Int\n) : MessageBase(injector) {\n\n    init {\n        setCommand(0x0402)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"New message\")\n        val calendar = Calendar.getInstance()\n        calendar.timeInMillis = time\n        addParamByte(RecordTypes.RECORD_TYPE_CARBO)\n        addParamByte((calendar[Calendar.YEAR] % 100).toByte())\n        addParamByte((calendar[Calendar.MONTH] + 1).toByte())\n        addParamByte(calendar[Calendar.DAY_OF_MONTH].toByte())\n        addParamByte(calendar[Calendar.HOUR_OF_DAY].toByte())\n        addParamByte(calendar[Calendar.MINUTE].toByte())\n        addParamByte(calendar[Calendar.SECOND].toByte())\n        addParamByte(0x43.toByte()) //??\n        addParamInt(amount)\n        aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry: \" + amount + \" date \" + calendar.time.toString())\n    }\n\n    override fun handleMessage(bytes: ByteArray) {\n        val result = intFromBuff(bytes, 0, 1)\n        if (result != 1) {\n            failed = true\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result ERROR!!!\")\n        } else {\n            failed = false\n            aapsLogger.debug(LTag.PUMPBTCOMM, \"Set carb entry result: $result\")\n        }\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "SyncNsCarbsTransaction.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.transactions",
        "eating_now_score": 840.0,
        "has_source": true,
        "score": 3.8638696670532227,
        "full_source_code": "package app.aaps.database.transactions\n\nimport app.aaps.database.entities.Carbs\n\n/**\n * Sync the carbs from NS\n */\nclass SyncNsCarbsTransaction(private val carbs: List<Carbs>, private val nsClientMode: Boolean) :\n    Transaction<SyncNsCarbsTransaction.TransactionResult>() {\n\n    override fun run(): TransactionResult {\n        val result = TransactionResult()\n\n        for (carb in carbs) {\n            val current: Carbs? =\n                carb.interfaceIDs.nightscoutId?.let {\n                    database.carbsDao.getByNSId(it)\n                }\n\n            if (current != null) {\n                // nsId exists, allow only invalidation\n                if (current.isValid && !carb.isValid) {\n                    current.isValid = false\n                    database.carbsDao.updateExistingEntry(current)\n                    result.invalidated.add(current)\n                }\n                // and change duration\n                if (current.duration != carb.duration && nsClientMode) {\n                    current.amount = carb.amount\n                    current.duration = carb.duration\n                    database.carbsDao.updateExistingEntry(current)\n                    result.updated.add(current)\n                }\n                continue\n            }\n\n            // not known nsId\n            val existing = database.carbsDao.findByTimestamp(carb.timestamp)\n            if (existing != null && existing.interfaceIDs.nightscoutId == null) {\n                // the same record, update nsId only\n                existing.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                existing.isValid = carb.isValid\n                database.carbsDao.updateExistingEntry(existing)\n                result.updatedNsId.add(existing)\n            } else {\n                database.carbsDao.insertNewEntry(carb)\n                result.inserted.add(carb)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updated = mutableListOf<Carbs>()\n        val updatedNsId = mutableListOf<Carbs>()\n        val inserted = mutableListOf<Carbs>()\n        val invalidated = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "SyncNsCarbsTransaction.kt",
        "repository": "EN_old",
        "package": "app.aaps.database.impl.transactions",
        "eating_now_score": 790.0,
        "has_source": true,
        "score": 3.8638696670532227,
        "full_source_code": "package app.aaps.database.impl.transactions\n\nimport app.aaps.database.entities.Carbs\n\n/**\n * Sync the carbs from NS\n */\nclass SyncNsCarbsTransaction(private val carbs: List<Carbs>, private val nsClientMode: Boolean) :\n    Transaction<SyncNsCarbsTransaction.TransactionResult>() {\n\n    override fun run(): TransactionResult {\n        val result = TransactionResult()\n\n        for (carb in carbs) {\n            val current: Carbs? =\n                carb.interfaceIDs.nightscoutId?.let {\n                    database.carbsDao.findByNSId(it)\n                }\n\n            if (current != null) {\n                // nsId exists, allow only invalidation\n                if (current.isValid && !carb.isValid) {\n                    current.isValid = false\n                    database.carbsDao.updateExistingEntry(current)\n                    result.invalidated.add(current)\n                }\n                // and change duration\n                if (current.duration != carb.duration && nsClientMode) {\n                    current.amount = carb.amount\n                    current.duration = carb.duration\n                    database.carbsDao.updateExistingEntry(current)\n                    result.updated.add(current)\n                }\n                continue\n            }\n\n            // not known nsId\n            val existing = database.carbsDao.findByTimestamp(carb.timestamp)\n            if (existing != null && existing.interfaceIDs.nightscoutId == null) {\n                // the same record, update nsId only\n                existing.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                existing.isValid = carb.isValid\n                database.carbsDao.updateExistingEntry(existing)\n                result.updatedNsId.add(existing)\n            } else {\n                database.carbsDao.insertNewEntry(carb)\n                result.inserted.add(carb)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updated = mutableListOf<Carbs>()\n        val updatedNsId = mutableListOf<Carbs>()\n        val inserted = mutableListOf<Carbs>()\n        val invalidated = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "SyncNsCarbsTransaction.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.database.transactions",
        "eating_now_score": 590.0,
        "has_source": true,
        "score": 3.8638696670532227,
        "full_source_code": "package app.aaps.database.transactions\n\nimport app.aaps.database.entities.Carbs\n\n/**\n * Sync the carbs from NS\n */\nclass SyncNsCarbsTransaction(private val carbs: List<Carbs>, private val nsClientMode: Boolean) :\n    Transaction<SyncNsCarbsTransaction.TransactionResult>() {\n\n    override fun run(): TransactionResult {\n        val result = TransactionResult()\n\n        for (carb in carbs) {\n            val current: Carbs? =\n                carb.interfaceIDs.nightscoutId?.let {\n                    database.carbsDao.getByNSId(it)\n                }\n\n            if (current != null) {\n                // nsId exists, allow only invalidation\n                if (current.isValid && !carb.isValid) {\n                    current.isValid = false\n                    database.carbsDao.updateExistingEntry(current)\n                    result.invalidated.add(current)\n                }\n                // and change duration\n                if (current.duration != carb.duration && nsClientMode) {\n                    current.amount = carb.amount\n                    current.duration = carb.duration\n                    database.carbsDao.updateExistingEntry(current)\n                    result.updated.add(current)\n                }\n                continue\n            }\n\n            // not known nsId\n            val existing = database.carbsDao.findByTimestamp(carb.timestamp)\n            if (existing != null && existing.interfaceIDs.nightscoutId == null) {\n                // the same record, update nsId only\n                existing.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                existing.isValid = carb.isValid\n                database.carbsDao.updateExistingEntry(existing)\n                result.updatedNsId.add(existing)\n            } else {\n                database.carbsDao.insertNewEntry(carb)\n                result.inserted.add(carb)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updated = mutableListOf<Carbs>()\n        val updatedNsId = mutableListOf<Carbs>()\n        val inserted = mutableListOf<Carbs>()\n        val invalidated = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "UpdateNsIdCarbsTransaction.kt",
        "repository": "EN_new",
        "package": "app.aaps.database.transactions",
        "eating_now_score": 832.0,
        "has_source": true,
        "score": 3.279172897338867,
        "full_source_code": "package app.aaps.database.transactions\n\nimport app.aaps.database.entities.Carbs\n\nclass UpdateNsIdCarbsTransaction(private val carbs: List<Carbs>) : Transaction<UpdateNsIdCarbsTransaction.TransactionResult>() {\n\n    val result = TransactionResult()\n    override fun run(): TransactionResult {\n        for (carb in carbs) {\n            val current = database.carbsDao.findById(carb.id)\n            if (current != null && current.interfaceIDs.nightscoutId != carb.interfaceIDs.nightscoutId) {\n                current.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                database.carbsDao.updateExistingEntry(current)\n                result.updatedNsId.add(current)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updatedNsId = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "UpdateNsIdCarbsTransaction.kt",
        "repository": "EN_old",
        "package": "app.aaps.database.impl.transactions",
        "eating_now_score": 782.0,
        "has_source": true,
        "score": 3.279172897338867,
        "full_source_code": "package app.aaps.database.impl.transactions\n\nimport app.aaps.database.entities.Carbs\n\nclass UpdateNsIdCarbsTransaction(private val carbs: List<Carbs>) : Transaction<UpdateNsIdCarbsTransaction.TransactionResult>() {\n\n    val result = TransactionResult()\n    override fun run(): TransactionResult {\n        for (carb in carbs) {\n            val current = database.carbsDao.findById(carb.id)\n            if (current != null && current.interfaceIDs.nightscoutId != carb.interfaceIDs.nightscoutId) {\n                current.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                database.carbsDao.updateExistingEntry(current)\n                result.updatedNsId.add(current)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updatedNsId = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "UpdateNsIdCarbsTransaction.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.database.transactions",
        "eating_now_score": 582.0,
        "has_source": true,
        "score": 3.279172897338867,
        "full_source_code": "package app.aaps.database.transactions\n\nimport app.aaps.database.entities.Carbs\n\nclass UpdateNsIdCarbsTransaction(private val carbs: List<Carbs>) : Transaction<UpdateNsIdCarbsTransaction.TransactionResult>() {\n\n    val result = TransactionResult()\n    override fun run(): TransactionResult {\n        for (carb in carbs) {\n            val current = database.carbsDao.findById(carb.id)\n            if (current != null && current.interfaceIDs.nightscoutId != carb.interfaceIDs.nightscoutId) {\n                current.interfaceIDs.nightscoutId = carb.interfaceIDs.nightscoutId\n                database.carbsDao.updateExistingEntry(current)\n                result.updatedNsId.add(current)\n            }\n        }\n        return result\n    }\n\n    class TransactionResult {\n\n        val updatedNsId = mutableListOf<Carbs>()\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "EventType.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.nssdk.localmodel.treatment",
        "eating_now_score": 648.0,
        "has_source": true,
        "score": 3.2636051177978516,
        "full_source_code": "package app.aaps.core.nssdk.localmodel.treatment\n\nimport com.google.gson.annotations.SerializedName\n\n@Suppress(\"unused\")\nenum class EventType(val text: String) {\n\n    @SerializedName(\"Site Change\") CANNULA_CHANGE(\"Site Change\"),\n    @SerializedName(\"Insulin Change\") INSULIN_CHANGE(\"Insulin Change\"),\n    @SerializedName(\"Pump Battery Change\") PUMP_BATTERY_CHANGE(\"Pump Battery Change\"),\n    @SerializedName(\"Sensor Change\") SENSOR_CHANGE(\"Sensor Change\"),\n    @SerializedName(\"Sensor Start\") SENSOR_STARTED(\"Sensor Start\"),\n    @SerializedName(\"Sensor Stop\") SENSOR_STOPPED(\"Sensor Stop\"),\n    @SerializedName(\"BG Check\") FINGER_STICK_BG_VALUE(\"BG Check\"),\n    @SerializedName(\"Exercise\") EXERCISE(\"Exercise\"),\n    @SerializedName(\"Announcement\") ANNOUNCEMENT(\"Announcement\"),\n    @SerializedName(\"SettingsExport\") SETTINGS_EXPORT(\"Settings Export\"),\n    @SerializedName(\"Question\") QUESTION(\"Question\"),\n    @SerializedName(\"Note\") NOTE(\"Note\"),\n    @SerializedName(\"OpenAPS Offline\") APS_OFFLINE(\"OpenAPS Offline\"),\n    @SerializedName(\"D.A.D. Alert\") DAD_ALERT(\"D.A.D. Alert\"),\n    @SerializedName(\"Mbg\") NS_MBG(\"Mbg\"),\n\n    // Used but not as a Therapy Event (use constants only)\n    @SerializedName(\"Carb Correction\") CARBS_CORRECTION(\"Carb Correction\"),\n    @SerializedName(\"Bolus Wizard\") BOLUS_WIZARD(\"Bolus Wizard\"),\n    @SerializedName(\"Correction Bolus\") CORRECTION_BOLUS(\"Correction Bolus\"),\n    @SerializedName(\"Meal Bolus\") MEAL_BOLUS(\"Meal Bolus\"),\n    @SerializedName(\"Combo Bolus\") COMBO_BOLUS(\"Combo Bolus\"),\n    @SerializedName(\"Temporary Target\") TEMPORARY_TARGET(\"Temporary Target\"),\n    @SerializedName(\"Temporary Target Cancel\") TEMPORARY_TARGET_CANCEL(\"Temporary Target Cancel\"),\n    @SerializedName(\"Profile Switch\") PROFILE_SWITCH(\"Profile Switch\"),\n    @SerializedName(\"Snack Bolus\") SNACK_BOLUS(\"Snack Bolus\"),\n    @SerializedName(\"Temp Basal\") TEMPORARY_BASAL(\"Temp Basal\"),\n    @SerializedName(\"Temp Basal Start\") TEMPORARY_BASAL_START(\"Temp Basal Start\"),\n    @SerializedName(\"Temp Basal End\") TEMPORARY_BASAL_END(\"Temp Basal End\"),\n\n    @SerializedName(\"\") ERROR(\"\"),\n    @SerializedName(\"<none>\") NONE(\"<none>\");\n\n    companion object {\n        fun fromString(text: String?) = entries.firstOrNull { it.text == text } ?: NONE\n    }\n}",
        "key_snippets": "{}"
      }
    ],
    "meal_timing": [
      {
        "filename": "Command.java",
        "repository": "EN_old",
        "package": "info.nightscout.pump.combo.ruffyscripter.commands",
        "eating_now_score": 200.0,
        "has_source": true,
        "score": 6.207099437713623,
        "full_source_code": "package info.nightscout.pump.combo.ruffyscripter.commands;\n\nimport java.util.List;\n\nimport info.nightscout.pump.combo.ruffyscripter.CommandResult;\nimport info.nightscout.pump.combo.ruffyscripter.RuffyScripter;\n\n/**\n * Interface for all commands to be executed by the pump.\n * <p>\n * Note on cammond methods and timing: a method shall wait before and after executing\n * as necessary to not cause timing issues, so the caller can just call methods in\n * sequence, letting the methods take care of waits.\n */\npublic interface Command {\n    void setScripter(RuffyScripter scripter);\n    List<String> validateArguments();\n    boolean needsRunMode();\n    void execute();\n    CommandResult getResult();\n    Integer getReconnectWarningId();\n}\n",
        "key_snippets": "{}"
      },
      {
        "filename": "MenuAttribute.java",
        "repository": "EN_old",
        "package": "org.monkey.d.ruffy.ruffy.driver.display",
        "eating_now_score": 438.0,
        "has_source": true,
        "score": 4.410479545593262,
        "full_source_code": "package org.monkey.d.ruffy.ruffy.driver.display;\n\n/**\n * Created by fishermen21 on 22.05.17.\n */\n\npublic enum MenuAttribute {\n    RUNTIME,//runtime of current operation, remaining time on main menu\n    BOLUS,//double units\n    BOLUS_REMAINING,//double units remain from current bolus\n    TBR,//double 0-500%\n    BASAL_RATE,//double units/h\n    BASAL_SELECTED,//int selected basal profile\n    BATTERY_STATE,//int, like insulin state\n    INSULIN_STATE,//int insulin warning 0 == no warning, 1== low, 2 == empty\n    LOCK_STATE,//int keylock state 0==no lock, 1==unlocked, 2==locked\n    MULTIWAVE_BOLUS,//double immediate bolus on multiwave\n    BOLUS_TYPE,//BolusType, only history uses MULTIWAVE\n    TIME,//time MenuTime\n    REMAINING_INSULIN,//double units\n    DATE,//date MenuDate\n    CURRENT_RECORD,//int current record\n    TOTAL_RECORD, //int total num record\n    ERROR, //int errorcode\n    WARNING, //int errorcode\n    MESSAGE, //string errormessage\n    DAILY_TOTAL, //double units\n    BASAL_TOTAL, //double total basal\n    BASAL_START, //time MenuTime the basalrate starts\n    BASAL_END, // time MenuTime the basalrate ends\n    DEBUG_TIMING, //double with timing infos\n    WARANTY,  //boolean true if out of waranty\n    ERROR_OR_WARNING, // set if menu in blink during error/warning\n}\n",
        "key_snippets": "{}"
      },
      {
        "filename": "EventType.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.nssdk.localmodel.treatment",
        "eating_now_score": 648.0,
        "has_source": true,
        "score": 3.2466325759887695,
        "full_source_code": "package app.aaps.core.nssdk.localmodel.treatment\n\nimport com.google.gson.annotations.SerializedName\n\n@Suppress(\"unused\")\nenum class EventType(val text: String) {\n\n    @SerializedName(\"Site Change\") CANNULA_CHANGE(\"Site Change\"),\n    @SerializedName(\"Insulin Change\") INSULIN_CHANGE(\"Insulin Change\"),\n    @SerializedName(\"Pump Battery Change\") PUMP_BATTERY_CHANGE(\"Pump Battery Change\"),\n    @SerializedName(\"Sensor Change\") SENSOR_CHANGE(\"Sensor Change\"),\n    @SerializedName(\"Sensor Start\") SENSOR_STARTED(\"Sensor Start\"),\n    @SerializedName(\"Sensor Stop\") SENSOR_STOPPED(\"Sensor Stop\"),\n    @SerializedName(\"BG Check\") FINGER_STICK_BG_VALUE(\"BG Check\"),\n    @SerializedName(\"Exercise\") EXERCISE(\"Exercise\"),\n    @SerializedName(\"Announcement\") ANNOUNCEMENT(\"Announcement\"),\n    @SerializedName(\"SettingsExport\") SETTINGS_EXPORT(\"Settings Export\"),\n    @SerializedName(\"Question\") QUESTION(\"Question\"),\n    @SerializedName(\"Note\") NOTE(\"Note\"),\n    @SerializedName(\"OpenAPS Offline\") APS_OFFLINE(\"OpenAPS Offline\"),\n    @SerializedName(\"D.A.D. Alert\") DAD_ALERT(\"D.A.D. Alert\"),\n    @SerializedName(\"Mbg\") NS_MBG(\"Mbg\"),\n\n    // Used but not as a Therapy Event (use constants only)\n    @SerializedName(\"Carb Correction\") CARBS_CORRECTION(\"Carb Correction\"),\n    @SerializedName(\"Bolus Wizard\") BOLUS_WIZARD(\"Bolus Wizard\"),\n    @SerializedName(\"Correction Bolus\") CORRECTION_BOLUS(\"Correction Bolus\"),\n    @SerializedName(\"Meal Bolus\") MEAL_BOLUS(\"Meal Bolus\"),\n    @SerializedName(\"Combo Bolus\") COMBO_BOLUS(\"Combo Bolus\"),\n    @SerializedName(\"Temporary Target\") TEMPORARY_TARGET(\"Temporary Target\"),\n    @SerializedName(\"Temporary Target Cancel\") TEMPORARY_TARGET_CANCEL(\"Temporary Target Cancel\"),\n    @SerializedName(\"Profile Switch\") PROFILE_SWITCH(\"Profile Switch\"),\n    @SerializedName(\"Snack Bolus\") SNACK_BOLUS(\"Snack Bolus\"),\n    @SerializedName(\"Temp Basal\") TEMPORARY_BASAL(\"Temp Basal\"),\n    @SerializedName(\"Temp Basal Start\") TEMPORARY_BASAL_START(\"Temp Basal Start\"),\n    @SerializedName(\"Temp Basal End\") TEMPORARY_BASAL_END(\"Temp Basal End\"),\n\n    @SerializedName(\"\") ERROR(\"\"),\n    @SerializedName(\"<none>\") NONE(\"<none>\");\n\n    companion object {\n        fun fromString(text: String?) = entries.firstOrNull { it.text == text } ?: NONE\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "EventType.kt",
        "repository": "EN_old",
        "package": "app.aaps.core.nssdk.localmodel.treatment",
        "eating_now_score": 598.0,
        "has_source": true,
        "score": 3.2466325759887695,
        "full_source_code": "package app.aaps.core.nssdk.localmodel.treatment\n\nimport com.google.gson.annotations.SerializedName\n\n@Suppress(\"unused\")\nenum class EventType(val text: String) {\n\n    @SerializedName(\"Site Change\") CANNULA_CHANGE(\"Site Change\"),\n    @SerializedName(\"Insulin Change\") INSULIN_CHANGE(\"Insulin Change\"),\n    @SerializedName(\"Pump Battery Change\") PUMP_BATTERY_CHANGE(\"Pump Battery Change\"),\n    @SerializedName(\"Sensor Change\") SENSOR_CHANGE(\"Sensor Change\"),\n    @SerializedName(\"Sensor Start\") SENSOR_STARTED(\"Sensor Start\"),\n    @SerializedName(\"Sensor Stop\") SENSOR_STOPPED(\"Sensor Stop\"),\n    @SerializedName(\"BG Check\") FINGER_STICK_BG_VALUE(\"BG Check\"),\n    @SerializedName(\"Exercise\") EXERCISE(\"Exercise\"),\n    @SerializedName(\"Announcement\") ANNOUNCEMENT(\"Announcement\"),\n    @SerializedName(\"Question\") QUESTION(\"Question\"),\n    @SerializedName(\"Note\") NOTE(\"Note\"),\n    @SerializedName(\"OpenAPS Offline\") APS_OFFLINE(\"OpenAPS Offline\"),\n    @SerializedName(\"D.A.D. Alert\") DAD_ALERT(\"D.A.D. Alert\"),\n    @SerializedName(\"Mbg\") NS_MBG(\"Mbg\"),\n\n    // Used but not as a Therapy Event (use constants only)\n    @SerializedName(\"Carb Correction\") CARBS_CORRECTION(\"Carb Correction\"),\n    @SerializedName(\"Bolus Wizard\") BOLUS_WIZARD(\"Bolus Wizard\"),\n    @SerializedName(\"Correction Bolus\") CORRECTION_BOLUS(\"Correction Bolus\"),\n    @SerializedName(\"Meal Bolus\") MEAL_BOLUS(\"Meal Bolus\"),\n    @SerializedName(\"Combo Bolus\") COMBO_BOLUS(\"Combo Bolus\"),\n    @SerializedName(\"Temporary Target\") TEMPORARY_TARGET(\"Temporary Target\"),\n    @SerializedName(\"Temporary Target Cancel\") TEMPORARY_TARGET_CANCEL(\"Temporary Target Cancel\"),\n    @SerializedName(\"Profile Switch\") PROFILE_SWITCH(\"Profile Switch\"),\n    @SerializedName(\"Snack Bolus\") SNACK_BOLUS(\"Snack Bolus\"),\n    @SerializedName(\"Temp Basal\") TEMPORARY_BASAL(\"Temp Basal\"),\n    @SerializedName(\"Temp Basal Start\") TEMPORARY_BASAL_START(\"Temp Basal Start\"),\n    @SerializedName(\"Temp Basal End\") TEMPORARY_BASAL_END(\"Temp Basal End\"),\n\n    @SerializedName(\"\") ERROR(\"\"),\n    @SerializedName(\"<none>\") NONE(\"<none>\");\n\n    companion object {\n\n        fun fromString(text: String?) = values().firstOrNull { it.text == text } ?: NONE\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "EventType.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.core.nssdk.localmodel.treatment",
        "eating_now_score": 398.0,
        "has_source": true,
        "score": 3.2466325759887695,
        "full_source_code": "package app.aaps.core.nssdk.localmodel.treatment\n\nimport com.google.gson.annotations.SerializedName\n\n@Suppress(\"unused\")\nenum class EventType(val text: String) {\n\n    @SerializedName(\"Site Change\") CANNULA_CHANGE(\"Site Change\"),\n    @SerializedName(\"Insulin Change\") INSULIN_CHANGE(\"Insulin Change\"),\n    @SerializedName(\"Pump Battery Change\") PUMP_BATTERY_CHANGE(\"Pump Battery Change\"),\n    @SerializedName(\"Sensor Change\") SENSOR_CHANGE(\"Sensor Change\"),\n    @SerializedName(\"Sensor Start\") SENSOR_STARTED(\"Sensor Start\"),\n    @SerializedName(\"Sensor Stop\") SENSOR_STOPPED(\"Sensor Stop\"),\n    @SerializedName(\"BG Check\") FINGER_STICK_BG_VALUE(\"BG Check\"),\n    @SerializedName(\"Exercise\") EXERCISE(\"Exercise\"),\n    @SerializedName(\"Announcement\") ANNOUNCEMENT(\"Announcement\"),\n    @SerializedName(\"SettingsExport\") SETTINGS_EXPORT(\"Settings Export\"),\n    @SerializedName(\"Question\") QUESTION(\"Question\"),\n    @SerializedName(\"Note\") NOTE(\"Note\"),\n    @SerializedName(\"OpenAPS Offline\") APS_OFFLINE(\"OpenAPS Offline\"),\n    @SerializedName(\"D.A.D. Alert\") DAD_ALERT(\"D.A.D. Alert\"),\n    @SerializedName(\"Mbg\") NS_MBG(\"Mbg\"),\n\n    // Used but not as a Therapy Event (use constants only)\n    @SerializedName(\"Carb Correction\") CARBS_CORRECTION(\"Carb Correction\"),\n    @SerializedName(\"Bolus Wizard\") BOLUS_WIZARD(\"Bolus Wizard\"),\n    @SerializedName(\"Correction Bolus\") CORRECTION_BOLUS(\"Correction Bolus\"),\n    @SerializedName(\"Meal Bolus\") MEAL_BOLUS(\"Meal Bolus\"),\n    @SerializedName(\"Combo Bolus\") COMBO_BOLUS(\"Combo Bolus\"),\n    @SerializedName(\"Temporary Target\") TEMPORARY_TARGET(\"Temporary Target\"),\n    @SerializedName(\"Temporary Target Cancel\") TEMPORARY_TARGET_CANCEL(\"Temporary Target Cancel\"),\n    @SerializedName(\"Profile Switch\") PROFILE_SWITCH(\"Profile Switch\"),\n    @SerializedName(\"Snack Bolus\") SNACK_BOLUS(\"Snack Bolus\"),\n    @SerializedName(\"Temp Basal\") TEMPORARY_BASAL(\"Temp Basal\"),\n    @SerializedName(\"Temp Basal Start\") TEMPORARY_BASAL_START(\"Temp Basal Start\"),\n    @SerializedName(\"Temp Basal End\") TEMPORARY_BASAL_END(\"Temp Basal End\"),\n\n    @SerializedName(\"\") ERROR(\"\"),\n    @SerializedName(\"<none>\") NONE(\"<none>\");\n\n    companion object {\n        fun fromString(text: String?) = entries.firstOrNull { it.text == text } ?: NONE\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InjectionBlockReportPacket.kt",
        "repository": "EN_new",
        "package": "app.aaps.pump.diaconn.packet",
        "eating_now_score": 257.0,
        "has_source": true,
        "score": 2.8254175186157227,
        "full_source_code": "package app.aaps.pump.diaconn.packet\n\nimport app.aaps.core.interfaces.logging.LTag\nimport dagger.android.HasAndroidInjector\nimport app.aaps.pump.diaconn.DiaconnG8Pump\nimport javax.inject.Inject\n\n/**\n * InjectionBlockReportPacket\n */\nclass InjectionBlockReportPacket(\n    injector: HasAndroidInjector\n) : DiaconnG8Packet(injector) {\n\n    @Inject lateinit var diaconnG8Pump: DiaconnG8Pump\n\n    init {\n        msgType = 0xD8.toByte()\n        aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBlockReportPacket init \")\n    }\n\n    override fun handleMessage(data: ByteArray) {\n        val defectCheck = defect(data)\n        if (defectCheck != 0) {\n            aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBasalReportPacket Got some Error\")\n            failed = true\n            return\n        } else failed = false\n\n        val bufferData = prefixDecode(data)\n        diaconnG8Pump.injectionBlockGrade = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockProcess = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockRemainAmount = getShortToInt(bufferData) / 100.0\n        diaconnG8Pump.injectionBlockType = getByteToInt(bufferData)\n\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockGrade --> ${diaconnG8Pump.injectionBlockGrade} (1:info, 2: warning , 3: major , 4: critical)\")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockProcess --> ${diaconnG8Pump.injectionBlockProcess} (1:skip, 2: stop , 3: ignore ) \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockRemainAmount --> ${diaconnG8Pump.injectionBlockRemainAmount}  \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockType --> ${diaconnG8Pump.injectionBlockType} (1:basal, 2: meal , 3: normal , 4: square , 5:dual, 6:tube, 7:needle) \")\n    }\n\n    override val friendlyName = \"PUMP_INJECTION_BLOCK_REPORT\"\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InjectionBlockReportPacket.kt",
        "repository": "AAPS_source",
        "package": "app.aaps.pump.diaconn.packet",
        "eating_now_score": 7.0,
        "has_source": true,
        "score": 2.8254175186157227,
        "full_source_code": "package app.aaps.pump.diaconn.packet\n\nimport app.aaps.core.interfaces.logging.LTag\nimport dagger.android.HasAndroidInjector\nimport app.aaps.pump.diaconn.DiaconnG8Pump\nimport javax.inject.Inject\n\n/**\n * InjectionBlockReportPacket\n */\nclass InjectionBlockReportPacket(\n    injector: HasAndroidInjector\n) : DiaconnG8Packet(injector) {\n\n    @Inject lateinit var diaconnG8Pump: DiaconnG8Pump\n\n    init {\n        msgType = 0xD8.toByte()\n        aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBlockReportPacket init \")\n    }\n\n    override fun handleMessage(data: ByteArray) {\n        val defectCheck = defect(data)\n        if (defectCheck != 0) {\n            aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBasalReportPacket Got some Error\")\n            failed = true\n            return\n        } else failed = false\n\n        val bufferData = prefixDecode(data)\n        diaconnG8Pump.injectionBlockGrade = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockProcess = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockRemainAmount = getShortToInt(bufferData) / 100.0\n        diaconnG8Pump.injectionBlockType = getByteToInt(bufferData)\n\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockGrade --> ${diaconnG8Pump.injectionBlockGrade} (1:info, 2: warning , 3: major , 4: critical)\")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockProcess --> ${diaconnG8Pump.injectionBlockProcess} (1:skip, 2: stop , 3: ignore ) \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockRemainAmount --> ${diaconnG8Pump.injectionBlockRemainAmount}  \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockType --> ${diaconnG8Pump.injectionBlockType} (1:basal, 2: meal , 3: normal , 4: square , 5:dual, 6:tube, 7:needle) \")\n    }\n\n    override val friendlyName = \"PUMP_INJECTION_BLOCK_REPORT\"\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "InjectionBlockReportPacket.kt",
        "repository": "EN_old",
        "package": "info.nightscout.pump.diaconn.packet",
        "eating_now_score": 207.0,
        "has_source": true,
        "score": 2.7803022861480713,
        "full_source_code": "package info.nightscout.pump.diaconn.packet\n\nimport app.aaps.core.interfaces.logging.LTag\nimport dagger.android.HasAndroidInjector\nimport info.nightscout.pump.diaconn.DiaconnG8Pump\nimport javax.inject.Inject\n\n/**\n * InjectionBlockReportPacket\n */\nclass InjectionBlockReportPacket(\n    injector: HasAndroidInjector\n) : DiaconnG8Packet(injector) {\n\n    @Inject lateinit var diaconnG8Pump: DiaconnG8Pump\n\n    init {\n        msgType = 0xD8.toByte()\n        aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBlockReportPacket init \")\n    }\n\n    override fun handleMessage(data: ByteArray?) {\n        val defectCheck = defect(data)\n        if (defectCheck != 0) {\n            aapsLogger.debug(LTag.PUMPCOMM, \"InjectionBasalReportPacket Got some Error\")\n            failed = true\n            return\n        } else failed = false\n\n        val bufferData = prefixDecode(data)\n        diaconnG8Pump.injectionBlockGrade = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockProcess = getByteToInt(bufferData)\n        diaconnG8Pump.injectionBlockRemainAmount = getShortToInt(bufferData) / 100.0\n        diaconnG8Pump.injectionBlockType = getByteToInt(bufferData)\n\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockGrade --> ${diaconnG8Pump.injectionBlockGrade} (1:info, 2: warning , 3: major , 4: critical)\")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockProcess --> ${diaconnG8Pump.injectionBlockProcess} (1:skip, 2: stop , 3: ignore ) \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockReaminAmount --> ${diaconnG8Pump.injectionBlockRemainAmount}  \")\n        aapsLogger.debug(LTag.PUMPCOMM, \"injectionBlockType --> ${diaconnG8Pump.injectionBlockType} (1:basal, 2: meal , 3: normal , 4: square , 5:dual, 6:tube, 7:needle) \")\n    }\n\n    override fun getFriendlyName(): String {\n        return \"PUMP_INJECTION_BLOCK_REPORT\"\n    }\n}",
        "key_snippets": "{}"
      },
      {
        "filename": "RemoteTreatment.kt",
        "repository": "EN_new",
        "package": "app.aaps.core.nssdk.remotemodel",
        "eating_now_score": 962.0,
        "has_source": true,
        "score": 2.635676622390747,
        "full_source_code": "package app.aaps.core.nssdk.remotemodel\n\nimport com.google.gson.annotations.SerializedName\nimport app.aaps.core.nssdk.localmodel.treatment.EventType\nimport org.joda.time.DateTime\nimport org.joda.time.format.ISODateTimeFormat\n\n/*\n* Depending on the type, different other fields are present.\n* Those technically need to be optional.\n*\n* On upload a sanity check still needs to be done to verify that all mandatory fields for that type are there.\n*\n* TODO: Find out all types with their optional and mandatory fields\n*\n* */\ninternal data class RemoteTreatment(\n    @SerializedName(\"identifier\") val identifier: String?,       // string Main addressing, required field that identifies document in the collection. The client should not create the identifier, the server automatically assigns it when the document is inserted.\n    @SerializedName(\"date\") var date: Long? = null,                    // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix epoch in milliseconds (1525383610088), Unix epoch in seconds (1525383610), ISO 8601 with optional timezone ('2018-05-03T21:40:10.088Z' or '2018-05-03T23:40:10.088+02:00')\n    @SerializedName(\"mills\") val mills: Long? = null,                  // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix\n    @SerializedName(\"timestamp\") val timestamp: Long? = null,          // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix  epoch in milliseconds (1525383610088), Unix epoch in seconds (1525383610), ISO 8601 with optional timezone ('2018-05-03T21:40:10.088Z' or '2018-05-03T23:40:10.088+02:00')\n    @SerializedName(\"created_at\") val created_at: String? = null,       // integer($int64) or string timestamp on previous version of api, in my examples, a lot of treatments don't have date, only created_at, some of them with string others with long...\n    @SerializedName(\"utcOffset\") var utcOffset: Long? = null,          // integer Local UTC offset (timezone) of the event in minutes. This field can be set either directly by the client (in the incoming document) or it is automatically parsed from the date field.\n    @SerializedName(\"app\") var app : String? = null,                   // Application or system in which the record was entered by human or device for the first time.\n    @SerializedName(\"device\") val device: String? = null,              // string The device from which the data originated (including serial number of the device, if it is relevant and safe).\n    @SerializedName(\"srvCreated\") val srvCreated: Long? = null,         // integer($int64) example: 1525383610088 The server's timestamp of document insertion into the database (Unix epoch in ms). This field appears only for documents which were inserted by API v3.\n    @SerializedName(\"subject\") val subject: String? = null,            // string Name of the security subject (within Nightscout scope) which has created the document. This field is automatically set by the server from the passed token or JWT.\n    @SerializedName(\"srvModified\") val srvModified: Long? = null,       // integer($int64) example: 1525383610088 The server's timestamp of the last document modification in the database (Unix epoch in ms). This field appears only for documents which were somehow modified by API v3 (inserted, updated or deleted).\n    @SerializedName(\"modifiedBy\") val modifiedBy: String? = null,      // string Name of the security subject (within Nightscout scope) which has patched or deleted the document for the last time. This field is automatically set by the server.\n    @SerializedName(\"isValid\") val isValid: Boolean? = null,           // boolean A flag set by the server only for deleted documents. This field appears only within history operation and for documents which were deleted by API v3 (and they always have a false value)\n    @SerializedName(\"isReadOnly\") val isReadOnly: Boolean? = null,     // boolean A flag set by client that locks the document from any changes. Every document marked with isReadOnly=true is forever immutable and cannot even be deleted.\n    @SerializedName(\"eventType\") val eventType: EventType?,      // string \"BG Check\", \"Snack Bolus\", \"Meal Bolus\", \"Correction Bolus\", \"Carb Correction\", \"Combo Bolus\", \"Announcement\", \"Note\", \"Question\", \"Exercise\", \"Site Change\", \"Sensor Start\", \"Sensor Change\", \"Pump Battery Change\", \"Insulin Change\", \"Temp Basal\", \"Profile Switch\", \"D.A.D. Alert\", \"Temporary Target\", \"OpenAPS Offline\", \"Bolus Wizard\"\n    @SerializedName(\"glucose\") val glucose: Double? = null,            // double Current glucose\n    @SerializedName(\"glucoseType\") val glucoseType: String? = null,    // string example: \"Sensor\", \"Finger\", \"Manual\"\n    @SerializedName(\"units\") val units: String? = null,                // string The units for the glucose value, mg/dl or mmol/l. It is strongly recommended to fill in this field.\n    @SerializedName(\"carbs\") val carbs: Double? = null,                // number... Amount of carbs given.\n    @SerializedName(\"protein\") val protein: Int? = null,               // number... Amount of protein given.\n    @SerializedName(\"fat\") val fat: Int? = null,                       // number... Amount of fat given.\n    @SerializedName(\"insulin\") val insulin: Double? = null,            // number... Amount of insulin, if any.\n    @SerializedName(\"duration\") val duration: Long? = null,             // number... Duration in minutes.\n    @SerializedName(\"durationInMilliseconds\") val durationInMilliseconds: Long? = null, // number... Duration in milliseconds.\n    @SerializedName(\"preBolus\") val preBolus: Int? = null,             // number... How many minutes the bolus was given before the meal started.\n    @SerializedName(\"splitNow\") val splitNow: Int? = null,             // number... Immediate part of combo bolus (in percent).\n    @SerializedName(\"splitExt\") val splitExt: Int? = null,             // number... Extended part of combo bolus (in percent).\n    @SerializedName(\"percent\") val percent: Double? = null,            // number... Eventual basal change in percent.\n    @SerializedName(\"absolute\") val absolute: Double? = null,          // number... Eventual basal change in absolute value (insulin units per hour).\n    @SerializedName(\"targetTop\") val targetTop: Double? = null,        // number... Top limit of temporary target.\n    @SerializedName(\"targetBottom\") val targetBottom: Double? = null,  // number... Bottom limit of temporary target.\n    @SerializedName(\"profile\") val profile: String? = null,            // string Name of the profile to which the pump has been switched.\n    @SerializedName(\"reason\") val reason: String? = null,              // string For example the reason why the profile has been switched or why the temporary target has been set.\n    @SerializedName(\"notes\") val notes: String? = null,                // string Description/notes of treatment.\n    @SerializedName(\"enteredBy\") val enteredBy: String? = null,        // string Who entered the treatment.\n\n    @SerializedName(\"endId\") val endId: Long? = null,                  // long id of record which ended this\n    @SerializedName(\"pumpId\") val pumpId: Long? = null,                // long or \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" ex  4102 not sure if long or int\n    @SerializedName(\"pumpType\") val pumpType: String? = null,          // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" ex \"ACCU_CHEK_INSIGHT_BLUETOOTH\",\n    @SerializedName(\"pumpSerial\") val pumpSerial: String? = null,      // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" \"33013206\",\n\n    // other fields found in examples but not in documentation\n    @SerializedName(\"profileJson\") val profileJson: String? = null,            // string \"Profile Switch\" ex json toString \"{\\\"units\\\":\\\"mg\\\\/dl\\\",\\\"dia\\\":5,\\\"timezone\\\":\\\"Africa\\\\/Cairo\\\",\n    // \\\"sens\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":60},{\\\"time\\\":\\\"07:00\\\",\\\"timeAsSeconds\\\":25200,\\\"value\\\":60},{\\\"time\\\":\\\"08:00\\\",\\\"timeAsSeconds\\\":28800,\\\"value\\\":61.33333333333333},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":65.33333333333333},{\\\"time\\\":\\\"10:00\\\",\\\"timeAsSeconds\\\":36000,\\\"value\\\":69.33333333333333},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":73.33333333333333},{\\\"time\\\":\\\"13:00\\\",\\\"timeAsSeconds\\\":46800,\\\"value\\\":72},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":68},{\\\"time\\\":\\\"15:00\\\",\\\"timeAsSeconds\\\":54000,\\\"value\\\":65.33333333333333},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":65.33333333333333}],\\\"carbratio\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":5.7333333333333325},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":7.333333333333333},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":6.666666666666666}],\\\"basal\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":0.5249999999999999},{\\\"time\\\":\\\"01:00\\\",\\\"timeAsSeconds\\\":3600,\\\"value\\\":0.585},{\\\"time\\\":\\\"02:00\\\",\\\"timeAsSeconds\\\":7200,\\\"value\\\":0.6375},{\\\"time\\\":\\\"03:00\\\",\\\"timeAsSeconds\\\":10800,\\\"value\\\":0.5625},{\\\"time\\\":\\\"04:00\\\",\\\"timeAsSeconds\\\":14400,\\\"value\\\":0.4575},{\\\"time\\\":\\\"05:00\\\",\\\"timeAsSeconds\\\":18000,\\\"value\\\":0.5175},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":0.48},{\\\"time\\\":\\\"07:00\\\",\\\"timeAsSeconds\\\":25200,\\\"value\\\":0.51},{\\\"time\\\":\\\"08:00\\\",\\\"timeAsSeconds\\\":28800,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":0.48},{\\\"time\\\":\\\"10:00\\\",\\\"timeAsSeconds\\\":36000,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":0.5025000000000001},{\\\"time\\\":\\\"12:00\\\",\\\"timeAsSeconds\\\":43200,\\\"value\\\":0.5549999999999999},{\\\"time\\\":\\\"13:00\\\",\\\"timeAsSeconds\\\":46800,\\\"value\\\":0.5700000000000001},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":0.5700000000000001},{\\\"time\\\":\\\"15:00\\\",\\\"timeAsSeconds\\\":54000,\\\"value\\\":0.5775},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":0.51},{\\\"time\\\":\\\"17:00\\\",\\\"timeAsSeconds\\\":61200,\\\"value\\\":0.54},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"19:00\\\",\\\"timeAsSeconds\\\":68400,\\\"value\\\":0.5249999999999999},{\\\"time\\\":\\\"20:00\\\",\\\"timeAsSeconds\\\":72000,\\\"value\\\":0.46499999999999997},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":0.46499999999999997},{\\\"time\\\":\\\"22:00\\\",\\\"timeAsSeconds\\\":79200,\\\"value\\\":0.43499999999999994},{\\\"time\\\":\\\"23:00\\\",\\\"timeAsSeconds\\\":82800,\\\"value\\\":0.41250000000000003}],\\\"target_low\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":100},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":90},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":100},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":90},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":100},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":90},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":100}],\\\"target_high\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":100},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":90},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":100},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":90},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":100},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":90},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":100}]}\",\n    @SerializedName(\"originalProfileName\") val originalProfileName: String? = null, // string \"Effective Profile Switch\"\n    @SerializedName(\"originalCustomizedName\") val originalCustomizedName: String? = null, // string \"Effective Profile Switch\"\n    @SerializedName(\"originalTimeshift\") val originalTimeshift: Long? = null,  // long \"Effective Profile Switch\"\n    @SerializedName(\"originalPercentage\") val originalPercentage: Int? = null, // int \"Effective Profile Switch\"\n    @SerializedName(\"originalDuration\") val originalDuration: Long? = null,    // long \"Effective Profile Switch\"\n    @SerializedName(\"originalEnd\") val originalEnd: Long? = null,              // long \"Effective Profile Switch\"\n\n    @SerializedName(\"bolusCalculatorResult\") val bolusCalculatorResult: String? = null, // string \"Bolus Wizard\" json toString ex \"bolusCalculatorResult\": \"{\\\"basalIOB\\\":-0.247,\\\"bolusIOB\\\":-1.837,\\\"carbs\\\":45.0,\\\"carbsInsulin\\\":9.0,\\\"cob\\\":0.0,\\\"cobInsulin\\\":0.0,\\\"dateCreated\\\":1626202788810,\\\"glucoseDifference\\\":44.0,\\\"glucoseInsulin\\\":0.8979591836734694,\\\"glucoseTrend\\\":5.5,\\\"glucoseValue\\\":134.0,\\\"ic\\\":5.0,\\\"id\\\":331,\\\"interfaceIDs_backing\\\":{\\\"nightscoutId\\\":\\\"60ede2a4c574da0004a3869d\\\"},\\\"isValid\\\":true,\\\"isf\\\":49.0,\\\"note\\\":\\\"\\\",\\\"otherCorrection\\\":0.0,\\\"percentageCorrection\\\":90,\\\"profileName\\\":\\\"Tuned 13/01 90%Lyum\\\",\\\"superbolusInsulin\\\":0.0,\\\"targetBGHigh\\\":90.0,\\\"targetBGLow\\\":90.0,\\\"timestamp\\\":1626202783325,\\\"totalInsulin\\\":7.34,\\\"trendInsulin\\\":0.336734693877551,\\\"utcOffset\\\":7200000,\\\"version\\\":1,\\\"wasBasalIOBUsed\\\":true,\\\"wasBolusIOBUsed\\\":true,\\\"wasCOBUsed\\\":true,\\\"wasGlucoseUsed\\\":true,\\\"wasSuperbolusUsed\\\":false,\\\"wasTempTargetUsed\\\":false,\\\"wasTrendUsed\\\":true,\\\"wereCarbsUsed\\\":false}\",\n    @SerializedName(\"type\") val type: String? = null,                          // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\", \"Temp Basal\" type of bolus \"NORMAL\", \"SMB\", \"FAKE_EXTENDED\"\n    @SerializedName(\"isSMB\") val isSMB: Boolean? = null,                        // boolean \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\"\n    @SerializedName(\"enteredinsulin\") val enteredinsulin: Double? = null,      // number... \"Combo Bolus\" insulin is missing only enteredinsulin field found\n    @SerializedName(\"relative\") val relative: Double? = null,                  // number... \"Combo Bolus\", \"extendedEmulated\" (not in doc see below)\n    @SerializedName(\"isEmulatingTempBasal\") val isEmulatingTempBasal: Boolean? = null,  // boolean \"Combo Bolus\", \"extendedEmulated\" (not in doc see below)\n    @SerializedName(\"isAnnouncement\") val isAnnouncement: Boolean? = null,      // boolean \"Announcement\"\n    @SerializedName(\"rate\") val rate: Double? = null,                          // Double \"Temp Basal\" absolute rate (could be calculated with percent and profile information...)\n    @SerializedName(\"extendedEmulated\") var extendedEmulated: RemoteTreatment? = null,  // Gson of emulated EB\n    @SerializedName(\"timeshift\") val timeshift: Long? = null,                   // integer \"Profile Switch\"\n    @SerializedName(\"percentage\") val percentage: Int? = null,                 // integer \"Profile Switch\"\n    @SerializedName(\"isBasalInsulin\") val isBasalInsulin: Boolean? = null      // boolean \"Bolus\"\n) {\n\n    fun timestamp(): Long {\n        return date ?: mills ?: timestamp ?: created_at?. let { fromISODateString(created_at) } ?: 0L\n    }\n\n    private fun fromISODateString(isoDateString: String): Long =\n        try {\n            val parser = ISODateTimeFormat.dateTimeParser()\n            val dateTime = DateTime.parse(isoDateString, parser)\n            dateTime.toDate().time\n        } catch (e: Exception) {\n            0L\n        }\n}\n",
        "key_snippets": "{}"
      },
      {
        "filename": "RemoteTreatment.kt",
        "repository": "EN_old",
        "package": "app.aaps.core.nssdk.remotemodel",
        "eating_now_score": 912.0,
        "has_source": true,
        "score": 2.635676622390747,
        "full_source_code": "package app.aaps.core.nssdk.remotemodel\n\nimport com.google.gson.annotations.SerializedName\nimport app.aaps.core.nssdk.localmodel.treatment.EventType\nimport org.joda.time.DateTime\nimport org.joda.time.format.ISODateTimeFormat\n\n/*\n* Depending on the type, different other fields are present.\n* Those technically need to be optional.\n*\n* On upload a sanity check still needs to be done to verify that all mandatory fields for that type are there.\n*\n* TODO: Find out all types with their optional and mandatory fields\n*\n* */\ninternal data class RemoteTreatment(\n    @SerializedName(\"identifier\") val identifier: String?,       // string Main addressing, required field that identifies document in the collection. The client should not create the identifier, the server automatically assigns it when the document is inserted.\n    @SerializedName(\"date\") var date: Long? = null,                    // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix epoch in milliseconds (1525383610088), Unix epoch in seconds (1525383610), ISO 8601 with optional timezone ('2018-05-03T21:40:10.088Z' or '2018-05-03T23:40:10.088+02:00')\n    @SerializedName(\"mills\") val mills: Long? = null,                  // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix\n    @SerializedName(\"timestamp\") val timestamp: Long? = null,          // integer($int64) or string required timestamp when the record or event occurred, you can choose from three input formats Unix  epoch in milliseconds (1525383610088), Unix epoch in seconds (1525383610), ISO 8601 with optional timezone ('2018-05-03T21:40:10.088Z' or '2018-05-03T23:40:10.088+02:00')\n    @SerializedName(\"created_at\") val created_at: String? = null,       // integer($int64) or string timestamp on previous version of api, in my examples, a lot of treatments don't have date, only created_at, some of them with string others with long...\n    @SerializedName(\"utcOffset\") var utcOffset: Long? = null,          // integer Local UTC offset (timezone) of the event in minutes. This field can be set either directly by the client (in the incoming document) or it is automatically parsed from the date field.\n    @SerializedName(\"app\") var app : String? = null,                   // Application or system in which the record was entered by human or device for the first time.\n    @SerializedName(\"device\") val device: String? = null,              // string The device from which the data originated (including serial number of the device, if it is relevant and safe).\n    @SerializedName(\"srvCreated\") val srvCreated: Long? = null,         // integer($int64) example: 1525383610088 The server's timestamp of document insertion into the database (Unix epoch in ms). This field appears only for documents which were inserted by API v3.\n    @SerializedName(\"subject\") val subject: String? = null,            // string Name of the security subject (within Nightscout scope) which has created the document. This field is automatically set by the server from the passed token or JWT.\n    @SerializedName(\"srvModified\") val srvModified: Long? = null,       // integer($int64) example: 1525383610088 The server's timestamp of the last document modification in the database (Unix epoch in ms). This field appears only for documents which were somehow modified by API v3 (inserted, updated or deleted).\n    @SerializedName(\"modifiedBy\") val modifiedBy: String? = null,      // string Name of the security subject (within Nightscout scope) which has patched or deleted the document for the last time. This field is automatically set by the server.\n    @SerializedName(\"isValid\") val isValid: Boolean? = null,           // boolean A flag set by the server only for deleted documents. This field appears only within history operation and for documents which were deleted by API v3 (and they always have a false value)\n    @SerializedName(\"isReadOnly\") val isReadOnly: Boolean? = null,     // boolean A flag set by client that locks the document from any changes. Every document marked with isReadOnly=true is forever immutable and cannot even be deleted.\n    @SerializedName(\"eventType\") val eventType: EventType?,      // string \"BG Check\", \"Snack Bolus\", \"Meal Bolus\", \"Correction Bolus\", \"Carb Correction\", \"Combo Bolus\", \"Announcement\", \"Note\", \"Question\", \"Exercise\", \"Site Change\", \"Sensor Start\", \"Sensor Change\", \"Pump Battery Change\", \"Insulin Change\", \"Temp Basal\", \"Profile Switch\", \"D.A.D. Alert\", \"Temporary Target\", \"OpenAPS Offline\", \"Bolus Wizard\"\n    @SerializedName(\"glucose\") val glucose: Double? = null,            // double Current glucose\n    @SerializedName(\"glucoseType\") val glucoseType: String? = null,    // string example: \"Sensor\", \"Finger\", \"Manual\"\n    @SerializedName(\"units\") val units: String? = null,                // string The units for the glucose value, mg/dl or mmol/l. It is strongly recommended to fill in this field.\n    @SerializedName(\"carbs\") val carbs: Double? = null,                // number... Amount of carbs given.\n    @SerializedName(\"protein\") val protein: Int? = null,               // number... Amount of protein given.\n    @SerializedName(\"fat\") val fat: Int? = null,                       // number... Amount of fat given.\n    @SerializedName(\"insulin\") val insulin: Double? = null,            // number... Amount of insulin, if any.\n    @SerializedName(\"duration\") val duration: Long? = null,             // number... Duration in minutes.\n    @SerializedName(\"durationInMilliseconds\") val durationInMilliseconds: Long? = null, // number... Duration in milliseconds.\n    @SerializedName(\"preBolus\") val preBolus: Int? = null,             // number... How many minutes the bolus was given before the meal started.\n    @SerializedName(\"splitNow\") val splitNow: Int? = null,             // number... Immediate part of combo bolus (in percent).\n    @SerializedName(\"splitExt\") val splitExt: Int? = null,             // number... Extended part of combo bolus (in percent).\n    @SerializedName(\"percent\") val percent: Double? = null,            // number... Eventual basal change in percent.\n    @SerializedName(\"absolute\") val absolute: Double? = null,          // number... Eventual basal change in absolute value (insulin units per hour).\n    @SerializedName(\"targetTop\") val targetTop: Double? = null,        // number... Top limit of temporary target.\n    @SerializedName(\"targetBottom\") val targetBottom: Double? = null,  // number... Bottom limit of temporary target.\n    @SerializedName(\"profile\") val profile: String? = null,            // string Name of the profile to which the pump has been switched.\n    @SerializedName(\"reason\") val reason: String? = null,              // string For example the reason why the profile has been switched or why the temporary target has been set.\n    @SerializedName(\"notes\") val notes: String? = null,                // string Description/notes of treatment.\n    @SerializedName(\"enteredBy\") val enteredBy: String? = null,        // string Who entered the treatment.\n\n    @SerializedName(\"endId\") val endId: Long? = null,                  // long id of record which ended this\n    @SerializedName(\"pumpId\") val pumpId: Long? = null,                // long or \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" ex  4102 not sure if long or int\n    @SerializedName(\"pumpType\") val pumpType: String? = null,          // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" ex \"ACCU_CHEK_INSIGHT_BLUETOOTH\",\n    @SerializedName(\"pumpSerial\") val pumpSerial: String? = null,      // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\" \"33013206\",\n\n    // other fields found in examples but not in documentation\n    @SerializedName(\"profileJson\") val profileJson: String? = null,            // string \"Profile Switch\" ex json toString \"{\\\"units\\\":\\\"mg\\\\/dl\\\",\\\"dia\\\":5,\\\"timezone\\\":\\\"Africa\\\\/Cairo\\\",\n    // \\\"sens\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":60},{\\\"time\\\":\\\"07:00\\\",\\\"timeAsSeconds\\\":25200,\\\"value\\\":60},{\\\"time\\\":\\\"08:00\\\",\\\"timeAsSeconds\\\":28800,\\\"value\\\":61.33333333333333},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":65.33333333333333},{\\\"time\\\":\\\"10:00\\\",\\\"timeAsSeconds\\\":36000,\\\"value\\\":69.33333333333333},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":73.33333333333333},{\\\"time\\\":\\\"13:00\\\",\\\"timeAsSeconds\\\":46800,\\\"value\\\":72},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":68},{\\\"time\\\":\\\"15:00\\\",\\\"timeAsSeconds\\\":54000,\\\"value\\\":65.33333333333333},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":65.33333333333333}],\\\"carbratio\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":5.7333333333333325},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":7.333333333333333},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":6.666666666666666}],\\\"basal\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":0.5249999999999999},{\\\"time\\\":\\\"01:00\\\",\\\"timeAsSeconds\\\":3600,\\\"value\\\":0.585},{\\\"time\\\":\\\"02:00\\\",\\\"timeAsSeconds\\\":7200,\\\"value\\\":0.6375},{\\\"time\\\":\\\"03:00\\\",\\\"timeAsSeconds\\\":10800,\\\"value\\\":0.5625},{\\\"time\\\":\\\"04:00\\\",\\\"timeAsSeconds\\\":14400,\\\"value\\\":0.4575},{\\\"time\\\":\\\"05:00\\\",\\\"timeAsSeconds\\\":18000,\\\"value\\\":0.5175},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":0.48},{\\\"time\\\":\\\"07:00\\\",\\\"timeAsSeconds\\\":25200,\\\"value\\\":0.51},{\\\"time\\\":\\\"08:00\\\",\\\"timeAsSeconds\\\":28800,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":0.48},{\\\"time\\\":\\\"10:00\\\",\\\"timeAsSeconds\\\":36000,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":0.5025000000000001},{\\\"time\\\":\\\"12:00\\\",\\\"timeAsSeconds\\\":43200,\\\"value\\\":0.5549999999999999},{\\\"time\\\":\\\"13:00\\\",\\\"timeAsSeconds\\\":46800,\\\"value\\\":0.5700000000000001},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":0.5700000000000001},{\\\"time\\\":\\\"15:00\\\",\\\"timeAsSeconds\\\":54000,\\\"value\\\":0.5775},{\\\"time\\\":\\\"16:00\\\",\\\"timeAsSeconds\\\":57600,\\\"value\\\":0.51},{\\\"time\\\":\\\"17:00\\\",\\\"timeAsSeconds\\\":61200,\\\"value\\\":0.54},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":0.48750000000000004},{\\\"time\\\":\\\"19:00\\\",\\\"timeAsSeconds\\\":68400,\\\"value\\\":0.5249999999999999},{\\\"time\\\":\\\"20:00\\\",\\\"timeAsSeconds\\\":72000,\\\"value\\\":0.46499999999999997},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":0.46499999999999997},{\\\"time\\\":\\\"22:00\\\",\\\"timeAsSeconds\\\":79200,\\\"value\\\":0.43499999999999994},{\\\"time\\\":\\\"23:00\\\",\\\"timeAsSeconds\\\":82800,\\\"value\\\":0.41250000000000003}],\\\"target_low\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":100},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":90},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":100},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":90},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":100},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":90},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":100}],\\\"target_high\\\":[{\\\"time\\\":\\\"00:00\\\",\\\"timeAsSeconds\\\":0,\\\"value\\\":100},{\\\"time\\\":\\\"06:00\\\",\\\"timeAsSeconds\\\":21600,\\\"value\\\":90},{\\\"time\\\":\\\"09:00\\\",\\\"timeAsSeconds\\\":32400,\\\"value\\\":100},{\\\"time\\\":\\\"11:00\\\",\\\"timeAsSeconds\\\":39600,\\\"value\\\":90},{\\\"time\\\":\\\"14:00\\\",\\\"timeAsSeconds\\\":50400,\\\"value\\\":100},{\\\"time\\\":\\\"18:00\\\",\\\"timeAsSeconds\\\":64800,\\\"value\\\":90},{\\\"time\\\":\\\"21:00\\\",\\\"timeAsSeconds\\\":75600,\\\"value\\\":100}]}\",\n    @SerializedName(\"originalProfileName\") val originalProfileName: String? = null, // string \"Effective Profile Switch\"\n    @SerializedName(\"originalCustomizedName\") val originalCustomizedName: String? = null, // string \"Effective Profile Switch\"\n    @SerializedName(\"originalTimeshift\") val originalTimeshift: Long? = null,  // long \"Effective Profile Switch\"\n    @SerializedName(\"originalPercentage\") val originalPercentage: Int? = null, // int \"Effective Profile Switch\"\n    @SerializedName(\"originalDuration\") val originalDuration: Long? = null,    // long \"Effective Profile Switch\"\n    @SerializedName(\"originalEnd\") val originalEnd: Long? = null,              // long \"Effective Profile Switch\"\n\n    @SerializedName(\"bolusCalculatorResult\") val bolusCalculatorResult: String? = null, // string \"Bolus Wizard\" json toString ex \"bolusCalculatorResult\": \"{\\\"basalIOB\\\":-0.247,\\\"bolusIOB\\\":-1.837,\\\"carbs\\\":45.0,\\\"carbsInsulin\\\":9.0,\\\"cob\\\":0.0,\\\"cobInsulin\\\":0.0,\\\"dateCreated\\\":1626202788810,\\\"glucoseDifference\\\":44.0,\\\"glucoseInsulin\\\":0.8979591836734694,\\\"glucoseTrend\\\":5.5,\\\"glucoseValue\\\":134.0,\\\"ic\\\":5.0,\\\"id\\\":331,\\\"interfaceIDs_backing\\\":{\\\"nightscoutId\\\":\\\"60ede2a4c574da0004a3869d\\\"},\\\"isValid\\\":true,\\\"isf\\\":49.0,\\\"note\\\":\\\"\\\",\\\"otherCorrection\\\":0.0,\\\"percentageCorrection\\\":90,\\\"profileName\\\":\\\"Tuned 13/01 90%Lyum\\\",\\\"superbolusInsulin\\\":0.0,\\\"targetBGHigh\\\":90.0,\\\"targetBGLow\\\":90.0,\\\"timestamp\\\":1626202783325,\\\"totalInsulin\\\":7.34,\\\"trendInsulin\\\":0.336734693877551,\\\"utcOffset\\\":7200000,\\\"version\\\":1,\\\"wasBasalIOBUsed\\\":true,\\\"wasBolusIOBUsed\\\":true,\\\"wasCOBUsed\\\":true,\\\"wasGlucoseUsed\\\":true,\\\"wasSuperbolusUsed\\\":false,\\\"wasTempTargetUsed\\\":false,\\\"wasTrendUsed\\\":true,\\\"wereCarbsUsed\\\":false}\",\n    @SerializedName(\"type\") val type: String? = null,                          // string \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\", \"Temp Basal\" type of bolus \"NORMAL\", \"SMB\", \"FAKE_EXTENDED\"\n    @SerializedName(\"isSMB\") val isSMB: Boolean? = null,                        // boolean \"Meal Bolus\", \"Correction Bolus\", \"Combo Bolus\"\n    @SerializedName(\"enteredinsulin\") val enteredinsulin: Double? = null,      // number... \"Combo Bolus\" insulin is missing only enteredinsulin field found\n    @SerializedName(\"relative\") val relative: Double? = null,                  // number... \"Combo Bolus\", \"extendedEmulated\" (not in doc see below)\n    @SerializedName(\"isEmulatingTempBasal\") val isEmulatingTempBasal: Boolean? = null,  // boolean \"Combo Bolus\", \"extendedEmulated\" (not in doc see below)\n    @SerializedName(\"isAnnouncement\") val isAnnouncement: Boolean? = null,      // boolean \"Announcement\"\n    @SerializedName(\"rate\") val rate: Double? = null,                          // Double \"Temp Basal\" absolute rate (could be calculated with percent and profile information...)\n    @SerializedName(\"extendedEmulated\") var extendedEmulated: RemoteTreatment? = null,  // Gson of emulated EB\n    @SerializedName(\"timeshift\") val timeshift: Long? = null,                   // integer \"Profile Switch\"\n    @SerializedName(\"percentage\") val percentage: Int? = null,                 // integer \"Profile Switch\"\n    @SerializedName(\"isBasalInsulin\") val isBasalInsulin: Boolean? = null      // boolean \"Bolus\"\n) {\n\n    fun timestamp(): Long {\n        return date ?: mills ?: timestamp ?: created_at?. let { fromISODateString(created_at) } ?: 0L\n    }\n\n    private fun fromISODateString(isoDateString: String): Long =\n        try {\n            val parser = ISODateTimeFormat.dateTimeParser()\n            val dateTime = DateTime.parse(isoDateString, parser)\n            dateTime.toDate().time\n        } catch (e: Exception) {\n            0L\n        }\n}\n",
        "key_snippets": "{}"
      }
    ]
  }
}